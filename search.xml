<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[今日头条、抖音推荐算法原理全文详解--笔记]]></title>
      <url>http://www.wulai.me/2019/11/06/%E4%BB%8A%E6%97%A5%E5%A4%B4%E6%9D%A1%E3%80%81%E6%8A%96%E9%9F%B3%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86%E5%85%A8%E6%96%87%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><em>原文:</em> (今日头条、抖音推荐算法原理全文详解) <a href="https://mp.weixin.qq.com/s/e0KgNOn3vIKn-nc1l-XBqw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/e0KgNOn3vIKn-nc1l-XBqw</a></p>
<h2 id="1、系统概览"><a href="#1、系统概览" class="headerlink" title="1、系统概览"></a>1、系统概览</h2><h3 id="1-1）推荐系统"><a href="#1-1）推荐系统" class="headerlink" title="1.1）推荐系统"></a>1.1）推荐系统</h3><p>推荐系统就是拟合一个用户对内容满意度的函数，这个函数需要输入三个维度的变量：</p>
<ul>
<li>内容特征：提取不同内容类型的特征做好推荐。</li>
<li>用户特征：兴趣标签，职业、年龄、性别等。</li>
<li>环境特征：在工作场合、通勤、旅游等不同的场景，信息偏好有所偏移。<img title="推荐系统匹配函数" alt="推荐系统匹配函数" src="http://res.hillock.com.cn/wulai/images/今日头条/推荐系统匹配.webp">

</li>
</ul>
<h3 id="1-2）推荐系统的目标"><a href="#1-2）推荐系统的目标" class="headerlink" title="1.2）推荐系统的目标"></a>1.2）推荐系统的目标</h3><ul>
<li>可量化目标：点击率、阅读时间、点赞、评论、转发包括点赞</li>
<li>无法直接衡量的目标<ul>
<li>广告&amp;特型内容频控</li>
<li>低俗内容打压&amp;频控</li>
<li>标题党，低质，恶心内容打压</li>
<li>重要新闻置顶&amp;强插&amp;加权</li>
<li>低级别账号内容降权</li>
</ul>
</li>
</ul>
<h3 id="1-3）典型推荐算法"><a href="#1-3）典型推荐算法" class="headerlink" title="1.3）典型推荐算法"></a>1.3）典型推荐算法</h3><ul>
<li>协同过滤模型</li>
<li>监督学习算法Logistic Regression模型</li>
<li>基于深度学习的模型</li>
<li>Factorization Machine</li>
<li>GBDT</li>
</ul>
<p><em>注：需要非常灵活的算法实验平台，可以支持多种算法组合，包括模型结构调整。</em></p>
<h3 id="1-4）推荐特征"><a href="#1-4）推荐特征" class="headerlink" title="1.4）推荐特征"></a>1.4）推荐特征</h3><ul>
<li>第一类是相关性特征</li>
</ul>
<p>评估内容的属性和与用户是否匹配.<code>显性的匹配</code>包括关键词匹配、分类匹配、来源匹配、主题匹配等.<code>隐性匹配</code>从用户向量与内容向量的距离可以得出,如FM模型。</p>
<ul>
<li>第二类是环境特征</li>
</ul>
<p>包括地理位置、时间。这些既是bias特征，也能以此构建一些匹配特征。</p>
<ul>
<li>第三类是热度特征</li>
</ul>
<p>包括全局热度、分类热度，主题热度，以及关键词热度等。内容热度信息在大的推荐系统特别在用户冷启动的时候非常有效。</p>
<ul>
<li>第四类是协同特征</li>
</ul>
<p>它可以在部分程度上帮助解决所谓算法越推越窄的问题。通过用户行为分析不同用户间相似性，比如点击相似、兴趣分类相似、主题相似、兴趣词相似，甚至向量相似，从而扩展模型的探索能力。</p>
<h3 id="1-5）模型训练"><a href="#1-5）模型训练" class="headerlink" title="1.5）模型训练"></a>1.5）模型训练</h3><ol>
<li>线上服务器记录实时特征</li>
<li>导入到Kafka文件队列中</li>
<li>客户端回传推荐的label构造训练样本</li>
<li>根据最新样本进行在线训练更新模型参数</li>
<li>线上模型得到更新</li>
</ol>
<h3 id="1-6）召回策略"><a href="#1-6）召回策略" class="headerlink" title="1.6）召回策略"></a>1.6）召回策略</h3><ul>
<li>为什么需要召回策略？<ul>
<li>内容量非常大，加上小视频内容有千万级别，推荐系统不可能所有内容全部由模型预估。</li>
<li>召回策略，每次推荐时从海量内容中筛选出千级别的内容库</li>
<li>召回策略最重要的要求是性能要极致，一般超时不能超过50毫秒</li>
</ul>
</li>
<li>召回策略的方案<ul>
<li>离线维护一个倒排。key可以是分类，topic，实体，来源等。</li>
<li>排序考虑热度、新鲜度、动作等</li>
<li>线上召回可以迅速从倒排中根据用户兴趣标签对内容做截断，高效的从很大的内容库中筛选比较靠谱的一小部分内容</li>
</ul>
</li>
</ul>
<h3 id="1-7）推荐系统的数据依赖"><a href="#1-7）推荐系统的数据依赖" class="headerlink" title="1.7）推荐系统的数据依赖"></a>1.7）推荐系统的数据依赖</h3><ul>
<li>推荐模型的特征抽取需要用户侧和内容侧的各种标签。</li>
<li>召回侧需要获取用户侧和内容侧的各种标签。</li>
<li>内容分析和用户标签挖掘是搭建推荐系统的基石。</li>
</ul>
<h2 id="2、内容分析"><a href="#2、内容分析" class="headerlink" title="2、内容分析"></a>2、内容分析</h2><h3 id="2-1-文本分析"><a href="#2-1-文本分析" class="headerlink" title="2.1 文本分析"></a>2.1 文本分析</h3><ul>
<li>推荐系统的应用<ul>
<li>用户兴趣建模（user profile）: 如：给喜欢阅读”互联网”文章打上“互联网”标签。</li>
<li>帮助内容推荐: “魅族”的内容推荐给关心“魅族”的用户</li>
<li>生成频道内容: “德甲”的内容进“德甲频道”</li>
</ul>
</li>
<li>今日头条抽取的文本特征<ul>
<li>语义标签类特征<ul>
<li>显式语义特征: 为文章打上语义标签。这部分标签是由人定义的特征，每个标签有明确的意义，标签体系是预定义的。</li>
<li>隐式语义特征：主要是topic特征和关键词特征，其中topic特征是对于词概率分布的描述，无明确意义；而关键词特征会基于一些统一特征描述，无明确集合。</li>
</ul>
</li>
<li>文本相似度特征: 用户反馈最大的问题之一就是为什么总推荐重复的内容。这个问题的难点在于，每个人对重复的定义不一样。</li>
<li>质量相关特征: 判断内容是否低俗，色情，是否是软文，鸡汤？</li>
</ul>
</li>
</ul>
<h3 id="2-2-头条语义标签的-特征-amp-使用场景"><a href="#2-2-头条语义标签的-特征-amp-使用场景" class="headerlink" title="2.2 头条语义标签的 特征 &amp; 使用场景"></a>2.2 头条语义标签的 特征 &amp; 使用场景</h3><ul>
<li>分类：user profile; 过滤频道内容； 推荐召回； 推荐特征</li>
<li>概念：过滤频道内容； 标签搜索；推荐召回（Like）</li>
<li>实体：过滤频道内容；标签搜索；推荐召回（Like）</li>
</ul>
<h3 id="2-3-标签分层"><a href="#2-3-标签分层" class="headerlink" title="2.3 标签分层"></a>2.3 标签分层</h3><ul>
<li>每个层级粒度不一样，要求也有区别</li>
<li>分类体系要求覆盖全，希望任何一篇文章，总能找到合适的分类，精确性要求不高</li>
<li>实体体系不要求覆盖全，只要覆盖每个领域人们的人物、机构，作品，产品即可</li>
<li>概念体系负责表达比较精确，但是有属于抽象概念的语义，也不要求覆盖全</li>
</ul>
<blockquote>
<p>分类的目标是覆盖全面，希望每篇内容每段视频都有分类；而实体体系要求精准，相同名字或内容要能明确区分究竟指代哪一个人或物，但不用覆盖很全。</p>
</blockquote>
<blockquote>
<p>概念体系则负责解决比较精确又属于抽象概念的语义。</p>
</blockquote>
<h3 id="2-4-为什么要语义标签"><a href="#2-4-为什么要语义标签" class="headerlink" title="2.4 为什么要语义标签"></a>2.4 为什么要语义标签</h3><p>优点：</p>
<ul>
<li>隐式语义特征已经可以很好的帮助推荐</li>
<li>语义标签做好的难度和资源投入远大于隐式语义特征<br>缺点：</li>
<li>频道，兴趣表达等重要产品功能需要有一个有明确定义，容易理解的文本标签体系。</li>
<li>语义标签的效果是检查一个公司NLP技术水平的试金石</li>
</ul>
<p><em>语义标签的效果是检查一个公司NLP技术水平的试金石。</em></p>
<ul>
<li>元分类器类型: SVM、CNN、RNN</li>
</ul>
<h3 id="2-2-图片分析"><a href="#2-2-图片分析" class="headerlink" title="2.2 图片分析"></a>2.2 图片分析</h3><h3 id="2-3-视频分析"><a href="#2-3-视频分析" class="headerlink" title="2.3 视频分析"></a>2.3 视频分析</h3><h2 id="3、用户标签"><a href="#3、用户标签" class="headerlink" title="3、用户标签"></a>3、用户标签</h2><h3 id="3-1-兴趣特征"><a href="#3-1-兴趣特征" class="headerlink" title="3.1 兴趣特征"></a>3.1 兴趣特征</h3><ul>
<li>感兴趣的类别和主题</li>
<li>感兴趣的关键词</li>
<li>感兴趣的来源</li>
<li>基于感兴趣额的用户聚类</li>
<li>各种垂直兴趣特征（车型，体育球队，股票等）</li>
</ul>
<h3 id="3-2-身份特征"><a href="#3-2-身份特征" class="headerlink" title="3.2 身份特征"></a>3.2 身份特征</h3><ul>
<li>性别</li>
</ul>
<p>性别信息通过用户第三方社交账号登录得到</p>
<ul>
<li>年龄</li>
</ul>
<p>年龄信息通常由模型预测，通过机型、阅读时间分布等预估。</p>
<ul>
<li>常驻点</li>
</ul>
<p>常驻地点来自用户授权访问位置信息，在位置信息的基础上通过传统聚类的方法拿到常驻点。<br>常驻点结合其他信息，可以推测用户的工作地点、出差地点、旅游地点。</p>
<h3 id="3-3-行为特征"><a href="#3-3-行为特征" class="headerlink" title="3.3 行为特征"></a>3.3 行为特征</h3><ul>
<li>晚上才看电视</li>
<li>打开手机时间</li>
</ul>
<h3 id="3-4-对浏览内容标签进行数据处理策略"><a href="#3-4-对浏览内容标签进行数据处理策略" class="headerlink" title="3.4 对浏览内容标签进行数据处理策略"></a>3.4 对浏览内容标签进行数据处理策略</h3><ul>
<li>过滤噪声。通过停留时间短的点击，过滤标题党。</li>
<li>热点惩罚。对用户在一些热门文章（如前段时间PG One的新闻）上的动作做降权处理。理论上，传播范围较大的内容，置信度会下降。</li>
<li>时间衰减。用户兴趣会发生偏移，因此策略更偏向新的用户行为。因此，随着用户动作的增加，老的特征权重会随时间衰减，新动作贡献的特征权重会更大。</li>
<li>惩罚展现。如果一篇推荐给用户的文章没有被点击，相关特征（类别，关键词，来源）权重会被惩罚。当然同时，也要考虑全局背景，是不是相关内容推送比较多，以及相关的关闭和dislike信号等。</li>
</ul>
<h3 id="3-5-用户标签挖掘"><a href="#3-5-用户标签挖掘" class="headerlink" title="3.5 用户标签挖掘"></a>3.5 用户标签挖掘</h3><ul>
<li><p>第一版: 用户标签批量计算框架</p>
<ol>
<li>Scribe收集原始日志</li>
<li>导入Kafka文件队列</li>
<li>导入Hadoop集群</li>
<li>MapReduce Job批量计算</li>
<li>写入高性能分布式存储系统</li>
<li>线上读取高性能分布式存储系统</li>
</ol>
</li>
<li><p>第二版: 用户标签流式计算框架</p>
<ol>
<li>Scribe收集原始日志</li>
<li>导入Kafka文件队列</li>
<li>导入Storm集群</li>
<li>从高性能存储系统读取base</li>
<li>基于动作bath更新用户模型</li>
<li>线上直接读取高性能存储系统</li>
</ol>
</li>
<li><p>流失计算和批量混合使用</p>
<ul>
<li><p>大部分user profile采用流式计算</p>
<ul>
<li>各个粒度的兴趣标签</li>
<li>垂直领域profile</li>
</ul>
</li>
<li><p>对时效性不敏感的user profile采用Batch计算</p>
<ul>
<li>性别，年龄</li>
<li>常驻地点</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="4、评估更新"><a href="#4、评估更新" class="headerlink" title="4、评估更新"></a>4、评估更新</h2><p><code>一个事情没法评估就没法优化</code></p>
<h3 id="4-1-对推荐系统产生影响的因数"><a href="#4-1-对推荐系统产生影响的因数" class="headerlink" title="4.1 对推荐系统产生影响的因数"></a>4.1 对推荐系统产生影响的因数</h3><ul>
<li>候选内容集合的变化</li>
<li>召回模块的改进和增加</li>
<li>推荐特征的增加</li>
<li>推荐系统架构的改进</li>
<li>算法参数的优化</li>
<li>规则策略的改变</li>
</ul>
<h3 id="4-2-评估系统要求"><a href="#4-2-评估系统要求" class="headerlink" title="4.2 评估系统要求"></a>4.2 评估系统要求</h3><ul>
<li>完备的评估系统</li>
<li>强大的实验平台</li>
<li>易用的实验分析工具</li>
</ul>
<h3 id="4-3-推荐系统评估需要注意的问题"><a href="#4-3-推荐系统评估需要注意的问题" class="headerlink" title="4.3 推荐系统评估需要注意的问题"></a>4.3 推荐系统评估需要注意的问题</h3><ul>
<li>兼顾短期指标与长期指标</li>
<li>要兼顾用户指标和生态指标</li>
<li>注意协同效应的影响，有时候需要彻底的统计隔离</li>
</ul>
<h3 id="4-4-强大实验平台的优点"><a href="#4-4-强大实验平台的优点" class="headerlink" title="4.4 强大实验平台的优点"></a>4.4 强大实验平台的优点</h3><ul>
<li>同时在线的实验多: 每天数百个</li>
<li>高效管理和分配实验流量</li>
<li>降低实验，分析成本，提高算法迭代效率</li>
</ul>
<h3 id="4-5-人工抽样评估分析"><a href="#4-5-人工抽样评估分析" class="headerlink" title="4.5 人工抽样评估分析"></a>4.5 人工抽样评估分析</h3><ul>
<li>线上实验平台只能通过指标变化推测用户体验</li>
<li>数据指标和用户体验存在差异</li>
<li>重大改进需要人工评估二次确认</li>
<li>头条利用内部和外包团队进行例行的人工抽样评估</li>
</ul>
<h2 id="5-内容安全"><a href="#5-内容安全" class="headerlink" title="5 内容安全"></a>5 内容安全</h2><h3 id="5-1-头条内容安全机制"><a href="#5-1-头条内容安全机制" class="headerlink" title="5.1 头条内容安全机制"></a>5.1 头条内容安全机制</h3><img title="内容安全机制" alt="内容安全机制" src="http://res.hillock.com.cn/wulai/images/今日头条/今日头条-内容安全机制.webp">

<h3 id="5-2-分享内容识别技术"><a href="#5-2-分享内容识别技术" class="headerlink" title="5.2 分享内容识别技术"></a>5.2 分享内容识别技术</h3><ul>
<li>鉴黄模型</li>
<li>谩骂模型</li>
<li>低俗模型</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注重召回率，准确率甚至可以牺牲一些。谩骂模型的样本库同样超过百万，召回率高达95%+，准确率80%+。如果用户经常出言不讳或者不当的评论，我们有一些惩罚机制。</span><br></pre></td></tr></table></figure>

<h3 id="5-3-泛低质内容识别技术"><a href="#5-3-泛低质内容识别技术" class="headerlink" title="5.3 泛低质内容识别技术"></a>5.3 泛低质内容识别技术</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">像假新闻、黑稿、题文不符、标题党、内容质量低等等，这部分内容由机器理解是非常难的，需要大量反馈信息，包括其他样本信息比对</span><br></pre></td></tr></table></figure>

<ul>
<li>低质模型是通过对评论做情感分析，结合用户其它的负反馈信息（举报、不感兴趣、踩）等信息，来解决很多语义上的低质问题，诸如题文不符、有头无尾、拼凑编造、黒稿谣言等</li>
<li>目前低质模型的准确率为70%，召回率为60%，结合人工复审召回率能做到95%</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 推荐系统 近日头条 抖音 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[图片居中]]></title>
      <url>http://www.wulai.me/2019/04/08/%E5%9B%BE%E7%89%87%E5%B1%85%E4%B8%AD/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;ttt.jpg&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">.pic &#123;</span><br><span class="line"></span><br><span class="line">  width:182px;</span><br><span class="line">  height:277px;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line"></span><br><span class="line">  img &#123;</span><br><span class="line">    //width: 100%;</span><br><span class="line">    //height: 4.61333rem;</span><br><span class="line"></span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 100%;</span><br><span class="line">    object-fit:cover;</span><br><span class="line">    /*object-fit:none;*/ //none则不改变图片原始尺寸</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[RSYNC TO EXFAT DRIVE]]></title>
      <url>http://www.wulai.me/2018/12/29/RSYNC-TO-EXFAT-DRIVE/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>RSYNC TO EXFAT DRIVE<br>These options are friendly to sync to/from an ExFAT drive:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -vrltD --progress --stats /source/a/ /dest/a</span><br></pre></td></tr></table></figure>

<p><code>-vrltD</code><br>options from <code>-a</code> friendly with EXFAT.</p>
<p>non-ExFAT rsync:<br>If one uses the standard rsync options like:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -a</span><br></pre></td></tr></table></figure>

<p>they don’t work with an EXFAT drive. You’ll get errors like:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RSYNC: MKSTEMP … FAILED: FUNCTION NOT IMPLEMENTED (38)</span><br></pre></td></tr></table></figure>

<p>because EXFAT doesn’t understand permissions, owners, or groups.</p>
<p>RSYNC PROGRESS INDICATOR<br>In general, rsync progress can be observed on a per-file basis using commands starting with:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -av --progress</span><br></pre></td></tr></table></figure>

<p>Overall rsync progress can be observed by:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -a --info=progress2</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[四十二首古典吉他经典之作]]></title>
      <url>http://www.wulai.me/2018/12/11/%E5%9B%9B%E5%8D%81%E4%BA%8C%E9%A6%96%E5%8F%A4%E5%85%B8%E5%90%89%E4%BB%96%E7%BB%8F%E5%85%B8%E4%B9%8B%E4%BD%9C/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h5 id="1、《阿尔汉布拉宫的回忆》——塔雷加"><a href="#1、《阿尔汉布拉宫的回忆》——塔雷加" class="headerlink" title="1、《阿尔汉布拉宫的回忆》——塔雷加"></a>1、《阿尔汉布拉宫的回忆》——塔雷加</h5><pre><code>  这是被尊称为“近代吉他音乐之父”的西班牙著名吉他作曲家兼演奏家塔雷加的一首最有名的代表作品。
  乐曲描绘了作曲家对西班牙格拉纳达城的一座宫殿的印象。
  全曲的旋律从头至尾都用轮指来演奏，同进配有分解和弦的伴奏，颤的效果发挥得淋漓尽致，无论从演奏技巧或是表现意境方面都有相当的深度。既精妙地描画出阿尔汉布拉宫宫殿的辉煌华丽的景致，又给人以深的感受和回想。
不了解吉他的人很难想像是由一把吉他的独奏来完成的。</code></pre><h5 id="2、《阿兰胡埃斯协奏曲》——华金”罗德里格"><a href="#2、《阿兰胡埃斯协奏曲》——华金”罗德里格" class="headerlink" title="2、《阿兰胡埃斯协奏曲》——华金”罗德里格"></a>2、《阿兰胡埃斯协奏曲》——华金”罗德里格</h5><pre><code>马德里东南30英里有一座小城名叫阿兰胡埃斯，这里原是波旁王朝的夏宫，西班牙作曲家华金&quot;罗德里格60年前创作的一首吉他曲让它名扬天下，名字就是阿兰胡埃斯协奏曲。
整个乐曲充满一种西班牙式的忧伤，绝不同于欧洲其他地方的那些伤感音乐，具有无比伦比的震撼力，被誉为三大吉他协奏曲之一。</code></pre><h5 id="3、《大教堂》——巴里奥斯"><a href="#3、《大教堂》——巴里奥斯" class="headerlink" title="3、《大教堂》——巴里奥斯"></a>3、《大教堂》——巴里奥斯</h5><pre><code>说到大教堂就不能不提到它的作者巴里奥斯。由于历史的渊源，南美给人的印象首先要跟西班牙挂上钩：激烈热情的西班牙吉他，粗犷奔放的性格和热辣的Tango。虽然其中具有南美的音乐元素，然而从这收标题音乐的题目就可以看出来，不同于南美的传统风格，这是一首具有理性的、对于最高原则的思索和探求的曲目。也许这就是古典吉他的魅力，它可以在不同时空、不同民族、不同文化的人当中引起共鸣。《大教堂》被算做巴里奥斯4类作品中巴洛克风格的作品之一，然而曲子本身展现的对于人性的关怀和强烈的画面通感又使其极具浪漫时期的人文色彩。
全曲共分三部分：
第一部分：D大调本属于节奏明快的调性，却展现出了略带忧郁的感觉。仿佛祈祷的人站在空旷的教堂中央，缓慢的度步，阳光从巨大彩色的玻璃中透过来，使宁静的教堂带上了斑斓而温暖的色调。
第二部分：这是属于天国的声音。庄重的和弦表现出最崇高的、不可违抗的上帝的律令。似乎在描写天堂的同时勾勒出了人间的疾苦。人世的苦难众多，但是低沉、稳健的低音区奏出了坚强甚至有些悲壮的音符：顶着风雨前进：这是我们唯一的选择。这部分是最能够引起人内心的伤感同时又最能给予人力量的一部分。福田好啊。好啊。好的不能用语言形容啊。
第三部分：进入教堂祈祷的人们，男男女女，老老少少。各人都有各人的不幸，但是得到的答复都是相似的：因为上帝的安慰不会因人而异。</code></pre><h5 id="4、《华尔兹》——索尔"><a href="#4、《华尔兹》——索尔" class="headerlink" title="4、《华尔兹》——索尔"></a>4、《华尔兹》——索尔</h5><pre><code>华尔兹是一种轻快的三拍子舞曲。这一首华尔兹在世界现代的吉他教材中很常见，指法并不难，但是很好听。它可以帮助初学者找到旋律声部和伴奏声部的层次感。</code></pre><h5 id="5、《幻想曲》——穆达雷"><a href="#5、《幻想曲》——穆达雷" class="headerlink" title="5、《幻想曲》——穆达雷"></a>5、《幻想曲》——穆达雷</h5><pre><code>幻想曲史上最令人激动人心的吉它曲子，穆达雷的幻想曲没有扫弦，没有轮指，只是拨弦，只能靠曲子本身打动人心，但是他做到了，老练的拨弦手法，优美起伏的曲子令人神往。</code></pre><h5 id="6、《吉诺诺它》第一号"><a href="#6、《吉诺诺它》第一号" class="headerlink" title="6、《吉诺诺它》第一号"></a>6、《吉诺诺它》第一号</h5><pre><code>十分舒缓悠扬的一首曲子，觉得更像是小品，不长，也没有急迫的那种气势，适合人心情平和是来听。</code></pre><h5 id="7、《卡门组曲》——比才"><a href="#7、《卡门组曲》——比才" class="headerlink" title="7、《卡门组曲》——比才"></a>7、《卡门组曲》——比才</h5><pre><code>法国作曲家比才于1874年创作的歌剧《卡门》，其中前奏曲是该歌剧中最著名的器乐段落，常单独演奏。一般的歌剧序曲都是用交响方式缩写或提示歌剧内容，这首序曲结构简单，仅仅描写了欢乐气氛和剧中次要人物斗牛士的英勇形象。
开始呈示的快板主题选自歌剧第四幕斗牛士上场时的音乐，生气勃勃、充满活力，表现了斗牛士英武潇洒的形象和斗牛场内兴奋活跃的气氛。由于它带有进行曲特点，故又称《斗牛士进行曲》。
接下来乐曲从A大调转为F大调，出现第二幕中《斗牛士之歌》的副歌音调，具有凯旋进行曲特点，坚定有力的节奏和威武雄壮的曲调表现了斗牛士的飒爽英姿。反复时提高八度，使情绪显得更为高昂。之后再现第一部分主题。
结束部分出现卡门的音乐动机，带有不祥的气氛，在弦乐有力的震音背景下，以大提琴为主的乐器奏曲悲剧性主题，暗示悲剧性的结局，最后在强烈的不和协音响中结束。</code></pre><h5 id="8、《骷髅之曲》——圣”桑"><a href="#8、《骷髅之曲》——圣”桑" class="headerlink" title="8、《骷髅之曲》——圣”桑"></a>8、《骷髅之曲》——圣”桑</h5><pre><code>很鬼魅的一首曲子，一定得配合着大小提琴一起演奏才会有效果。曲子听起来异样的欢快，令人神往，高潮迭起，小提琴部分是高潮，吉它部分作为铺垫。</code></pre><h5 id="9、《魔笛变奏》——索尔"><a href="#9、《魔笛变奏》——索尔" class="headerlink" title="9、《魔笛变奏》——索尔"></a>9、《魔笛变奏》——索尔</h5><pre><code>  西班牙著名的作曲家和吉他演奏家索尔被后世尊称为“吉他史上的贝多芬”。《莫扎特“魔笛”主题变奏曲》是索尔根据莫扎特的歌剧《魔笛》第一幕第三场的主题所作的变奏曲。
全曲分序曲、主题、五种变奏、尾声等八个部分。各个部分均有不同的细腻技巧及丰富的音乐性格，只有本人是出色的演奏家才能创作出如此发挥乐器特性的器乐曲，此曲是吉他音乐会上的保留曲目，亦常常作为吉他比赛中的规定曲目之一，以此来说明演奏者的技巧水平和音乐素养。可见此曲在吉他曲中的地位之一斑。</code></pre><h5 id="10、《拉斯图利亚斯传奇》—–阿尔贝尼斯"><a href="#10、《拉斯图利亚斯传奇》—–阿尔贝尼斯" class="headerlink" title="10、《拉斯图利亚斯传奇》—–阿尔贝尼斯"></a>10、《拉斯图利亚斯传奇》—–阿尔贝尼斯</h5><pre><code>  原曲由西班牙作曲家阿尔贝尼斯作于1896-1897年。原系钢琴组曲《西班牙之歌》（Op.232）的第一曲《前奏曲》，但其写法本身就受到吉它演奏法的影响。主要以吉它独奏曲广为流传。
阿斯图利亚斯地区位于西班牙北部坎塔布连山脉北侧，这一地区历史上经历过多次战争，留下许多传说。中轮扫奏法的运用，增强了乐曲前后段落强烈的节奏性和戏剧性。中间部主题的性格与前后部分形成鲜明对比。在徐缓速度上吟唱的中间部主旋律充满内在的激情。《阿斯图利亚斯传奇》也是著名的古典吉他经典保留曲目。</code></pre><h5 id="11、《玛祖卡》—–塔雷加"><a href="#11、《玛祖卡》—–塔雷加" class="headerlink" title="11、《玛祖卡》—–塔雷加"></a>11、《玛祖卡》—–塔雷加</h5><pre><code>  塔雷加在演奏技法上，尤其在弹弦上塔雷加别开生面。他还使泛音奏法尤其是八度的泛音奏法成为吉他常用的一种演奏技法而丰富了吉他在音色方面的表现性能。
塔雷加创作的吉他曲约八十首，其中《阿尔罕布拉宫的回忆》，《阿拉伯风格随想曲》，《前奏曲集》已成为吉他音乐的古典名作。
此外抒情而高度发挥了吉他乐器独特的表现性能的《晨歌》，《泪》，《阿德丽塔(玛祖卡)》等吉他音乐小品也成为经常演奏大保留曲目。</code></pre><h5 id="12、《梦中森林》—-巴里奥斯"><a href="#12、《梦中森林》—-巴里奥斯" class="headerlink" title="12、《梦中森林》—-巴里奥斯"></a>12、《梦中森林》—-巴里奥斯</h5><pre><code>巴里奥斯的《森林之梦》是一首对吉他演奏者不论是技巧（尤其是轮指的技巧）上，还是音乐上进行全面考验的曲子。   </code></pre><h5 id="13、《莫扎特小夜曲》—-莫扎特"><a href="#13、《莫扎特小夜曲》—-莫扎特" class="headerlink" title="13、《莫扎特小夜曲》—-莫扎特"></a>13、《莫扎特小夜曲》—-莫扎特</h5><pre><code>莫扎特的音乐清明高远，乐天愉快，淳朴优美，其挚温暖，有如天籁一般。常常被誉为“永恒的阳光”。SPring Spring （春泉）。莫扎特在严酷命运的摧残之下默默地承受着、孕育着、奉献着……象殉道的使徒般唱着温馨甘美的音乐安慰着自己，安慰着整个世界。</code></pre><h5 id="14、《平安夜》—-弗朗兹”格鲁贝尔"><a href="#14、《平安夜》—-弗朗兹”格鲁贝尔" class="headerlink" title="14、《平安夜》—-弗朗兹”格鲁贝尔"></a>14、《平安夜》—-弗朗兹”格鲁贝尔</h5><pre><code>格鲁贝尔的这首平安夜，也是异常出名的古典吉他名曲。平安夜降临前听着如此婉转，神往的吉它曲子，不禁期盼来年的美好，也让你思绪万千，魂牵梦绕。其中的轮指虽然不多却也异常好听，特别喜欢结尾。</code></pre><h5 id="15、《西班牙舞曲》—-格拉纳多斯"><a href="#15、《西班牙舞曲》—-格拉纳多斯" class="headerlink" title="15、《西班牙舞曲》—-格拉纳多斯"></a>15、《西班牙舞曲》—-格拉纳多斯</h5><pre><code>在那部举世闻名的芭蕾剧《天鹅湖》里面，柴可夫斯基引用了大量的各个国家的民族旋律，其中有西班牙、意大利、波兰甚至中国旋律。而这首西班牙舞曲是里面非常热辣的一段，节奏飞快。</code></pre><h5 id="16、《西西里舞曲》—-雷史毕基"><a href="#16、《西西里舞曲》—-雷史毕基" class="headerlink" title="16、《西西里舞曲》—-雷史毕基"></a>16、《西西里舞曲》—-雷史毕基</h5><pre><code>西西里舞曲也是相当动听，似乎能将我们带到中古世纪里的意境中，非常地优雅安逸。</code></pre><h5 id="17、《月光狂想曲》"><a href="#17、《月光狂想曲》" class="headerlink" title="17、《月光狂想曲》"></a>17、《月光狂想曲》</h5><pre><code>改编的月光狂想曲，由吉他和着钢琴的声音，表现出寂静的夜晚明媚的音乐光下作者澎湃的思绪，倾吐着内心的感受，确实适合晚上独奏。</code></pre><h5 id="18、《忧伤圆舞曲》—-西贝柳斯"><a href="#18、《忧伤圆舞曲》—-西贝柳斯" class="headerlink" title="18、《忧伤圆舞曲》—-西贝柳斯"></a>18、《忧伤圆舞曲》—-西贝柳斯</h5><pre><code>芬兰作曲家西贝流士（J. Sibelius）宛如小型交响试的「忧伤圆舞曲」（Valse Triste, Op.44-1, 1904）原本是他为妻舅Armas Jarnefelt的剧作【死神】（Kuolema）谱写的一段配乐，以伴隨死神趁著垂死老妇隨伺的儿子睡著之际，化身做其亡夫邀舞的情节；主題动机以相當隐喻的旋律展开預示死亡，中段的相当甜美的旋律延伸出高昂的情绪，象徵与亡夫相逢的喜悅，最初的阴沉旋律最后仍接管了一切，末尾三個不安的和弦意味死神在儿子醒來的那一刻，帶走了他的母亲。这种摻杂哀伤与欢乐的情绪正是人生的最佳写照，加上此曲沙龙味十足，出版后成了当时欧洲咖啡屋的热门曲目。</code></pre><h5 id="19、《月光》—-索尔"><a href="#19、《月光》—-索尔" class="headerlink" title="19、《月光》—-索尔"></a>19、《月光》—-索尔</h5><pre><code>作者是19世纪杰出的吉他艺术家费尔南度&quot;;索尔，该曲指法变化不多，演奏速度较慢，技术难度不高，是首容易弹奏的曲子。
但该曲展现了一幅田野、河流、村庄在朦胧的月光下，万籁俱寂、大地一片银光的美丽画面，它与贝多芬的钢琴曲《月光》有着异工同曲之妙，展现给人们一幅梦幻般迷人的景色。索尔被誉为“吉他史上的贝多芬”是受之无愧。《月光》也成为了古典吉他曲中的不朽名曲。</code></pre><h5 id="20、《爱的罗曼史》—-叶佩斯"><a href="#20、《爱的罗曼史》—-叶佩斯" class="headerlink" title="20、《爱的罗曼史》—-叶佩斯"></a>20、《爱的罗曼史》—-叶佩斯</h5><pre><code>  《爱的罗曼史》这首乐曲,主旋律取材于西班牙传统民谣。1952年，法国影片《被禁止的游戏》的导演，邀请西班牙著名吉他演奏家叶佩斯，为这部影片配乐。
耶佩斯别出心裁，只采用一把吉他为整部影片配曲，并且由他一人独奏。该影片的主题音乐就是这首《爱的罗曼史》。影片《被禁止的游戏》上映以后，《爱的罗曼史》广为流传，并成为所有知名吉他演奏家的保留曲目。
乐曲优美纯朴的旋律与清澈的分解和弦完全溶为一体，充满温柔和浪漫的气息，《爱的罗曼史》甚至成为吉他的同义词，是吉他曲中的一首不朽名作。</code></pre><h5 id="21、《悲伤西班牙》—-尼古拉﹒德﹒安捷罗斯"><a href="#21、《悲伤西班牙》—-尼古拉﹒德﹒安捷罗斯" class="headerlink" title="21、《悲伤西班牙》—-尼古拉﹒德﹒安捷罗斯"></a>21、《悲伤西班牙》—-尼古拉﹒德﹒安捷罗斯</h5><pre><code>一首同样忧伤但动听的西班牙吉他曲</code></pre><h5 id="22、《镜中的安娜》—-尼吉拉-德-安捷罗斯"><a href="#22、《镜中的安娜》—-尼吉拉-德-安捷罗斯" class="headerlink" title="22、《镜中的安娜》—-尼吉拉.德.安捷罗斯"></a>22、《镜中的安娜》—-尼吉拉.德.安捷罗斯</h5><pre><code>浪漫柔美得吉他曲《镜中的安娜》，这首名曲是法国吉他大师尼吉拉.德.安捷罗斯演奏的。尼古拉以此曲一举成名，独特的弹奏将吉他滑音的魅力表现得淋漓尽致，分解和弦伴奏富有动感，與旋律有機的结合，给人以心旷神怡的感受，使人们越聽越能更深刻地理解它，是一首極其美丽的吉他曲。</code></pre><h5 id="23、《卡尔卡西练习曲》—–卡尔卡西"><a href="#23、《卡尔卡西练习曲》—–卡尔卡西" class="headerlink" title="23、《卡尔卡西练习曲》—–卡尔卡西"></a>23、《卡尔卡西练习曲》—–卡尔卡西</h5><pre><code>在古典吉他的练习曲中，卡尔卡西的练习曲占有相当的地位。而卡尔卡西的25首练习曲，作品第60号，则是卡尔卡西的代表作，也是学习古典吉他的学生从初级向中级迈进的重要练习曲目。这首乐曲就选自其中的第3号A大调《小行板》。由带再现的单二部曲式构成这首乐曲，用分散和弦的三连音贯穿全曲，力度的强弱变化突出。</code></pre><h5 id="24、《绿袖子》―――英国民谣"><a href="#24、《绿袖子》―――英国民谣" class="headerlink" title="24、《绿袖子》―――英国民谣"></a>24、《绿袖子》―――英国民谣</h5><pre><code>绿袖子,是一首英国民谣，在依丽莎白女王时代就已经已广为流传，相传是英皇亨利八世所作（他是位长笛 家），根据19世纪英国学者威廉&quot;;查培尔(William Chappell)所做的研究资料指出，《绿袖子》的旋律最早是记录在16世纪末英国著名的鲁特琴曲集《WilliamBallet\’s Lute Book》，歌词部份则出现在1584年。然而这首歌曲真正广为流传开来，则是在英国作曲家约翰&quot;;盖伊(John Gay)将它编入为了对抗意大利歌剧所创作的 《乞丐歌剧》(The Beggar\’s Opera,1728)中。
这首民谣的旋律非常古典而优雅，是一首描写对爱情感到忧伤的歌曲，但它受到世人喜爱的层面却不仅仅局限在爱情的领域，有人将它换了歌词演唱、也有人将它作为圣诞歌曲，而它被改编为器乐演奏的版本也是多不胜数，有小品、有室内乐、有管弦乐…，而这其中又以上述的《乞丐歌剧》和英国作曲家佛汉威廉斯(Vaughan illiams)所写的《绿袖子幻想曲》(“Fantasia on Greensleeves”)最具代表性。
在《绿袖子》的诸多乐器版本中，最能表现此曲略为凄美的情境，除了最早的鲁特琴版本、吉他版本一直以其独特的音色占有独特的表现地位。</code></pre><h5 id="25、《雨滴》—-林塞"><a href="#25、《雨滴》—-林塞" class="headerlink" title="25、《雨滴》—-林塞"></a>25、《雨滴》—-林塞</h5><pre><code>《雨滴》是一首著名的典型吉他曲,它描写了雨过天睛这后,漫步于林中小径,聆听枝尖叶梢滴水的情景.全曲没有特别艰深的技巧,然而它所能表达的情绪与装饰音的效果,除了吉他这外,没有任何一种其它乐器代替得了.演奏时速度自由流畅,慢而不拖,快而不乱,形成自然地流动。</code></pre><h5 id="26、《悲伤礼拜堂》—-Vicente-Gomez"><a href="#26、《悲伤礼拜堂》—-Vicente-Gomez" class="headerlink" title="26、《悲伤礼拜堂》—-Vicente Gomez"></a>26、《悲伤礼拜堂》—-Vicente Gomez</h5><pre><code>作者此曲是为了献给自己的父亲，所以比较庄重，但也藏着深情，乐曲缺少了以往那种欢快的气氛，转而像是一种陈述，一种表达，一种怀念，不多说了，自己听听吧。</code></pre><h5 id="27、《泪》—-塔雷加"><a href="#27、《泪》—-塔雷加" class="headerlink" title="27、《泪》—-塔雷加"></a>27、《泪》—-塔雷加</h5><pre><code>这是塔雷加的十分脍炙人口的小品之一。全曲仅有十六小节，但仍然发挥了吉他音色的多彩性。通过对吉他六条弦的交替弹奏，典型地表露在小品中追求吉他音调色彩的塔雷加的风格。优美的旋律并非是深沉的哀泣，更像是天真的孩子流出快乐而兴奋的眼泪。</code></pre><h5 id="28、《小罗曼史》—-路易斯-华歌"><a href="#28、《小罗曼史》—-路易斯-华歌" class="headerlink" title="28、《小罗曼史》—-路易斯 华歌"></a>28、《小罗曼史》—-路易斯 华歌</h5><pre><code>露伊丝&quot;娃可（Luise Walker, 1910-1998），1910年出生于奥地利维也纳，为20世纪吉他乐史上最具代表性的女性演奏家之一。她在八岁时开始学习吉他，不久后就展现出惊人的天赋。14岁举行生平第一次的独奏会，观众为之疯狂，随即很快在欧洲名声大振，并开始以职业演奏家的身份应邀到欧美各国演出。
《小罗曼史》是露伊丝的作品之一，也是深受许多学生喜爱的吉他小品。以往曾经有文章介绍说此曲是讲述一个失恋少女的故事，其故事虽然缠绵悱恻，其真实性却有待推敲。
全曲分为A，B，C三个段落，每一段落均有反复，后面有一段再现（A ）段的尾奏（coda），所以可以称为是单纯的三段体曲式。
乐曲一开始的A段（6/8拍子），这是一段酷似维拉罗伯士(H.Villa Lobos)&lt;&lt;第一号前奏曲&gt;&gt;的主题，过去就曾见到有学生在音乐会上将这两首作品“混为一弹”，确实令人有些啼笑皆非。在这一段中，主题以“模仿大提琴”的效果在5、6弦上缓缓的唱出略微感伤的旋律，谱上德文写 Getragen Mitviel Ausdrucksvoll,其意就是“非常有感情地 ”。
乐曲进入B段后，节奏转为4/4拍子，乐谱上提示出Lebhaft（活泼生动）的演奏要求，所以这一段的情绪明显地要比A段来得轻松、活泼许多，使人感受到盎然的蓬勃朝气。
而在接下来的C段，节奏仍然维持在4/4拍子，这是一段全部为三连音分解和弦作成的主题，其中所运用的和声及旋律，又与《爱的罗曼史》一曲有着几分神似，充分地表达出吉他无穷的魅力。乐曲最后的尾奏短暂地再现了 A段的主题，随后以四个中止式的和弦简洁有力地结束全曲，整首作品优雅细致、极具抒情色彩。</code></pre><h5 id="29、《大霍塔舞曲》-—-塔雷加"><a href="#29、《大霍塔舞曲》-—-塔雷加" class="headerlink" title="29、《大霍塔舞曲》 —-塔雷加"></a>29、《大霍塔舞曲》 —-塔雷加</h5><pre><code>泰雷加一生创作的大量作品中有不少是不朽名作。他的绝大多数作品都是以突出吉他的音乐性、抒情性为主，唯独《大霍塔舞曲》炫耀了吉他各种各样的技巧，包括许多特殊技法：快速半音阶，琶音，分解和弦，揉弦，轮指，上下行涟音奏法，滑音奏法，靠弦与不靠弦奏法，泛音奏法，左手单手涟音奏法，大鼓奏法，小鼓奏法，单簧管奏法，大管(巴松管)奏法等等。可以说这支曲子几乎包括了古典吉他全部技法，弹奏这首乐曲需要相当的功底才能真正应付自如。</code></pre><h5 id="30、《樱花变奏曲》—–横尾幸弘"><a href="#30、《樱花变奏曲》—–横尾幸弘" class="headerlink" title="30、《樱花变奏曲》—–横尾幸弘"></a>30、《樱花变奏曲》—–横尾幸弘</h5><pre><code>日本名谣，横尾幸弘改编为《樱花变奏曲》，分前奏、主题、3个变奏、尾声6个部分。</code></pre><h5 id="31、《大序曲》—-朱利亚尼"><a href="#31、《大序曲》—-朱利亚尼" class="headerlink" title="31、《大序曲》—-朱利亚尼"></a>31、《大序曲》—-朱利亚尼</h5><pre><code>弹奏朱里亚尼的《大序曲》，需要有非常熟练的技巧和高度激动的热情，才能把这首曲子表现得淋漓尽致。
大序曲开始是15小节的序奏，a小调，4/4拍，行板，可分为三段，前4小节为第一段，乐曲一开始的第一个主和弦就给人以强有力的乐队全奏的感觉，然后是分解和弦，渐弱之后到第二小节第二拍是一个突强的和弦，接下来第三小节是很弱的、模仿木管乐器演奏的分解属七和弦。到第四小节第二拍，又是一个突强和弦，形成序奏第一段的小高潮。
序奏的第二段是个过渡句，在力度上明显地由弱到强，这三小节的过渡引出了序奏的第三小段。序奏的第三小段使用不断重复的低音加上此起彼伏的分解和弦，把序奏引向高潮，然后又渐慢、渐弱，一直到序奏的结尾。</code></pre><h5 id="32、《小夜曲》—–舒伯特"><a href="#32、《小夜曲》—–舒伯特" class="headerlink" title="32、《小夜曲》—–舒伯特"></a>32、《小夜曲》—–舒伯特</h5><p>小夜曲这是舒伯特短促的一生中最后完成的独唱艺术歌曲之一，也是舒伯特最为著名的作品之一。此曲采用德国诗人莱尔斯塔勃的诗篇谱写成。“吉他是非常美妙的乐器，然而，能了解其中奥妙者，则寥寥无几”，这是舒伯特的一句话。他给我们留下了非常美妙的吉他室内乐作品，如由吉他、横笛、中音提琴及大提琴演奏的四重奏就是这一首作品。</p>
<h5 id="33、《少女的祈祷》—–巴达捷斯卡·太克拉"><a href="#33、《少女的祈祷》—–巴达捷斯卡·太克拉" class="headerlink" title="33、《少女的祈祷》—–巴达捷斯卡·太克拉"></a>33、《少女的祈祷》—–巴达捷斯卡·太克拉</h5><pre><code>  《少女的祈祷》是一首由钢琴经典小品改编的古典吉他曲。该曲作于1859年，初刊登在法国巴黎一家音乐杂志的副刊上，但很快就不胫而走，成为畅销一时的名曲，此后相继以八十余种不同版本风行全球。
作者芭达捷芙斯卡是一位女钢琴家，她生于波兰首都华沙，二十四岁时就过早地离开了人世，留给我们的只有这一首名曲。虽然世人对于本曲的作曲经过已无从知晓，但这首乐曲在形式上只不过是简单的变奏曲，却由于命名为《少女的祈祷》而蜚声世界，久盛不衰，也许应归功于作曲者的匠心独具，抑或是出版商的精明，总之，这不能不说是音乐史上的一个奇迹。
乐曲的结构极其简单，为速度适中的行板，以下行音为中心的四小节前奏之后，乐曲呈现出温婉而幽丽的主题；此后是主题的四种变奏形式，最后一个变奏以三连音符为主，饱含热情，和声只是一些属七和弦和主三和弦而已。本曲形象单纯、手法朴素。俄国杰出的文学家契诃夫曾在他的著名剧作《三姐妹》中引用此曲作为配乐。</code></pre><h5 id="34、《阿拉伯风格绮想曲》—–塔雷加"><a href="#34、《阿拉伯风格绮想曲》—–塔雷加" class="headerlink" title="34、《阿拉伯风格绮想曲》—–塔雷加"></a>34、《阿拉伯风格绮想曲》—–塔雷加</h5><pre><code>《阿拉伯风格绮想》，也是有近代&quot;吉他音乐之父”之称的塔雷加的代表作品之一，曾被后人称赞为“吉他演奏技术与音乐表现最合理的结合”。
全曲中小夜曲风格的主题与变化的旋律交替出现。悠然自得的主旋律和华彩乐段几乎扩展到吉他的全部音域。充分发挥了吉他六根弦各个音区的不同音色特点，表现了吉他魅力之所在。
塔雷加和别的古典派作曲家不同，很少写奏鸣曲或协奏曲等室内作品，而专注于吉他小品之作曲和编曲，这首曲子中飘忽变化的旋律，表现了抒情悠扬的小夜曲风格，使人在广阔音域中欣赏到吉他的美妙的音色。</code></pre><h5 id="35、《最后的颤音》—-巴里奥斯"><a href="#35、《最后的颤音》—-巴里奥斯" class="headerlink" title="35、《最后的颤音》—-巴里奥斯"></a>35、《最后的颤音》—-巴里奥斯</h5><pre><code>巴里奥斯的《最后的颤音》，旋律优美、神秘悠远而带有沉思意境，在潺潺流水般的轮指下，像是悠悠地诉说着巴里奥斯生平的故事。</code></pre><h5 id="36、《阿狄利达》—-塔雷加"><a href="#36、《阿狄利达》—-塔雷加" class="headerlink" title="36、《阿狄利达》—-塔雷加"></a>36、《阿狄利达》—-塔雷加</h5><pre><code>阿狄利达与《泪》一样，学习塔雷加的初学者必须学习《阿狄利达》。此曲以较缓慢的速度演奏，曲中在明朗歌唱的部分采用高音部的滑音演奏法，这是吉他以外乐器所无法表现的。</code></pre><h5 id="37、《卡伐蒂娜》—-史坦利-梅耶"><a href="#37、《卡伐蒂娜》—-史坦利-梅耶" class="headerlink" title="37、《卡伐蒂娜》—-史坦利 梅耶"></a>37、《卡伐蒂娜》—-史坦利 梅耶</h5><pre><code>  与另一只吉他名曲《爱的罗曼斯》有惊人的异曲同工之妙。这只乐曲出自英国作曲家斯坦尼.麦尔斯的笔下。在电影《猎鹿人》中，导演邀请了享有“吉他王子”美誉的吉他演奏家约翰.威廉斯（John williams）来担任配乐演奏。乐曲在电影放映之后一举风靡全球。
“卡伐蒂那”原意是指短小的抒情歌曲，在器乐上是指旋律优美动听的小品。这只乐曲也正是这样一只曲子。乐曲在轻柔的分散和弦的伴奏下奏出舒缓如歌的旋律，意境温柔而浪漫，充满了向往与憧憬，最后在无穷的眷恋中结束了全曲。这只迷人的乐曲深受人们的喜爱，但涉及到的技巧内容要远比《爱的罗曼斯》复杂的多。</code></pre><h5 id="38、《罗密欧与朱丽叶》—–普罗柯菲耶夫"><a href="#38、《罗密欧与朱丽叶》—–普罗柯菲耶夫" class="headerlink" title="38、《罗密欧与朱丽叶》—–普罗柯菲耶夫"></a>38、《罗密欧与朱丽叶》—–普罗柯菲耶夫</h5><pre><code>一个传统的爱情故事，用一段音乐就真实地表现出来了。于是《罗密欧与朱丽叶》的主题很快风靡全球，并被改编成钢琴、小提琴等多种音乐形式。现在，我们不妨从吉他中去感受这段忧郁的旋律……</code></pre><h5 id="39、《小行板圆舞曲》—–卡诺"><a href="#39、《小行板圆舞曲》—–卡诺" class="headerlink" title="39、《小行板圆舞曲》—–卡诺"></a>39、《小行板圆舞曲》—–卡诺</h5><pre><code>西班牙吉他演奏家安东尼&quot;;卡诺（Antoni Cano,1811-1897）生于洛尔卡。卡诺早年学医，取得外科医生资格后回故乡行医数年。同时学习音乐。此后，曾在宫廷演奏并任职。1813年索尔由于政治原因离开祖国，流亡巴黎。在巴黎他得到凯鲁比尼（Linsi Cherabini,1760-1842），梅于尔（Etienne-Nicolas Aehul,1763-1817），贝尔东（Henri Montan Berton,1767-1844）等好友的热烈支持。于是这位失意的军人，又在诸友的劝慰下，再度重返艺术家的生涯。</code></pre><h5 id="40、《追想曲》-—–阿兰布拉"><a href="#40、《追想曲》-—–阿兰布拉" class="headerlink" title="40、《追想曲》 —–阿兰布拉"></a>40、《追想曲》 —–阿兰布拉</h5><pre><code>阿兰布拉的《追想曲》被赞为历史上最浪漫的追想曲，记得以前上海每天早上有一个广播，主持人是裴子安，她主持的节目背景音乐放的一直是这首歌曲，确实是很优美。</code></pre><h5 id="41、《随想曲第24号》——帕格尼尼"><a href="#41、《随想曲第24号》——帕格尼尼" class="headerlink" title="41、《随想曲第24号》——帕格尼尼"></a>41、《随想曲第24号》——帕格尼尼</h5><pre><code>闻名于世的“二十四首随想曲”是浪漫时期“琴魔”帕格尼尼的小提琴曲集，由于帕格尼尼亦是一位吉他演奏者，其作曲思维也受到吉他演奏法的影响，所以这二十四首随想曲改编为吉他作品也很自然与小提琴比各有千秋，其中第二十四首无论是小提琴还是吉他都演奏的较多，它的一首变奏曲作曲手法很有新意、技巧高难，“琴魔”狂傲之气尽现无遗。</code></pre><h5 id="42、《美人鱼小夜曲》——-那卡巴亚西"><a href="#42、《美人鱼小夜曲》——-那卡巴亚西" class="headerlink" title="42、《美人鱼小夜曲》——-那卡巴亚西"></a>42、《美人鱼小夜曲》——-那卡巴亚西</h5><pre><code>听着这首《美人鱼小夜曲》仿佛来到了丹麦那个童话世界，来到了海边看到了那个美人鱼雕像。而且，本曲子需要颤音技巧；《美人鱼小夜曲》的轮指全部是轮一弦，使得轮指难度相对较低，同时它的左手没有太难的指法，不会成为演奏上的障碍。而《阿尔罕布拉宫的回忆》则不同，上来就是轮指轮二弦，这样声音不易出来，连贯性也不易弹好。</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[mysqldiff实现MySQL数据表比较]]></title>
      <url>http://www.wulai.me/2018/08/06/mysqldiff%E5%AE%9E%E7%8E%B0MySQL%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%AF%94%E8%BE%83/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>本文介绍mysqldiff工具来比较数据表结构，并生成差异SQL语句。</p>
<p>mysqldiff类似Linux下的diff命令，用来比较对象的定义是否相同，并显示不同的地方。</p>
<p>如果要比较数据库是否一致，可以用另外一个工具：mysqldbcompare（点击查看教程）。</p>
<p>以下是mysqldiff的用法。</p>
<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h2><p>mysqldiff是MySQL Utilities中的一个脚本，默认的MySQL不包含这个工具集，所以需要独立安装。</p>
<p>MySQL Utilities下载地址：<a href="http://downloads.mysql.com/archives/utilities/。" target="_blank" rel="noopener">http://downloads.mysql.com/archives/utilities/。</a><br>Windows系统中需提前安装“Visual C++ Redistributable Packages for Visual Studio 2013”，下载地址：<a href="https://www.microsoft.com/en-gb/download/details.aspx?id=40784。" target="_blank" rel="noopener">https://www.microsoft.com/en-gb/download/details.aspx?id=40784。</a><br>Linux系统在下载页面选择对应发行版。</p>
<h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2 语法"></a>2 语法</h2><p>mysqldiff的语法格式是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysqldiff --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1.object1:db2.object1 db3:db4</span><br></pre></td></tr></table></figure>

<p>这个语法有两个用法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">db1:db2：如果只指定数据库，那么就将两个数据库中互相缺少的对象显示出来，不比较对象里面的差异。这里的对象包括表、存储过程、函数、触发器等。</span><br><span class="line">db1.object1:db2.object1：如果指定了具体表对象，那么就会详细对比两个表的差异，包括表名、字段名、备注、索引、大小写等所有的表相关的对象。</span><br><span class="line">接下来看一些主要的参数：</span><br><span class="line"></span><br><span class="line">--server1：配置server1的连接。</span><br><span class="line">--server2：配置server2的连接。</span><br><span class="line">--character-set：配置连接时用的字符集，如果不显示配置默认使用character_set_client。</span><br><span class="line">--width：配置显示的宽度。</span><br><span class="line">--skip-table-options：保持表的选项不变，即对比的差异里面不包括表名、AUTO_INCREMENT、ENGINE、CHARSET等差异。</span><br><span class="line">-d DIFFTYPE,--difftype=DIFFTYPE：差异的信息显示的方式，有[unified|context|differ|sql]，默认是unified。如果使用sql，那么就直接生成差异的SQL，这样非常方便。</span><br><span class="line">--changes-for=：修改对象。例如--changes-for=server2，那么对比以sever1为主，生成的差异的修改也是针对server2的对象的修改。</span><br><span class="line">--show-reverse：在生成的差异修改里面，同时会包含server2和server1的修改。</span><br></pre></td></tr></table></figure>

<h2 id="3-范例"><a href="#3-范例" class="headerlink" title="3 范例"></a>3 范例</h2><p>先创建两个表。</p>
<p>use study;</p>
<p>create table test1(<br>    id int not null primary key,<br>    a varchar(10) not null,<br>    b varchar(10),<br>    c varchar(10) comment ‘c’,<br>    d int<br>)ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=’test1’;</p>
<p>create table test2(<br>    id int not null,<br>    a varchar(10),<br>    b varchar(5),<br>    c varchar(10),<br>    D int<br>)ENGINE=myisam DEFAULT CHARSET=utf8 COMMENT=’test2’;<br>不使用–skip-table-options，</p>
<p>mysqldiff –server1=root:root@localhost –server2=root:root@localhost –changes-for=server2 –show-reverse –difftype=sql study.test1:study.test2</p>
<p>使用<code>--skip-table-options</code>，</p>
<p>如果需要生成SQL文件，加上输出就可以了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldiff --server1=root:root@localhost --server2=root:root@localhost --changes-for=server2 --show-reverse --difftype=sql study.test1:study.test2 &gt; output.sql</span><br></pre></td></tr></table></figure>

<p><code>说明</code>：执行MySQL语句时可能会遇到这样错误：`Error 1054 - Unknown column ‘name’ in ‘aspect’``</p>
<p>这是因为mysqldbcompare生成的ALTER语句中，用逗号,拼装了多条ADD、CHANGE等语句，如果这些语句还包含AFTER关键字，就会提示这个错误并中断执行MySQL语句。解决的办法就是：去除AFTER及其后面的条件。</p>
<p>这可能是MySQL的一个Bug，详情参考：<a href="http://bugs.mysql.com/bug.php?id=34972" target="_blank" rel="noopener">http://bugs.mysql.com/bug.php?id=34972</a> 和 <a href="http://bugs.mysql.com/bug.php?id=60650。" target="_blank" rel="noopener">http://bugs.mysql.com/bug.php?id=60650。</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[mysqldbcompare MySQL数据库比较工具]]></title>
      <url>http://www.wulai.me/2018/08/06/mysqldbcompare-MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E6%AF%94%E8%BE%83%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>mysqldbcompare用于比较两个服务器或同个服务器上的数据库，有文件和数据，并生成差异性SQL语句。</p>
<p>要比较数据表，请用另外一个工具：mysqldiff（点击查看教程）。</p>
<p>以下是mysqldbcompare的用法。</p>
<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h2><p>mysqldbcompare是MySQL Utilities中的一个脚本，默认的MySQL不包含工具集，所以需要独立安装。</p>
<p>MySQL Utilities下载地址：<a href="http://downloads.mysql.com/archives/utilities/。" target="_blank" rel="noopener">http://downloads.mysql.com/archives/utilities/。</a><br>Windows系统中需提前安装“Visual C++ Redistributable Packages for Visual Studio 2013”，下载地址：<a href="https://www.microsoft.com/en-gb/download/details.aspx?id=40784。" target="_blank" rel="noopener">https://www.microsoft.com/en-gb/download/details.aspx?id=40784。</a><br>Linux系统在下载页面选择对应发行版。</p>
<h2 id="2-语法"><a href="#2-语法" class="headerlink" title="2 语法"></a>2 语法</h2><p>mysqldbcompare的语法如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mysqldbcompare --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1:db2</span><br></pre></td></tr></table></figure>

<p>以上参数中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--server1：MySQL服务器1配置。</span><br><span class="line">--server2：MySQL服务器2配置。如果是同一服务器，--server2可以省略。</span><br><span class="line">db1:db2：要比较的两个数据库。如果比较不同服务器上的同名数据库，可以省略:db2。</span><br><span class="line">--all：比较所有两服务器上所有的同名数据库。--exclude排除无需比较的数据库。</span><br><span class="line">--run-all-tests：运行完整比较，遇到第一次差异时不停止。</span><br><span class="line">--changes-for=：修改对象。例如--changes-for=server2，那么对比以sever1为主，生成的差异的修改也是针对server2的对象的修改。</span><br><span class="line">-d DIFFTYPE,--difftype=DIFFTYPE：差异的信息显示的方式，有[unified|context|differ|sql]，默认是unified。如果使用sql，那么就直接生成差异的SQL，这样非常方便。</span><br><span class="line">--show-reverse：在生成的差异修改里面，同时会包含server2和server1的修改。</span><br><span class="line">--skip-table-options：保持表的选项不变，即对比的差异里面不包括表名、AUTO_INCREMENT、ENGINE、CHARSET等差异。</span><br><span class="line">--skip-diff：跳过对象定义比较检查。所谓对象定义，就是CREATE语句()里面的部分，--skip-table-options是()外面的部分。</span><br><span class="line">--skip-object-compare：默认情况下，先检查两个数据库中相互缺失的对象，再对都存在对象间的差异。这个参数的作用就是，跳过第一步，不检查相互缺失的对象。</span><br><span class="line">--skip-checksum-table：数据一致性验证时跳过CHECKSUM TABLE。</span><br><span class="line">--skip-data-check：跳过数据一致性验证。</span><br><span class="line">--skip-row-count：跳过字段数量检查。</span><br></pre></td></tr></table></figure>

<h2 id="3-示例"><a href="#3-示例" class="headerlink" title="3 示例"></a>3 示例</h2><p>比较两个数据库，并生成差异SQL：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ mysqldbcompare --server1=root:root@localhost --server2=root:root@localhost db1:db2 --changes-for=server1 -a --difftype=sql</span><br><span class="line"></span><br><span class="line"># WARNING: Objects in server1.db1 but not in server1.db2:</span><br><span class="line"># TABLE: table2</span><br><span class="line">#</span><br><span class="line"># WARNING: Objects in server1.db2 but not in server1.tb1:</span><br><span class="line"># TABLE: table3</span><br><span class="line">#</span><br><span class="line">#                                                   Defn    Row     Data</span><br><span class="line"># Type      Object Name                             Diff    Count   Check</span><br><span class="line">#-------------------------------------------------------------------------</span><br><span class="line"># TABLE     t1                                      pass    pass    -</span><br><span class="line">#           - Compare table checksum                                FAIL</span><br><span class="line">#           - Find row differences                                  FAIL</span><br><span class="line">#</span><br><span class="line"># Transformation for --changes-for=server1:</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"># Data differences found among rows:</span><br><span class="line">UPDATE db1.t1 SET b = &apos;Test 123&apos; WHERE a = &apos;1&apos;;</span><br><span class="line">UPDATE db1.t1 SET b = &apos;Test 789&apos; WHERE a = &apos;3&apos;;</span><br><span class="line">DELETE FROM db1.t1 WHERE a = &apos;4&apos;;</span><br><span class="line">INSERT INTO db1.t1 (a, b) VALUES(&apos;5&apos;, &apos;New row - db2&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Database consistency check failed.</span><br><span class="line">#</span><br><span class="line"># ...done</span><br></pre></td></tr></table></figure>

<p>WARNING之后提示两个数据库表之间的差异，也就是一个数据库中有，另一个数据库没有的数据表。</p>
<p>之后就是差异的SQL语句了，把有#号注释的行删掉，就能直接在数据库中执行了。</p>
<p><code>说明</code>：执行MySQL语句时可能会遇到这样错误：`Error 1054 - Unknown column ‘name’ in ‘aspect’``</p>
<p>这是因为mysqldbcompare生成的ALTER语句中，用逗号,拼装了多条ADD、CHANGE等语句，如果这些语句还包含AFTER关键字，就会提示这个错误并中断执行MySQL语句。解决的办法就是：去除AFTER及其后面的条件。</p>
<p>这可能是MySQL的一个Bug，详情参考：<a href="http://bugs.mysql.com/bug.php?id=34972" target="_blank" rel="noopener">http://bugs.mysql.com/bug.php?id=34972</a> 和 <a href="http://bugs.mysql.com/bug.php?id=60650。" target="_blank" rel="noopener">http://bugs.mysql.com/bug.php?id=60650。</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Yii2 advanced add module]]></title>
      <url>http://www.wulai.me/2018/06/07/Yii2-advanced-add-module/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Yii2-advanced-add-module"><a href="#Yii2-advanced-add-module" class="headerlink" title="Yii2 advanced add module"></a>Yii2 advanced add module</h1><p><em>在Yii2高级版添加新的模块</em></p>
<h3 id="0-下载Yii2框架，配置环境"><a href="#0-下载Yii2框架，配置环境" class="headerlink" title="0 下载Yii2框架，配置环境"></a>0 下载Yii2框架，配置环境</h3><p><a href="https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/start-installation.md" target="_blank" rel="noopener">https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/start-installation.md</a></p>
<h3 id="1-先在项目的根目录下复制一份-backend-为-api"><a href="#1-先在项目的根目录下复制一份-backend-为-api" class="headerlink" title="1 先在项目的根目录下复制一份 backend 为 api"></a>1 先在项目的根目录下复制一份 backend 为 api</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp backend/ api -r</span><br></pre></td></tr></table></figure>

<h3 id="2-拷贝-api-环境"><a href="#2-拷贝-api-环境" class="headerlink" title="2 拷贝 api 环境"></a>2 拷贝 api 环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -a environments/dev/frontend environments/dev/api</span><br><span class="line">cp -a environments/prod/frontend environments/prod/api</span><br></pre></td></tr></table></figure>

<h3 id="3-修改-environments-index-php-文件之后的代码（主要是添加了一些-api-相关的代码）"><a href="#3-修改-environments-index-php-文件之后的代码（主要是添加了一些-api-相关的代码）" class="headerlink" title="3 修改 environments/index.php 文件之后的代码（主要是添加了一些 api 相关的代码）"></a>3 修改 environments/index.php 文件之后的代码（主要是添加了一些 api 相关的代码）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">return [</span><br><span class="line">    &apos;Development&apos; =&gt; [</span><br><span class="line">        &apos;path&apos; =&gt; &apos;dev&apos;,</span><br><span class="line">        &apos;setWritable&apos; =&gt; [</span><br><span class="line">            &apos;backend/runtime&apos;,</span><br><span class="line">            &apos;backend/web/assets&apos;,</span><br><span class="line">            &apos;frontend/runtime&apos;,</span><br><span class="line">            &apos;frontend/web/assets&apos;,</span><br><span class="line">            &apos;api/runtime&apos;,</span><br><span class="line">            &apos;api/web/assets&apos;,</span><br><span class="line">        ],</span><br><span class="line">        &apos;setExecutable&apos; =&gt; [</span><br><span class="line">            &apos;yii&apos;,</span><br><span class="line">        ],</span><br><span class="line">        &apos;setCookieValidationKey&apos; =&gt; [</span><br><span class="line">            &apos;backend/config/main-local.php&apos;,</span><br><span class="line">            &apos;frontend/config/main-local.php&apos;,</span><br><span class="line">            &apos;api/config/main-local.php&apos;,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">    &apos;Production&apos; =&gt; [</span><br><span class="line">        &apos;path&apos; =&gt; &apos;prod&apos;,</span><br><span class="line">        &apos;setWritable&apos; =&gt; [</span><br><span class="line">            &apos;backend/runtime&apos;,</span><br><span class="line">            &apos;backend/web/assets&apos;,</span><br><span class="line">            &apos;frontend/runtime&apos;,</span><br><span class="line">            &apos;frontend/web/assets&apos;,</span><br><span class="line">            &apos;api/runtime&apos;,</span><br><span class="line">            &apos;api/web/assets&apos;,</span><br><span class="line">        ],</span><br><span class="line">        &apos;setExecutable&apos; =&gt; [</span><br><span class="line">            &apos;yii&apos;,</span><br><span class="line">        ],</span><br><span class="line">        &apos;setCookieValidationKey&apos; =&gt; [</span><br><span class="line">            &apos;backend/config/main-local.php&apos;,</span><br><span class="line">            &apos;frontend/config/main-local.php&apos;,</span><br><span class="line">            &apos;api/config/main-local.php&apos;,</span><br><span class="line">        ],</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h3 id="4-然后再执行初始化命令"><a href="#4-然后再执行初始化命令" class="headerlink" title="4 然后再执行初始化命令"></a>4 然后再执行初始化命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php init</span><br></pre></td></tr></table></figure>

<h3 id="5-然后记得去-common-config-bootstrap-php-最后一行添加如下代码："><a href="#5-然后记得去-common-config-bootstrap-php-最后一行添加如下代码：" class="headerlink" title="5 然后记得去 common/config/bootstrap.php 最后一行添加如下代码："></a>5 然后记得去 <code>common/config/bootstrap.php</code> 最后一行添加如下代码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yii::setAlias(&apos;api&apos;, dirname(dirname(__DIR__)) . &apos;/api&apos;);</span><br></pre></td></tr></table></figure>

<h3 id="6-修改一下配置文件-api-config-main-php"><a href="#6-修改一下配置文件-api-config-main-php" class="headerlink" title="6 修改一下配置文件 api/config/main.php"></a>6 修改一下配置文件 <code>api/config/main.php</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">return [</span><br><span class="line">    &apos;id&apos; =&gt; &apos;app-api&apos;,</span><br><span class="line">    // ...</span><br><span class="line">    &apos;controllerNamespace&apos; =&gt; &apos;api\controllers&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h3 id="7-api-里面的控制器等有命名空间的文件"><a href="#7-api-里面的控制器等有命名空间的文件" class="headerlink" title="7 api 里面的控制器等有命名空间的文件"></a>7 api 里面的控制器等有命名空间的文件</h3><h3 id="8"><a href="#8" class="headerlink" title="8"></a>8</h3>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[金刚盘若波罗蜜经]]></title>
      <url>http://www.wulai.me/2018/05/11/%E9%87%91%E5%88%9A%E7%9B%98%E8%8B%A5%E6%B3%A2%E7%BD%97%E8%9C%9C%E7%BB%8F/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote>
<p>**  三十二品  **<br>法善大妙<br>如<br>正无，依一<br>庄无，尊<br>如<br>离持，能究一法<br>离非，无尽福化<br>法无，不威，一知应</p>
</blockquote>
<h3 id="开经偈"><a href="#开经偈" class="headerlink" title="开经偈"></a>开经偈</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">无上甚深微妙法</span><br><span class="line">百千万劫难遭遇</span><br><span class="line">我今见闻得受持</span><br><span class="line">愿解如来真实义</span><br><span class="line">南无祇园会上佛菩萨</span><br><span class="line">南无祇园会上佛菩萨</span><br><span class="line">南无祇园会上佛菩萨</span><br></pre></td></tr></table></figure>

<h3 id="第一品-法会因由分"><a href="#第一品-法会因由分" class="headerlink" title="第一品 法会因由分"></a><span id="1">第一品 法会因由分</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如是我闻：</span><br><span class="line">一时，佛在舍卫国，祇树给孤独园。</span><br><span class="line">与大比丘众，千二百五十人俱，</span><br><span class="line">尔时，世尊食时，</span><br><span class="line">著衣持钵，入舍卫大城乞食。</span><br><span class="line">于其城中，次第乞已，还至本处。</span><br><span class="line">饭食讫，收衣钵，洗足已，敷座而坐。</span><br></pre></td></tr></table></figure>

<h3 id="第二品-善现启请分"><a href="#第二品-善现启请分" class="headerlink" title="第二品 善现启请分"></a>第二品 善现启请分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">时，长老须菩提在大众中，</span><br><span class="line">即从座起，偏袒右肩，右膝着地，合掌恭敬而白佛言：</span><br><span class="line">“稀有，世尊！如来善护念诸菩萨，善付嘱诸菩萨。</span><br><span class="line">世尊，善男子、善女人，发阿耨多罗三藐三菩提心，</span><br><span class="line">应云何住,云何降伏其心？”</span><br><span class="line"></span><br><span class="line">佛言：</span><br><span class="line">“善哉！善哉！</span><br><span class="line">须菩提，如汝所说，</span><br><span class="line">如来善护念诸菩萨，</span><br><span class="line">善付嘱诸菩萨。</span><br><span class="line">汝今谛听，当为汝说。</span><br><span class="line">善男子，善女人，</span><br><span class="line">发阿耨多罗三藐三菩提心，</span><br><span class="line">应如是住，如是降伏其心。”</span><br><span class="line"></span><br><span class="line">“唯然，世尊，愿乐欲闻”</span><br></pre></td></tr></table></figure>

<h3 id="第三品-大乘正宗分"><a href="#第三品-大乘正宗分" class="headerlink" title="第三品 大乘正宗分"></a>第三品 大乘正宗分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">佛告须菩提：</span><br><span class="line">“诸菩萨摩诃萨,应如是降伏其心：</span><br><span class="line">所有一切众生之类，</span><br><span class="line">若卵生，若胎生，若湿生，若化生，若有色，若无色，若有想，若无想，若非有想非无想。</span><br><span class="line">我皆令入无余涅槃而灭度之。</span><br><span class="line">如是灭度无量无边众生，</span><br><span class="line">实无众生得灭度者。</span><br><span class="line">何以故？</span><br><span class="line">须菩提，</span><br><span class="line">若菩萨有我相、人相、众生相、寿者相，</span><br><span class="line">即非菩萨。”</span><br></pre></td></tr></table></figure>

<h3 id="第四品-妙行无住分"><a href="#第四品-妙行无住分" class="headerlink" title="第四品 妙行无住分"></a>第四品 妙行无住分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">“复次，须菩提，</span><br><span class="line">菩萨于法,应无所住行于布施，</span><br><span class="line">所谓不住色布施，不住声香味触法布施。</span><br><span class="line">须菩提，</span><br><span class="line">菩萨应如是布施，不住于相。</span><br><span class="line">何以故？</span><br><span class="line">若菩萨不住相布施，其福德不可思量。</span><br><span class="line">须菩提，于意云何？</span><br><span class="line">东方虚空可思量否？”</span><br><span class="line">“不也，世尊”</span><br><span class="line">“须菩提，南西北方，四维上下虚空可思量不？”</span><br><span class="line">“不也，世尊”</span><br><span class="line"></span><br><span class="line">“须菩提，若菩萨无住相布施，</span><br><span class="line">福德亦复如是，不可思量。</span><br><span class="line">须菩提，菩萨但应如所教住。”</span><br></pre></td></tr></table></figure>

<h3 id="第五品-如理实见分"><a href="#第五品-如理实见分" class="headerlink" title="第五品 如理实见分"></a>第五品 如理实见分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何？</span><br><span class="line">可以身相见如来不？”</span><br><span class="line">“不也，世尊。不可以身相得见如来。”</span><br><span class="line">“何以故？</span><br><span class="line">如来所说身相，即非身相”</span><br><span class="line">佛告须菩提：</span><br><span class="line">“凡所有相，</span><br><span class="line">皆是虚妄，</span><br><span class="line">若见诸相非相，</span><br><span class="line">即见如来”</span><br></pre></td></tr></table></figure>

<h3 id="第六品-正信稀有分"><a href="#第六品-正信稀有分" class="headerlink" title="第六品 正信稀有分"></a>第六品 正信稀有分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">须菩提白佛言：</span><br><span class="line">“世尊，颇有众生，得闻如是言说章句，生实信不？”</span><br><span class="line">佛告须菩提：</span><br><span class="line">“莫作是说，</span><br><span class="line">如来灭后，后五百岁，</span><br><span class="line">有持戒修福者，于此章句，能生信心，以此为实。</span><br><span class="line">当知是人，</span><br><span class="line">不于一佛二佛三四五佛而种善根。</span><br><span class="line">已于无量千万佛所种诸善根。</span><br><span class="line">闻是章句乃至一念生净信者，</span><br><span class="line">须菩提，</span><br><span class="line">如来悉知悉见，</span><br><span class="line">是诸众生得如是无量福德。</span><br><span class="line">何以故？</span><br><span class="line">是诸众生无复我相、人相、众生相、寿者相，无法相亦无非法相。</span><br><span class="line">何以故？</span><br><span class="line">是诸众生，</span><br><span class="line">若心取相，则为著我人众生寿者。</span><br><span class="line">若取法相，即著我人众生寿者。</span><br><span class="line">何以故？</span><br><span class="line">若取非法相，即著我人众生寿者。</span><br><span class="line">是故不应取法，不应取非法。</span><br><span class="line">以是义故，</span><br><span class="line">如来常说，汝等比丘，知我说法，如筏喻者。</span><br><span class="line">法尚应舍，何况非法。”</span><br></pre></td></tr></table></figure>

<h3 id="第七品-无得无说分"><a href="#第七品-无得无说分" class="headerlink" title="第七品 无得无说分"></a>第七品 无得无说分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何？</span><br><span class="line">如来得阿耨多罗三藐三菩提耶？</span><br><span class="line">如来有所说法耶？”</span><br><span class="line">须菩提言：</span><br><span class="line">“如我解佛所说义，</span><br><span class="line">无有定法名阿耨多罗三藐三菩提，</span><br><span class="line">亦无有定法如来可说。</span><br><span class="line">何以故？</span><br><span class="line">如来所说法，皆不可取，不可说，非法非非法。</span><br><span class="line">所以者何？</span><br><span class="line">一切圣贤皆以无为法而有差别。”</span><br></pre></td></tr></table></figure>

<h3 id="第八品-依法出生分"><a href="#第八品-依法出生分" class="headerlink" title="第八品 依法出生分"></a>第八品 依法出生分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何？</span><br><span class="line">若人满三千大千世界七宝，以用布施，</span><br><span class="line">是人所得福德，宁为多不？”</span><br><span class="line">须菩提言：</span><br><span class="line">“甚多，世尊，</span><br><span class="line">何以故？</span><br><span class="line">是福德即非福德性，是故如来说福德多。”</span><br><span class="line"></span><br><span class="line">“若复有人，于此经中，受持乃至四句偈等，</span><br><span class="line">为他人说。其福胜彼。</span><br><span class="line">何以故？</span><br><span class="line">须菩提，</span><br><span class="line">一切诸佛，及诸佛阿耨多罗三藐三菩提法，皆从此经出。</span><br><span class="line">须菩提，所谓佛法者，即非佛法”</span><br></pre></td></tr></table></figure>

<h3 id="第九品-一相无相分"><a href="#第九品-一相无相分" class="headerlink" title="第九品 一相无相分"></a>第九品 一相无相分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何？</span><br><span class="line">须陀洹能作是念，我的须陀洹果不。”</span><br><span class="line">须菩提言：“不也，世尊。</span><br><span class="line">何以故？</span><br><span class="line">须陀洹名为入流，而无所入，不入色身香味触法。是名须陀洹。”</span><br><span class="line"></span><br><span class="line">“须菩提，于意云何？</span><br><span class="line">斯陀含能作是念，我得斯陀含果不？”</span><br><span class="line">须菩提言：“不也，世尊</span><br><span class="line">何以故？</span><br><span class="line">斯陀含名一往来，而实无往来，是名斯陀含。”</span><br><span class="line"></span><br><span class="line">“须菩提，于意云何？</span><br><span class="line">阿那含能作是念，我得阿那含果不？”</span><br><span class="line">须菩提言：“不也，世尊。</span><br><span class="line">何以故？</span><br><span class="line">阿那含名为不来，而实无不来，是名阿那含”</span><br><span class="line"></span><br><span class="line">“须菩提，于意云何？</span><br><span class="line">阿罗汉能作是念，我得阿罗汉道不？”</span><br><span class="line">须菩提言：“不也，世尊</span><br><span class="line">何以故？</span><br><span class="line">实无有法名阿罗汉，</span><br><span class="line">世尊，若阿罗汉作是念，我得阿罗汉道。即著我人众生寿者。</span><br><span class="line">世尊，佛说我得无诤三昧，人中最为第一，是第一离欲阿罗汉</span><br><span class="line">我不作是念，我是离欲阿罗汉，</span><br><span class="line">世尊，我若作是念，我得阿罗汉道，世尊则不说须不提是乐阿兰那行者</span><br><span class="line">以须菩提实无所行，而名须菩提是乐阿兰那行”</span><br></pre></td></tr></table></figure>

<h3 id="第十品-庄严净土分"><a href="#第十品-庄严净土分" class="headerlink" title="第十品 庄严净土分"></a>第十品 庄严净土分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">佛告须菩提：“于意云何？</span><br><span class="line">如来昔在燃灯佛所，于法有所得不？”</span><br><span class="line">“不也，世尊。如来在燃灯佛所，于法实无所得。”</span><br><span class="line">“须菩提，于意云何，菩萨庄严佛土不？”</span><br><span class="line">“不也，世尊。</span><br><span class="line">何以故？</span><br><span class="line">庄严佛土者，即非庄严，是名庄严。”</span><br><span class="line"></span><br><span class="line">“是故，须菩提，</span><br><span class="line">诸菩萨摩诃萨，应如是生清净心，</span><br><span class="line">不应住色生心，不应住声香味触法生心，应无所住而生其心。</span><br><span class="line">须菩提，譬如有人身如须弥山王，</span><br><span class="line">于意云何，是身为大不？”</span><br><span class="line">须菩提言：“甚大，世尊。</span><br><span class="line">何以故？</span><br><span class="line">佛说非身，是名大身。”</span><br></pre></td></tr></table></figure>

<h3 id="第十一品-无为福盛分"><a href="#第十一品-无为福盛分" class="headerlink" title="第十一品 无为福盛分"></a>第十一品 无为福盛分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，</span><br><span class="line">如恒河中所有沙数，如是沙等恒河，</span><br><span class="line">于意云何，是诸恒河沙，宁为多不？”</span><br><span class="line">须菩提言：“甚多，世尊。但诸恒河尚多无数，何况其沙。”</span><br><span class="line">“须菩提，我今实言告汝，</span><br><span class="line">若有善男子、善女人，以七宝满尔所恒河沙数三千大千世界，</span><br><span class="line">以用布施，得福多不？”</span><br><span class="line">须菩提言：“甚多，世尊。”</span><br><span class="line">佛告须菩提：</span><br><span class="line">“若善男子、善女人，</span><br><span class="line">于此经中乃至受持四句偈等，为他人说。</span><br><span class="line">而此福德胜前福德。”</span><br></pre></td></tr></table></figure>

<h3 id="第十二品-尊重正教分"><a href="#第十二品-尊重正教分" class="headerlink" title="第十二品 尊重正教分"></a>第十二品 尊重正教分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">“复次，须菩提，</span><br><span class="line">随说是经乃至四句偈等，</span><br><span class="line">当知此处，一切世间天人阿修罗，皆应供养，如佛塔庙。</span><br><span class="line">何况有人尽能受持读诵，</span><br><span class="line">须菩提，当知是人，成就最上第一希有之法。</span><br><span class="line">若是经典所在之处，即为有佛，若尊重弟子。”</span><br></pre></td></tr></table></figure>

<h3 id="第十三品-如法受持分"><a href="#第十三品-如法受持分" class="headerlink" title="第十三品 如法受持分"></a>第十三品 如法受持分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">尔时，须菩提白佛言：</span><br><span class="line">“世尊，当何名此经，我等云何奉持？”</span><br><span class="line">佛告须菩提：</span><br><span class="line">“是经名为金刚般若波罗蜜，以是名字，汝当奉持。</span><br><span class="line">所以者何？</span><br><span class="line">须菩提，佛说般若波罗蜜，即非般若波罗蜜，是名般若波罗蜜</span><br><span class="line">须菩提，于意云何，如来有所说法不？”</span><br><span class="line">须菩提白佛言：“世尊，如来无所说。”</span><br><span class="line"></span><br><span class="line">“须菩提，于意云何，三千大千世界所有微尘，是为多不？”</span><br><span class="line">须菩提言：“甚多，世尊。”</span><br><span class="line">“须菩提，</span><br><span class="line">诸微尘，如来说非微尘，是名微尘。</span><br><span class="line">如来说世界，即非世界，是名世界。</span><br><span class="line">须菩提，于意云何，可以三十二相见如来不？”</span><br><span class="line">“不也，世尊，不可以三十二相得见如来。</span><br><span class="line">何以故？</span><br><span class="line">如来说三十二相，即是非相，是名三十二相。”</span><br><span class="line"></span><br><span class="line">“须菩提，</span><br><span class="line">若有善男子、善女人，以恒河沙等身命布施，</span><br><span class="line">若复有人，于此经中，乃至四句偈等，为他人说。</span><br><span class="line">其福甚多。”</span><br></pre></td></tr></table></figure>

<h3 id="第十四品-离相寂灭分"><a href="#第十四品-离相寂灭分" class="headerlink" title="第十四品 离相寂灭分"></a>第十四品 离相寂灭分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">尔时，须菩提闻说是经，深解义趣.</span><br><span class="line">涕泪悲泣,而白佛言：</span><br><span class="line">“稀有，世尊。佛说如是甚深经典，</span><br><span class="line">我从昔来所得慧眼，未曾得闻如是之经。</span><br><span class="line">世尊，</span><br><span class="line">若复有人得闻是经，</span><br><span class="line">信心清净，则生实相。</span><br><span class="line">当知是人，成就最上第一希有功德。</span><br><span class="line">世尊，</span><br><span class="line">是实相者即是非相，是故如来说名实相。</span><br><span class="line">我今得闻如是经典，信解受持，不足为难，</span><br><span class="line">若当来世，后五百岁，</span><br><span class="line">其有众生，得闻是经，信解受持，</span><br><span class="line">是人则为第一希有。</span><br><span class="line">何以故？</span><br><span class="line">此人无我相，无人相，无众生相，无寿者相。</span><br><span class="line">所以者何？</span><br><span class="line">我相即是非相，人相众生相寿者相，即是非相。</span><br><span class="line">何以故？</span><br><span class="line">离一切诸相即是诸佛。”</span><br><span class="line"></span><br><span class="line">佛告须菩提：</span><br><span class="line">“如是如是，若复有人，得闻是经，不惊不怖不畏。</span><br><span class="line">当知是人甚为稀有。</span><br><span class="line">何以故？</span><br><span class="line">须菩提，如来说第一波罗蜜，即非第一波罗蜜，是名第一波罗蜜”</span><br><span class="line"></span><br><span class="line">“须菩提，忍辱波罗蜜，如来说非忍辱波罗蜜，是名忍辱波罗蜜。</span><br><span class="line">何以故？</span><br><span class="line">须菩提，</span><br><span class="line">如我昔为歌利王割截身体，</span><br><span class="line">我于尔时，</span><br><span class="line">无我相无人相无众生相无寿者相。</span><br><span class="line">何以故？</span><br><span class="line">我于往昔节节支解时，</span><br><span class="line">若有我相人相众生相寿者相，应生嗔恨。”</span><br><span class="line"></span><br><span class="line">“须菩提</span><br><span class="line">又念过去于五百世做忍辱仙人，</span><br><span class="line">于尔所世，无我相无人相无众生相无寿者相。</span><br><span class="line">是故，须菩提，</span><br><span class="line">菩萨应离一切相，发阿罗多诺三藐三菩提心，</span><br><span class="line">不应住色生心，不应住声香味触法生心，应生无所住心，</span><br><span class="line">若心有住则为非住。</span><br><span class="line">是故，佛说菩萨心不应住色布施，</span><br><span class="line">须菩提，菩萨为利益一切众生，应如是布施，</span><br><span class="line">如来说一切诸相，即是非相，</span><br><span class="line">又说一切众生，即非众生”</span><br><span class="line"></span><br><span class="line">“须菩提，如来是真语者，实语者，如语者，不诳语者，不异语者。</span><br><span class="line">须菩提，</span><br><span class="line">如来所得法，此法无实无虚，</span><br><span class="line">须菩提，</span><br><span class="line">若菩萨心住于法而行布施，如人如暗，则无所见。</span><br><span class="line">若菩萨心不住法而行布施，如人有目，日光明照，见种种色。”</span><br><span class="line"></span><br><span class="line">“须菩提，当来之世，</span><br><span class="line">若有善男子、善女人，能于此经受持读诵，则为如来。</span><br><span class="line">以佛智慧，悉知是人，悉见是人，皆得成就无量无边功德。”</span><br></pre></td></tr></table></figure>

<h3 id="第十五品-持经功德分"><a href="#第十五品-持经功德分" class="headerlink" title="第十五品 持经功德分"></a>第十五品 持经功德分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，若善男子、善女人，</span><br><span class="line">初日分，以恒河沙等身布施，</span><br><span class="line">中日分，复以恒河沙等身布施，</span><br><span class="line">后日分，亦以恒河沙等身布施。</span><br><span class="line">如是无量百千万亿劫，以身布施</span><br><span class="line">若复有人，闻此经典，信心不逆，其福胜彼。</span><br><span class="line">何况书写受持读诵，为人解说。”</span><br><span class="line"></span><br><span class="line">“须菩提，以要言之，是经有不可思议，不可称量，无边功德。</span><br><span class="line">如来为发大乘者说，为发最上乘者说，</span><br><span class="line">若有人能受持读诵，广为人说。</span><br><span class="line">如来悉知是人，悉见是人，</span><br><span class="line">皆得成就不可量、不可称、无有边，不可思议功德</span><br><span class="line">如是人等，则为荷担如来阿耨多罗三藐三菩提。</span><br><span class="line">何以故？</span><br><span class="line">须菩提，</span><br><span class="line">若乐小法者，着我见、人见众生见寿者见，</span><br><span class="line">则与此经，不能受持读诵，为人解说。”</span><br><span class="line"></span><br><span class="line">“须菩提，</span><br><span class="line">在在处处若有此经，一切世间天人阿修罗，所应供养，</span><br><span class="line">当知此处，则为是塔</span><br><span class="line">皆应恭敬，作礼围绕，以诸华香而散其出”</span><br></pre></td></tr></table></figure>

<h3 id="第十六品-能净业障分"><a href="#第十六品-能净业障分" class="headerlink" title="第十六品 能净业障分"></a>第十六品 能净业障分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">“复次，须菩提，</span><br><span class="line">若善男子、善女人，受持读诵此经</span><br><span class="line">若为人轻贱，是人先世罪业，应坠恶道。</span><br><span class="line">以今世人轻贱故，</span><br><span class="line">先世罪业则为消灭，当得阿耨多罗三藐三菩提。”</span><br><span class="line"></span><br><span class="line">“须菩提，</span><br><span class="line">我念过去无量阿僧祇劫，</span><br><span class="line">于燃灯佛前，得值八百四千万亿那由他诸佛，</span><br><span class="line">悉皆供养成事，无空过者。</span><br><span class="line">若复有人，于后末世，能受持读诵此经，</span><br><span class="line">所得功德，于我所供养诸佛功德</span><br><span class="line">百分不及一、千万亿乃至算数譬喻不能及。”</span><br><span class="line"></span><br><span class="line">“须菩提，若善男子、善女人，</span><br><span class="line">于后末世，有受持读诵此经。</span><br><span class="line">所得功德，我若具说</span><br><span class="line">或有人闻，心则狂乱，狐疑不信。</span><br><span class="line">须菩提，当知是经义不可思议，果报亦不可思议。”</span><br></pre></td></tr></table></figure>

<h3 id="第十七品-究竟无我分"><a href="#第十七品-究竟无我分" class="headerlink" title="第十七品 究竟无我分"></a>第十七品 究竟无我分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">尔时，须菩提白佛言：</span><br><span class="line">“世尊，善男子、善女人发阿耨多罗三藐三菩提心，</span><br><span class="line">云何应住，云何降伏其心？”</span><br><span class="line">佛告须菩提：</span><br><span class="line">“善男子、善女人，发阿耨多罗三藐三菩提心者，</span><br><span class="line">当生如是心</span><br><span class="line">我应灭度一切众生，灭度一切众生已，而无有一众生实灭度者。</span><br><span class="line">何以故？</span><br><span class="line">须菩提，若菩萨有我相人相众生相寿者相，则非菩萨。</span><br><span class="line">所以者何？</span><br><span class="line">须菩提，实无有法发阿罗多了三藐三菩提心者。”</span><br><span class="line"></span><br><span class="line">“须菩提，于意云何？</span><br><span class="line">如来于燃灯佛所，有法得阿耨多罗三藐三菩提不？</span><br><span class="line">不也，世尊.如我解佛所说义，</span><br><span class="line">佛于燃灯佛所，无有法得阿耨多罗三藐三菩提。”</span><br><span class="line"></span><br><span class="line">佛言：“如是如是，</span><br><span class="line">须菩提，实无有法如来得阿耨多罗三藐三菩提，</span><br><span class="line">须菩提，若有法如来得阿耨多罗三藐三菩提，</span><br><span class="line">燃灯佛则不与我授记，汝于来世，当得做佛，号释迦牟尼。</span><br><span class="line">以实无有法得阿耨多罗三藐三菩提，</span><br><span class="line">是故燃灯佛与我授记，作是言，</span><br><span class="line">汝于来世，当得做佛，号释迦牟尼。</span><br><span class="line">何以故？</span><br><span class="line">如来者，即诸法如义。</span><br><span class="line">若有人言，</span><br><span class="line">如来得阿耨多罗三藐三菩提。</span><br><span class="line">须菩提，实无有法，佛得阿耨多罗三藐三菩提。”</span><br><span class="line"></span><br><span class="line">“须菩提，如来所得阿耨多罗三藐三菩提，于是中无实无虚，</span><br><span class="line">是故如来说一切法皆佛法，</span><br><span class="line">须菩提，所言一切法者，即非一切法，是故名一起法。”</span><br><span class="line"></span><br><span class="line">“须菩提，譬如人身长大。”</span><br><span class="line">须菩提言：“世尊，如来说人身长大，即为非大身，是名大身。”</span><br><span class="line"></span><br><span class="line">“须菩提，菩萨亦如是，</span><br><span class="line">若作是言，我当灭度无量众生，</span><br><span class="line">即不名菩萨。</span><br><span class="line">何以故？</span><br><span class="line">须菩提，实无有法名菩萨。</span><br><span class="line">是故如来说，一切法无我无人无众生无寿者。”</span><br><span class="line"></span><br><span class="line">须菩提，若菩萨作是言，我当庄严佛土。</span><br><span class="line">即不名菩萨。</span><br><span class="line">何以故？</span><br><span class="line">如来说庄严佛土者，即非庄严，是名庄严。</span><br><span class="line">若菩萨通达无我法者，如来说名真菩萨。</span><br></pre></td></tr></table></figure>

<h3 id="第十八品-一体同观分"><a href="#第十八品-一体同观分" class="headerlink" title="第十八品 一体同观分"></a>第十八品 一体同观分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何，如来有肉眼不？”</span><br><span class="line">“如是、世尊。如来有肉眼”</span><br><span class="line">“须菩提，于意云何，如来有天眼不？”</span><br><span class="line">“如是、世尊。如来有天眼”</span><br><span class="line">“须菩提，于意云何，如来有慧眼不？”</span><br><span class="line">“如是、世尊。如来有慧眼”</span><br><span class="line">“须菩提，于意云何？如来有法眼不？”</span><br><span class="line">“如是、世尊。如来有法眼”</span><br><span class="line">“须菩提，于意云何？如来有佛言不？”</span><br><span class="line">“如是、世尊。如来有佛眼”</span><br><span class="line">“须菩提，如恒河中所有沙，如来说是沙不？”</span><br><span class="line">“如是、世尊。如来说是沙”</span><br><span class="line">“须菩提，如一恒河中所有沙，有如是沙等恒河，</span><br><span class="line">是诸恒河所有沙数佛世界。如是宁为多不？”</span><br><span class="line">“甚多，世尊。”</span><br><span class="line">佛告须菩提：“尔所国土中，所有众生，若干种心，如来悉知。</span><br><span class="line">何以故？</span><br><span class="line">如来说诸心皆为非心，是名为心。</span><br><span class="line">所以者何？</span><br><span class="line">须菩提，过去心不可得，现在心不可得，未来心不可得。”</span><br></pre></td></tr></table></figure>

<h3 id="第十九品-法界通化分"><a href="#第十九品-法界通化分" class="headerlink" title="第十九品 法界通化分"></a>第十九品 法界通化分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何？</span><br><span class="line">若有人满三千大千世界七宝，以用布施。</span><br><span class="line">是人以是因缘，得福多不？”</span><br><span class="line">“如是，世尊。此人以是因缘，得福甚多。”</span><br><span class="line"></span><br><span class="line">“须菩提，若福德有实，如来不说得福德多，</span><br><span class="line">以福德无故，如来说得福德多”</span><br></pre></td></tr></table></figure>

<h3 id="第二十品-离色离相分"><a href="#第二十品-离色离相分" class="headerlink" title="第二十品 离色离相分"></a>第二十品 离色离相分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何？</span><br><span class="line">佛可以具足色身见不？”</span><br><span class="line">“不也，世尊。如来不应以具足色身见？</span><br><span class="line">何以故？</span><br><span class="line">如来说具足色身，即非具足色身，是名具足色身。”</span><br><span class="line"></span><br><span class="line">“须菩提，于意云何？</span><br><span class="line">如来可以具足诸相见不？</span><br><span class="line">不也，世尊。如来不应以具足诸相见。</span><br><span class="line">何以故？</span><br><span class="line">如来说诸相具足，即非具足，是名诸相具足”</span><br></pre></td></tr></table></figure>

<h3 id="第二十一品-非说所说分"><a href="#第二十一品-非说所说分" class="headerlink" title="第二十一品 非说所说分"></a>第二十一品 非说所说分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，汝勿谓如来作是念，我当有所说法。</span><br><span class="line">莫作是念。</span><br><span class="line">何以故？</span><br><span class="line">若有人言如来有所说法，即为谤佛，不能解我所说故。</span><br><span class="line">须菩提，说法者，无法可说，是名说法。”</span><br><span class="line">尔时慧命须菩提白佛言：</span><br><span class="line">“世尊，颇有众生，于未来世，闻是说法，生信心不？”</span><br><span class="line">佛言：</span><br><span class="line">“须菩提，</span><br><span class="line">彼非众生，非不众生，</span><br><span class="line">何以故？</span><br><span class="line">众生众生者，如来说即非众生，是名众生”</span><br></pre></td></tr></table></figure>

<h3 id="第二十二品-无法可得分"><a href="#第二十二品-无法可得分" class="headerlink" title="第二十二品 无法可得分"></a>第二十二品 无法可得分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">须菩提白佛言：</span><br><span class="line">“世尊，如来得阿耨多罗三藐三菩提，为无所得耶？”</span><br><span class="line">佛言：“如是如是，</span><br><span class="line">我于阿耨多罗三藐三菩提，乃至无有少法可得，</span><br><span class="line">是名阿耨多罗三藐三菩提。”</span><br></pre></td></tr></table></figure>

<h3 id="第二十三品-净心行善分"><a href="#第二十三品-净心行善分" class="headerlink" title="第二十三品 净心行善分"></a>第二十三品 净心行善分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">“复次，须菩提</span><br><span class="line">是法平等，无有高下。是名阿耨多罗三藐三菩提。</span><br><span class="line">以无我无人无众生无寿者，修一切善法</span><br><span class="line">即得阿耨多罗三藐三菩提。</span><br><span class="line"></span><br><span class="line">须菩提，</span><br><span class="line">所言善法者，即非善法，是名善法。”</span><br></pre></td></tr></table></figure>

<h3 id="第二十四品-福智无比分"><a href="#第二十四品-福智无比分" class="headerlink" title="第二十四品 福智无比分"></a>第二十四品 福智无比分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，</span><br><span class="line">若三千大千世界中，所有诸须弥山王，</span><br><span class="line">如是等七宝聚。</span><br><span class="line">有人持用布施。</span><br><span class="line">若有人以此般若波罗蜜经，乃至四句偈等。</span><br><span class="line">受持读诵，为他人说。</span><br><span class="line">于前福德，</span><br><span class="line">百分不及一、百千万亿分乃至算数譬喻所不能及”</span><br></pre></td></tr></table></figure>

<h3 id="第二十五品-化无所化分"><a href="#第二十五品-化无所化分" class="headerlink" title="第二十五品 化无所化分"></a>第二十五品 化无所化分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何？</span><br><span class="line">汝等勿谓如来作是念</span><br><span class="line">我当灭度众生。</span><br><span class="line">莫作是念，</span><br><span class="line">何以故？</span><br><span class="line">实无有众生如来度者。</span><br><span class="line">若有众生如来得灭度者，</span><br><span class="line">如来即有我人众生寿者”</span><br><span class="line"></span><br><span class="line">“须菩提，如来说有我者，</span><br><span class="line">即非有我，但凡夫之人以为有我</span><br><span class="line">须菩提，凡夫者，如来说即非凡夫。”</span><br></pre></td></tr></table></figure>

<h3 id="第二十六品-法身非相分"><a href="#第二十六品-法身非相分" class="headerlink" title="第二十六品 法身非相分"></a>第二十六品 法身非相分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，于意云何，可以三十二相观如来不？”</span><br><span class="line">须菩提言：“如是如是，以三十二相观如来。”</span><br><span class="line">佛言：“若以三十二相观如来，转轮圣王即是如来。”</span><br><span class="line">须菩提白佛言：</span><br><span class="line">“世尊，如我解佛所说义，不应以三十二相观如来。”</span><br><span class="line">尔时，世尊说偈言：</span><br><span class="line">“若以色求我，</span><br><span class="line">以音声求我，</span><br><span class="line">是人行邪道，</span><br><span class="line">不能见如来。”</span><br></pre></td></tr></table></figure>

<h3 id="第二十七品-无断无灭分"><a href="#第二十七品-无断无灭分" class="headerlink" title="第二十七品 无断无灭分"></a>第二十七品 无断无灭分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，汝若作是念，</span><br><span class="line">如来不以具足相故，得阿耨多罗三藐三菩提。</span><br><span class="line">须菩提，</span><br><span class="line">莫作是念，如来不以具足相故，得阿耨多罗三藐三菩提。”</span><br><span class="line"></span><br><span class="line">“须菩提，汝若作是念，</span><br><span class="line">发阿耨多罗三藐三菩提心者，说诸法断灭。</span><br><span class="line">莫作是念，</span><br><span class="line">何以故？</span><br><span class="line">发阿耨多罗三藐三菩提心者，于法不说断灭相”</span><br></pre></td></tr></table></figure>

<h3 id="第二十八品-不贪不受分"><a href="#第二十八品-不贪不受分" class="headerlink" title="第二十八品 不贪不受分"></a>第二十八品 不贪不受分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，</span><br><span class="line">若菩萨以满恒河沙等世界七宝布施，</span><br><span class="line">若复有人知一切法无我，得成于忍。</span><br><span class="line">此菩萨胜前菩萨所得功德。</span><br><span class="line">何以故？</span><br><span class="line">须菩提，以诸菩萨不受福德故。”</span><br><span class="line">须菩提白佛言：</span><br><span class="line">“世尊，云何菩萨不受福德？”</span><br><span class="line">“须菩提，菩萨所作福德，不应贪著，是故说菩萨不受福德。”</span><br></pre></td></tr></table></figure>

<h3 id="第二十九品-威仪寂灭分"><a href="#第二十九品-威仪寂灭分" class="headerlink" title="第二十九品 威仪寂灭分"></a>第二十九品 威仪寂灭分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，若有人言，</span><br><span class="line">如来若来若去，若坐若卧。</span><br><span class="line">是人不解我所说义，</span><br><span class="line">何以故？</span><br><span class="line">如来者无所从来，亦无所去，</span><br><span class="line">故名如来”</span><br></pre></td></tr></table></figure>

<h3 id="第三十品-一合理相分"><a href="#第三十品-一合理相分" class="headerlink" title="第三十品 一合理相分"></a>第三十品 一合理相分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，</span><br><span class="line">若善男子、善女人，</span><br><span class="line">以三千大千世界碎为微尘，</span><br><span class="line">于意云何，是微尘众宁为多不？”</span><br><span class="line">“甚多，世尊</span><br><span class="line">何以故？</span><br><span class="line">若是微尘众实有者，佛则不说是微尘众。</span><br><span class="line">所以者何？</span><br><span class="line">佛说微尘众，即非微尘众，是名微尘众</span><br><span class="line">世尊，</span><br><span class="line">如来说三千大千世界，即非世界，是名世界。</span><br><span class="line">若世界实有，即是一合相。</span><br><span class="line">如来说一合相，即非一合相，是名一合相”</span><br><span class="line"></span><br><span class="line">“须菩提，</span><br><span class="line">一合相者，即是不可说，但凡夫之人贪著其事。”</span><br></pre></td></tr></table></figure>

<h3 id="第三十一品-知见不生分"><a href="#第三十一品-知见不生分" class="headerlink" title="第三十一品 知见不生分"></a>第三十一品 知见不生分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，</span><br><span class="line">若人言，佛说我见人见众生见寿者见，</span><br><span class="line">须菩提，于意云何，是人解我所说义否？”</span><br><span class="line">“不也，世尊，是人不解如来所说义。</span><br><span class="line">何以故？</span><br><span class="line">如来说我见人见众生见寿者见，</span><br><span class="line">即非我见人见众生见寿者见，</span><br><span class="line">是名我见人见众生见寿者见。”</span><br><span class="line"></span><br><span class="line">“须菩提，</span><br><span class="line">发阿耨多罗三藐三菩提心者，</span><br><span class="line">于一切法，</span><br><span class="line">应如是知、如是见、如是信解，不生法相</span><br><span class="line">所言法相者，如来说即非法相，是名法相。”</span><br></pre></td></tr></table></figure>

<h3 id="第三十二品-应化非真分"><a href="#第三十二品-应化非真分" class="headerlink" title="第三十二品 应化非真分"></a>第三十二品 应化非真分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">“须菩提，若有人以满无量阿僧祇世界七宝持用布施。</span><br><span class="line">若善男子、善女人发菩提心者，持于此经，乃至四句偈等，</span><br><span class="line">受持读诵，为人演说。</span><br><span class="line">其福胜彼</span><br><span class="line">云何为人演说？</span><br><span class="line">不取于相，如如不动。</span><br><span class="line">何以故？</span><br><span class="line">一切有为法，</span><br><span class="line">如梦幻泡影</span><br><span class="line">如露亦如电</span><br><span class="line">应作如是观”</span><br><span class="line"></span><br><span class="line">佛说是经已</span><br><span class="line">时长老须菩提及诸比丘、比丘尼</span><br><span class="line">优婆塞、优婆夷，一切世间天人阿修罗</span><br><span class="line">问佛所说，皆大欢喜，信受奉行。</span><br></pre></td></tr></table></figure>

<h3 id="回向偈"><a href="#回向偈" class="headerlink" title="回向偈"></a>回向偈</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">愿以此功德</span><br><span class="line">庄严佛净土</span><br><span class="line">上报四重恩，</span><br><span class="line">下济三途苦</span><br><span class="line">若有见闻者</span><br><span class="line">悉发菩提心</span><br><span class="line">尽此一报身</span><br><span class="line">同生极乐国</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[批量删除指定类型文件]]></title>
      <url>http://www.wulai.me/2018/05/08/%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E7%B1%BB%E5%9E%8B%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>删除当前目录下面所有备份文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm *.bak</span><br></pre></td></tr></table></figure>

<p>如果想删除多级目录下面的所有备份文件，可以用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ./ -name *.bak -exec rm &#123;&#125; \;</span><br></pre></td></tr></table></figure>

<p>或者：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ./ -name *.bak | xargs rm -rf</span><br></pre></td></tr></table></figure>

<p>2者的区别是，第一个是一次性把结果传过去，如果量太大，会导致错误，而后者可以避免这个错误。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[QEMU VM ESCAPE 环境搭建]]></title>
      <url>http://www.wulai.me/2018/04/28/QEMU-VM-ESCAPE-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="QEMU-VM-ESCAPE-环境搭建"><a href="#QEMU-VM-ESCAPE-环境搭建" class="headerlink" title="QEMU VM ESCAPE 环境搭建"></a>QEMU VM ESCAPE 环境搭建</h1><h2 id="0-参考"><a href="#0-参考" class="headerlink" title="0.参考"></a>0.参考</h2><ul>
<li><a href="https://bbs.pediy.com/thread-225211.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-225211.htm</a></li>
<li><a href="https://dangokyo.me/2018/03/02/qemu-escape-part-1-environment-set-up/" target="_blank" rel="noopener">https://dangokyo.me/2018/03/02/qemu-escape-part-1-environment-set-up/</a></li>
<li><a href="https://dangokyo.me/2018/03/08/qemu-escape-part-2-debugging-environment-set-up/" target="_blank" rel="noopener">https://dangokyo.me/2018/03/08/qemu-escape-part-2-debugging-environment-set-up/</a></li>
</ul>
<h2 id="1-安装操作系统-ubuntu-17-10"><a href="#1-安装操作系统-ubuntu-17-10" class="headerlink" title="1.安装操作系统 ubuntu 17.10"></a>1.安装操作系统 <code>ubuntu 17.10</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://mirrors.163.com/ubuntu-releases/17.10/ubuntu-17.10.1-desktop-amd64.iso</span><br></pre></td></tr></table></figure>

<h2 id="2-安装指定版本的qemu"><a href="#2-安装指定版本的qemu" class="headerlink" title="2. 安装指定版本的qemu"></a>2. 安装指定版本的qemu</h2><p>不要使用make install. 后续使用绝对路径执行qemu</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git://git.qemu-project.org/qemu.git</span><br><span class="line">$ cd qemu</span><br><span class="line">$ git checkout bd80b59</span><br><span class="line">$ mkdir -p bin/debug/native</span><br><span class="line">$ cd bin/debug/native</span><br><span class="line">$ ../../../configure --target-list=x86_64-softmmu --enable-debug \</span><br><span class="line">$                    --disable-werror</span><br><span class="line">$ make -j 4</span><br></pre></td></tr></table></figure>

<h2 id="3-创建ubuntu镜像-用户qemu运行虚拟机"><a href="#3-创建ubuntu镜像-用户qemu运行虚拟机" class="headerlink" title="3. 创建ubuntu镜像,用户qemu运行虚拟机"></a>3. 创建ubuntu镜像,用户qemu运行虚拟机</h2><h3 id="3-1-下载linux源代码"><a href="#3-1-下载linux源代码" class="headerlink" title="3.1) 下载linux源代码"></a>3.1) 下载linux源代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.15.18.tar.xz</span><br></pre></td></tr></table></figure>

<h3 id="3-2-编译内核"><a href="#3-2-编译内核" class="headerlink" title="3.2) 编译内核"></a>3.2) 编译内核</h3><p>可能需要安装一下依赖包，发现错误百度一下即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make defconfig</span><br><span class="line">make kvmconfig</span><br><span class="line">make -j 4</span><br></pre></td></tr></table></figure>

<h3 id="3-3-创建Debian-Stretch-image"><a href="#3-3-创建Debian-Stretch-image" class="headerlink" title="3.3) 创建Debian-Stretch image"></a>3.3) 创建Debian-Stretch image</h3><ul>
<li><p>3.3.1） 安装debootstrap工具</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install debootstrap</span><br></pre></td></tr></table></figure>
</li>
<li><p>3.3.2）安装Debian镜像需要的依赖包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir qemu</span><br><span class="line">sudo debootstrap --include=openssh-server,curl,tar,gcc,\</span><br><span class="line">libc6-dev,time,strace,sudo,less,psmisc,\</span><br><span class="line">selinux-utils,policycoreutils,checkpolicy,selinux-policy-default \</span><br><span class="line">stretch qemu</span><br></pre></td></tr></table></figure>
</li>
<li><p>3.3.4） 创建镜像<br>这个镜像配置后，可以通过ssh使用root用户免密钥登录。</p>
</li>
</ul>
<p><em>*脚本中 enp0s3为host机网卡的名称，通过ifconfig先查看后，修改脚本保持一至</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">set -eux</span><br><span class="line"></span><br><span class="line"># Set some defaults and enable promtless ssh to the machine for root.</span><br><span class="line">sudo sed -i &apos;/^root/ &#123; s/:x:/::/ &#125;&apos; qemu/etc/passwd</span><br><span class="line">echo &apos;T0:23:respawn:/sbin/getty -L ttyS0 115200 vt100&apos; | sudo tee -a qemu/etc/inittab</span><br><span class="line">printf &apos;\nauto enp0s3\niface enp0s3 inet dhcp\n&apos; | sudo tee -a qemu/etc/network/interfaces</span><br><span class="line">echo &apos;debugfs /sys/kernel/debug debugfs defaults 0 0&apos; | sudo tee -a qemu/etc/fstab</span><br><span class="line">echo &quot;kernel.printk = 7 4 1 3&quot; | sudo tee -a qemu/etc/sysctl.conf</span><br><span class="line">echo &apos;debug.exception-trace = 0&apos; | sudo tee -a qemu/etc/sysctl.conf</span><br><span class="line">echo &quot;net.core.bpf_jit_enable = 1&quot; | sudo tee -a qemu/etc/sysctl.conf</span><br><span class="line">echo &quot;net.core.bpf_jit_harden = 2&quot; | sudo tee -a qemu/etc/sysctl.conf</span><br><span class="line">echo &quot;net.ipv4.ping_group_range = 0 65535&quot; | sudo tee -a qemu/etc/sysctl.conf</span><br><span class="line">echo -en &quot;127.0.0.1\tlocalhost\n&quot; | sudo tee qemu/etc/hosts</span><br><span class="line">echo &quot;nameserver 8.8.8.8&quot; | sudo tee -a qemu/etc/resolve.conf</span><br><span class="line">echo &quot;ubuntu&quot; | sudo tee qemu/etc/hostname</span><br><span class="line">sudo mkdir -p qemu/root/.ssh/</span><br><span class="line">rm -rf ssh</span><br><span class="line">mkdir -p ssh</span><br><span class="line">ssh-keygen -f ssh/id_rsa -t rsa -N &apos;&apos;</span><br><span class="line">cat ssh/id_rsa.pub | sudo tee qemu/root/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"># Build a disk image</span><br><span class="line">dd if=/dev/zero of=qemu.img bs=1M seek=2047 count=1</span><br><span class="line">sudo mkfs.ext4 -F qemu.img</span><br><span class="line">sudo mkdir -p /mnt/qemu</span><br><span class="line">sudo mount -o loop qemu.img /mnt/qemu</span><br><span class="line">sudo cp -a qemu/. /mnt/qemu/.</span><br><span class="line">sudo umount /mnt/qemu</span><br></pre></td></tr></table></figure>

<h2 id="4-运行qemu"><a href="#4-运行qemu" class="headerlink" title="4.运行qemu"></a>4.运行qemu</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">../Security/qemu/bin/debug/build/x86_64-softmmu/qemu-system-x86_64   \</span><br><span class="line">-kernel /home/dango/Kernel/linux-4.15.7/arch/x86/boot/bzImage  \</span><br><span class="line">-append &quot;console=ttyS0 root=/dev/sda rw&quot;  \</span><br><span class="line">-hda /home/dango/Kernel/Image/image03/qemu.img  \</span><br><span class="line">-enable-kvm -m 2G -nographic \</span><br><span class="line">-netdev user,id=t0, -device rtl8139,netdev=t0,id=nic0 \</span><br><span class="line">-netdev user,id=t1, -device pcnet,netdev=t1,id=nic1</span><br></pre></td></tr></table></figure>

<ul>
<li><code>../Security/qemu/bin/debug/build/x86_64-softmmu/qemu-system-x86_64</code>为第2步生成qemu程序路径</li>
<li><code>/home/dango/Kernel/linux-4.15.7/arch/x86/boot/bzImage</code> 为第3.2中生成的路径</li>
<li><code>/home/dango/Kernel/Image/image03/qemu.img</code> 为第3.3.4中生成文件</li>
</ul>
<p>虚拟机运行起来后，提示输入用户名root,即登录guest虚拟机。</p>
<h2 id="5-测试qemu。"><a href="#5-测试qemu。" class="headerlink" title="5.测试qemu。"></a>5.测试qemu。</h2><p>在第4步中运行起的客户机,在guest 虚拟机执行如下操作</p>
<h3 id="5-1-用vim创建c源代码文件mmu-c"><a href="#5-1-用vim创建c源代码文件mmu-c" class="headerlink" title="5.1 用vim创建c源代码文件mmu.c"></a>5.1 用vim创建c源代码文件mmu.c</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">//mmu.c</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;stdint.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;fcntl.h&gt;</span><br><span class="line">#include &lt;assert.h&gt;</span><br><span class="line">#include &lt;inttypes.h&gt;</span><br><span class="line"></span><br><span class="line">#define PAGE_SHIFT  12</span><br><span class="line">#define PAGE_SIZE   (1 &lt;&lt; PAGE_SHIFT)</span><br><span class="line">#define PFN_PRESENT (1ull &lt;&lt; 63)</span><br><span class="line">#define PFN_PFN     ((1ull &lt;&lt; 55) - 1)</span><br><span class="line"></span><br><span class="line">int fd;</span><br><span class="line"></span><br><span class="line">uint32_t page_offset(uint32_t addr)</span><br><span class="line">&#123;</span><br><span class="line">    return addr &amp; ((1 &lt;&lt; PAGE_SHIFT) - 1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">uint64_t gva_to_gfn(void *addr)</span><br><span class="line">&#123;</span><br><span class="line">    uint64_t pme, gfn;</span><br><span class="line">    size_t offset;</span><br><span class="line">    offset = ((uintptr_t)addr &gt;&gt; 9) &amp; ~7;</span><br><span class="line">    lseek(fd, offset, SEEK_SET);</span><br><span class="line">    read(fd, &amp;pme, 8);</span><br><span class="line">    if (!(pme &amp; PFN_PRESENT))</span><br><span class="line">        return -1;</span><br><span class="line">    gfn = pme &amp; PFN_PFN;</span><br><span class="line">    return gfn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">uint64_t gva_to_gpa(void *addr)</span><br><span class="line">&#123;</span><br><span class="line">    uint64_t gfn = gva_to_gfn(addr);</span><br><span class="line">    assert(gfn != -1);</span><br><span class="line">    return (gfn &lt;&lt; PAGE_SHIFT) | page_offset((uint64_t)addr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    uint8_t *ptr;</span><br><span class="line">    uint64_t ptr_mem;</span><br><span class="line"></span><br><span class="line">    fd = open(&quot;/proc/self/pagemap&quot;, O_RDONLY);</span><br><span class="line">    if (fd &lt; 0) &#123;</span><br><span class="line">        perror(&quot;open&quot;);</span><br><span class="line">        exit(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ptr = malloc(256);</span><br><span class="line">    strcpy(ptr, &quot;Where am I?&quot;);</span><br><span class="line">    printf(&quot;%s\n&quot;, ptr);</span><br><span class="line">    ptr_mem = gva_to_gpa(ptr);</span><br><span class="line">    printf(&quot;Your physical address is at 0x%&quot;PRIx64&quot;\n&quot;, ptr_mem);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-2-用gcc编译如下代码"><a href="#5-2-用gcc编译如下代码" class="headerlink" title="5.2 用gcc编译如下代码"></a>5.2 用gcc编译如下代码</h3><p>如果没有先安装gcc,编译可能会有一些warning，不用在意。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c  mmu.c</span><br></pre></td></tr></table></figure>

<h3 id="5-3-执行程序"><a href="#5-3-执行程序" class="headerlink" title="5.3 执行程序"></a>5.3 执行程序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mmu.o</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[命令行跟踪url跳转]]></title>
      <url>http://www.wulai.me/2018/03/01/%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%B7%9F%E8%B8%AAurl%E8%B7%B3%E8%BD%AC/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>hillock:~ liuligang$ wget -O /dev/null –content-disposition  <a href="http://airhubdemo.shareco.cn" target="_blank" rel="noopener">http://airhubdemo.shareco.cn</a><br>–2018-03-01 18:19:17–  <a href="http://airhubdemo.shareco.cn/" target="_blank" rel="noopener">http://airhubdemo.shareco.cn/</a><br>正在解析主机 airhubdemo.shareco.cn (airhubdemo.shareco.cn)… 119.61.68.138<br>正在连接 airhubdemo.shareco.cn (airhubdemo.shareco.cn)|119.61.68.138|:80… 已连接。<br>已发出 HTTP 请求，正在等待回应… 302 Moved Temporarily<br>位置：<a href="https://airhubdemo.shareco.cn" target="_blank" rel="noopener">https://airhubdemo.shareco.cn</a> [跟随至新的 URL]<br>–2018-03-01 18:19:17–  <a href="https://airhubdemo.shareco.cn/" target="_blank" rel="noopener">https://airhubdemo.shareco.cn/</a><br>正在连接 airhubdemo.shareco.cn (airhubdemo.shareco.cn)|119.61.68.138|:443… 已连接。<br>错误: 无法验证 airhubdemo.shareco.cn 的由 “L=HangZhou,ST=ZheJiang,C=CN,O=H3C,CN=<a href="http://www.h3c.com”" target="_blank" rel="noopener">www.h3c.com”</a> 颁发的证书:<br>  出现了自己签名的证书。<br>    错误: 证书通用名 “<a href="http://www.h3c.com”" target="_blank" rel="noopener">www.h3c.com”</a> 与所要求的主机名 “airhubdemo.shareco.cn” 不符。<br>要以不安全的方式连接至 airhubdemo.shareco.cn，使用“–no-check-certificate”</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[WSL(Windows Subsystem for Linux)的安装与使用]]></title>
      <url>http://www.wulai.me/2018/02/28/WSL-Windows-Subsystem-for-Linux-%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1-按照官网安装手册安装WSL-UBUNTU"><a href="#1-按照官网安装手册安装WSL-UBUNTU" class="headerlink" title="1 按照官网安装手册安装WSL UBUNTU"></a>1 按照官网安装手册安装WSL UBUNTU</h2><p>在windows10 上安装linux系统。具体参考官方文档。<br><a href="https://docs.microsoft.com/en-us/windows/wsl" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/wsl</a></p>
<h2 id="2-中文支持"><a href="#2-中文支持" class="headerlink" title="2 中文支持"></a>2 中文支持</h2><p>启动WSL安装中文包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install language-pack-zh-hans</span><br><span class="line">update-locale LANG=zh_CN.UTF-8</span><br></pre></td></tr></table></figure>

<p>重启</p>
<h2 id="3-window10-命令行乱码"><a href="#3-window10-命令行乱码" class="headerlink" title="3 window10 命令行乱码"></a>3 window10 命令行乱码</h2><p>按下WIN+R快捷键，在运行的窗口中输入:control,打开控制面板；</p>
<p>选择区域–&gt;管理–&gt;非Unicode程序的语言–&gt;更改系统区域设置：中文（简体,中国）</p>
<p>重启电脑，dos中文操作显示，中文输入可以正常使用。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[mysqldump –ignore-databases]]></title>
      <url>http://www.wulai.me/2018/02/22/mysqldump-%E2%80%93ignore-databases/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>With mysqldump it is not possible by the parameters to exclude individual databases. However, the database can be easily queried from the information_schema and this makes an exclude.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysqldump --databases</span><br><span class="line">  `mysql --skip-column-names</span><br><span class="line">    -e &quot;SELECT GROUP_CONCAT(schema_name SEPARATOR &apos; &apos;)</span><br><span class="line">        FROM information_schema.schemata</span><br><span class="line">        WHERE schema_name NOT IN (&apos;mysql&apos;,&apos;performance_schema&apos;,&apos;information_schema&apos;,&apos;db_test&apos;);&quot;`</span><br><span class="line">&gt;/dump.sql</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[lnmp在浏览器显示php错误信息]]></title>
      <url>http://www.wulai.me/2018/02/14/lnmp%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BAphp%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ul>
<li>1、下载安装lnmp一建安装脚本 <a href="https://lnmp.org/" target="_blank" rel="noopener">https://lnmp.org/</a></li>
<li>2、修改<code>/usr/local/php/etc/php-fpm.conf</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">pid = /usr/local/php/var/run/php-fpm.pid</span><br><span class="line">error_log = /usr/local/php/var/log/php-fpm.log</span><br><span class="line">log_level = notice</span><br><span class="line"></span><br><span class="line">[www]</span><br><span class="line">catch_workers_output = yes</span><br><span class="line">listen = /tmp/php-cgi.sock</span><br><span class="line">listen.backlog = -1</span><br><span class="line">listen.allowed_clients = 127.0.0.1</span><br><span class="line">listen.owner = www</span><br><span class="line">listen.group = www</span><br><span class="line">listen.mode = 0666</span><br><span class="line">user = www</span><br><span class="line">group = www</span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 80</span><br><span class="line">pm.start_servers = 40</span><br><span class="line">pm.min_spare_servers = 40</span><br><span class="line">pm.max_spare_servers = 80</span><br><span class="line">request_terminate_timeout = 100</span><br><span class="line">request_slowlog_timeout = 0</span><br><span class="line">slowlog = var/log/slow.log</span><br><span class="line">php_flag[display_errors] = On</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[ffmpeg 多个音频合并 截取 拆分]]></title>
      <url>http://www.wulai.me/2018/01/29/ffmpeg-%E5%A4%9A%E4%B8%AA%E9%9F%B3%E9%A2%91%E5%90%88%E5%B9%B6-%E6%88%AA%E5%8F%96-%E6%8B%86%E5%88%86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="多个mp3文件合并成一个mp3文件"><a href="#多个mp3文件合并成一个mp3文件" class="headerlink" title="多个mp3文件合并成一个mp3文件"></a>多个mp3文件合并成一个mp3文件</h3><p>一种方法是连接到一起</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg64.exe -i &quot;concat:123.mp3|124.mp3&quot; -acodec copy output.mp3</span><br></pre></td></tr></table></figure>

<p>解释：</p>
<ul>
<li>-i代表输入参数</li>
<li>contact:123.mp3|124.mp3代表着需要连接到一起的音频文件</li>
<li>-acodec copy output.mp3 重新编码并复制到新文件中</li>
</ul>
<h3 id="另一种方法是混合到一起"><a href="#另一种方法是混合到一起" class="headerlink" title="另一种方法是混合到一起"></a>另一种方法是混合到一起</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg64.exe -i 124.mp3 -i 123.mp3 -filter_complex amix=inputs=2:duration=first:dropout_transition=2 -f mp3 remix.mp3</span><br></pre></td></tr></table></figure>

<p>解释：</p>
<ul>
<li>-i代表输入参数</li>
<li>-filter_complex ffmpeg滤镜功能，非常强大，详细请查看文档</li>
<li>amix是混合多个音频到单个音频输出</li>
<li>inputs=2代表是2个音频文件，如果更多则代表对应数字</li>
<li>duration 确定最终输出文件的长度</li>
<li>longest(最长)|shortest（最短）|first（第一个文件）</li>
<li>dropout_transition<br>The transition time, in seconds, for volume renormalization when an input stream ends. The default value is 2 seconds.</li>
<li>-f mp3  输出文件格式</li>
</ul>
<h3 id="音频文件截取指定时间部分"><a href="#音频文件截取指定时间部分" class="headerlink" title="音频文件截取指定时间部分"></a>音频文件截取指定时间部分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg64.exe -i 124.mp3 -vn -acodec copy -ss 00:00:00 -t 00:01:32 output.mp3</span><br></pre></td></tr></table></figure>

<p>解释：</p>
<ul>
<li>-i代表输入参数</li>
<li>-acodec copy output.mp3 重新编码并复制到新文件中</li>
<li>-ss 开始截取的时间点</li>
<li>-t 截取音频时间长度</li>
</ul>
<p>音频文件格式转换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg64.exe -i null.ape -ar 44100 -ac 2 -ab 16k -vol 50 -f mp3 null.mp3</span><br></pre></td></tr></table></figure>

<p>解释：</p>
<ul>
<li>-i代表输入参数</li>
<li>-acodec aac（音频编码用AAC）</li>
<li>-ar 设置音频采样频率</li>
<li>-ac  设置音频通道数</li>
<li>-ab 设定声音比特率</li>
<li>-vol &lt;百分比&gt; 设定音量</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> ffmpeg 合并 截取 拆分 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[sphinx scws 全文检索安装配置详解]]></title>
      <url>http://www.wulai.me/2018/01/29/sphinx-scws-%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote>
<p>转载： <a href="http://blog.51yip.com/mysql/1659.html" target="_blank" rel="noopener">http://blog.51yip.com/mysql/1659.html</a></p>
</blockquote>
<p>环境：centos 6.5 x86，php 5.3.3，mysql 5.5.8</p>
<h3 id="一，下载sphinx-scws相关包"><a href="#一，下载sphinx-scws相关包" class="headerlink" title="一，下载sphinx,scws相关包"></a>一，下载sphinx,scws相关包</h3><p>sphinx下载地址：<a href="http://sphinxsearch.com/downloads/release/" target="_blank" rel="noopener">http://sphinxsearch.com/downloads/release/</a></p>
<p>sphinx php扩展下载地址：<a href="http://pecl.php.net/package/sphinx" target="_blank" rel="noopener">http://pecl.php.net/package/sphinx</a></p>
<p>scws下载地址：<a href="http://www.xunsearch.com/scws/download.php" target="_blank" rel="noopener">http://www.xunsearch.com/scws/download.php</a></p>
<p>scws词库下载地址：<a href="http://www.xunsearch.com/scws/down/scws-dict-chs-utf8.tar.bz2" target="_blank" rel="noopener">http://www.xunsearch.com/scws/down/scws-dict-chs-utf8.tar.bz2</a></p>
<h3 id="二，安装sphinx-scws-以及php扩展"><a href="#二，安装sphinx-scws-以及php扩展" class="headerlink" title="二，安装sphinx,scws,以及php扩展"></a>二，安装sphinx,scws,以及php扩展</h3><ul>
<li><p>1,安装sphinx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># tar zxvf sphinx-2.2.5-release.tar.gz  </span><br><span class="line"># cd sphinx-2.2.5-release  </span><br><span class="line"># ./configure --prefix=/usr/local/sphinx2 --with-mysql=/usr/local/mysql  </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>2,安装sphinx客户端</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cd api/libsphinxclient   //sphinx-2.2.5-release目录下  </span><br><span class="line"># ./configure --prefix=/usr/local/sphinx2/libsphinxclient  </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>3,安装sphinx php扩展</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># tar zxvf sphinx-1.3.1.tgz  </span><br><span class="line"># cd sphinx-1.3.1  </span><br><span class="line"># phpize  </span><br><span class="line"># ./configure --with-sphinx=/usr/local/sphinx2/libsphinxclient --with-php-config=/usr/bin/php-config  </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<ul>
<li>4,安装scws</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># tar xvjf scws-1.2.2.tar.bz2  </span><br><span class="line"># mkdir /usr/local/scws  </span><br><span class="line"># cd scws-1.2.2  </span><br><span class="line"># ./configure --prefix=/usr/local/scws/  </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<ul>
<li>5,安装scws php扩展</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># cd ./phpext/  </span><br><span class="line"># phpize  </span><br><span class="line"># ./configure --with-php-config=/usr/bin/php-config  </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<h3 id="三，配置sphinx-scws-php等"><a href="#三，配置sphinx-scws-php等" class="headerlink" title="三，配置sphinx,scws,php等"></a>三，配置sphinx,scws,php等</h3><ul>
<li>1,创建测试表和数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; desc users;  </span><br><span class="line">+----------+-------------+------+-----+---------+----------------+  </span><br><span class="line">| Field | Type | Null | Key | Default | Extra |  </span><br><span class="line">+----------+-------------+------+-----+---------+----------------+  </span><br><span class="line">| user_id | int(11) | NO | PRI | NULL | auto_increment |  </span><br><span class="line">| username | varchar(20) | NO | | NULL | |  </span><br><span class="line">+----------+-------------+------+-----+---------+----------------+  </span><br><span class="line">2 rows in set (0.00 sec)  </span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users;  </span><br><span class="line">+------------+------------+  </span><br><span class="line">| user_id | username |  </span><br><span class="line">+------------+------------+  </span><br><span class="line">| 1311895262 | 张三 |  </span><br><span class="line">| 1311895263 | tank张二 |  </span><br><span class="line">| 1311895264 | tank张一 |  </span><br><span class="line">| 1311895265 | tank张 |  </span><br><span class="line">+------------+------------+  </span><br><span class="line">4 rows in set (0.00 sec)  </span><br><span class="line">mysql&gt; desc orders;  </span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+  </span><br><span class="line">| Field | Type | Null | Key | Default | Extra |  </span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+  </span><br><span class="line">| id | int(11) | NO | PRI | NULL | auto_increment |  </span><br><span class="line">| user_id | int(11) | NO | | NULL | |  </span><br><span class="line">| create_time | datetime | NO | | NULL | |  </span><br><span class="line">| product_name | varchar(20) | NO | | NULL | |  </span><br><span class="line">| summary | text | NO | | NULL | |  </span><br><span class="line">+--------------+-------------+------+-----+---------+----------------+  </span><br><span class="line">5 rows in set (0.00 sec)  </span><br><span class="line"></span><br><span class="line">mysql&gt; select * from orders;  </span><br><span class="line">+----+------------+---------------------+----------------+--------------+  </span><br><span class="line">| id | user_id | create_time | product_name | summary |  </span><br><span class="line">+----+------------+---------------------+----------------+--------------+  </span><br><span class="line">| 9 | 1311895262 | 2014-08-01 00:24:54 | tank is 坦克 | 技术总监 |  </span><br><span class="line">| 10 | 1311895263 | 2014-08-01 00:24:54 | tank is 坦克 | 技术经理 |  </span><br><span class="line">| 11 | 1311895264 | 2014-08-01 00:24:54 | tank is 坦克 | DNB经理 |  </span><br><span class="line">| 12 | 1311895265 | 2014-08-01 00:24:54 | tank is 坦克 | 运维总监 |  </span><br><span class="line">+----+------------+---------------------+----------------+--------------+  </span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>上面二张表，都是真实的mysql表</p>
<ul>
<li>2,配置sphinx.conf，加上以下内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">source myorder  </span><br><span class="line">&#123;  </span><br><span class="line"> type = mysql  </span><br><span class="line"> sql_host = localhost  </span><br><span class="line"> sql_user = root  </span><br><span class="line"> sql_pass =  </span><br><span class="line"> sql_db = test  </span><br><span class="line"> sql_query_pre = SET NAMES utf8  </span><br><span class="line"> sql_query_pre = SET SESSION query_cache_type=OFF  </span><br><span class="line"> sql_query = \  </span><br><span class="line"> SELECT a.id, a.user_id,b.username, UNIX_TIMESTAMP(a.create_time) AS create_time, a.product_name, a.summary \  </span><br><span class="line"> FROM orders a left join users b on a.user_id = b.user_id  </span><br><span class="line"> sql_attr_uint = user_id  </span><br><span class="line"> sql_field_string = username  </span><br><span class="line"> sql_field_string = product_name  </span><br><span class="line"> sql_attr_timestamp = create_time  </span><br><span class="line"></span><br><span class="line"> sql_ranged_throttle = 0  </span><br><span class="line"> #sql_query_info = SELECT * FROM orders WHERE id=$id  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">index myorder  </span><br><span class="line">&#123;  </span><br><span class="line"> source = myorder  </span><br><span class="line"> path = /usr/local/sphinx2/var/data/myorder  </span><br><span class="line"> docinfo = extern  </span><br><span class="line"> mlock = 0  </span><br><span class="line"> morphology = none  </span><br><span class="line"> min_word_len = 1  </span><br><span class="line"> #charset_type = zh_cn.utf-8  </span><br><span class="line"> html_strip = 1  </span><br><span class="line"> charset_table = U+FF10..U+FF19-&gt;0..9, 0..9, U+FF41..U+FF5A-&gt;a..z, U+FF21..U+FF3A-&gt;a..z,A..Z-&gt;a..z, a..z, U+0149, U+017F, U+0138, U+00DF, U+00FF, U+00C0..U+00D6-&gt;U+00E0..U+00F6,U+00E0..U+00F6, U+00D8..U+00DE-&gt;U+00F8..U+00FE, U+00F8..U+00FE, U+0100-&gt;U+0101, U+0101,U+0102-&gt;U+0103, U+0103, U+0104-&gt;U+0105, U+0105, U+0106-&gt;U+0107, U+0107, U+0108-&gt;U+0109,U+0109, U+010A-&gt;U+010B, U+010B, U+010C-&gt;U+010D, U+010D, U+010E-&gt;U+010F, U+010F,U+0110-&gt;U+0111, U+0111, U+0112-&gt;U+0113, U+0113, U+0114-&gt;U+0115, U+0115, U+0116-&gt;U+0117,U+0117, U+0118-&gt;U+0119, U+0119, U+011A-&gt;U+011B, U+011B, U+011C-&gt;U+011D, U+011D,U+011E-&gt;U+011F, U+011F, U+0130-&gt;U+0131, U+0131, U+0132-&gt;U+0133, U+0133, U+0134-&gt;U+0135,U+0135, U+0136-&gt;U+0137, U+0137, U+0139-&gt;U+013A, U+013A, U+013B-&gt;U+013C, U+013C,U+013D-&gt;U+013E, U+013E, U+013F-&gt;U+0140, U+0140, U+0141-&gt;U+0142, U+0142, U+0143-&gt;U+0144,U+0144, U+0145-&gt;U+0146, U+0146, U+0147-&gt;U+0148, U+0148, U+014A-&gt;U+014B, U+014B,U+014C-&gt;U+014D, U+014D, U+014E-&gt;U+014F, U+014F, U+0150-&gt;U+0151, U+0151, U+0152-&gt;U+0153,U+0153, U+0154-&gt;U+0155, U+0155, U+0156-&gt;U+0157, U+0157, U+0158-&gt;U+0159, U+0159,U+015A-&gt;U+015B, U+015B, U+015C-&gt;U+015D, U+015D, U+015E-&gt;U+015F, U+015F, U+0160-&gt;U+0161,U+0161, U+0162-&gt;U+0163, U+0163, U+0164-&gt;U+0165, U+0165, U+0166-&gt;U+0167, U+0167,U+0168-&gt;U+0169, U+0169, U+016A-&gt;U+016B, U+016B, U+016C-&gt;U+016D, U+016D, U+016E-&gt;U+016F,U+016F, U+0170-&gt;U+0171, U+0171, U+0172-&gt;U+0173, U+0173, U+0174-&gt;U+0175, U+0175,U+0176-&gt;U+0177, U+0177, U+0178-&gt;U+00FF, U+00FF, U+0179-&gt;U+017A, U+017A, U+017B-&gt;U+017C,U+017C, U+017D-&gt;U+017E, U+017E, U+0410..U+042F-&gt;U+0430..U+044F, U+0430..U+044F,U+05D0..U+05EA, U+0531..U+0556-&gt;U+0561..U+0586, U+0561..U+0587, U+0621..U+063A, U+01B9,U+01BF, U+0640..U+064A, U+0660..U+0669, U+066E, U+066F, U+0671..U+06D3, U+06F0..U+06FF,U+0904..U+0939, U+0958..U+095F, U+0960..U+0963, U+0966..U+096F, U+097B..U+097F,U+0985..U+09B9, U+09CE, U+09DC..U+09E3, U+09E6..U+09EF, U+0A05..U+0A39, U+0A59..U+0A5E,U+0A66..U+0A6F, U+0A85..U+0AB9, U+0AE0..U+0AE3, U+0AE6..U+0AEF, U+0B05..U+0B39,U+0B5C..U+0B61, U+0B66..U+0B6F, U+0B71, U+0B85..U+0BB9, U+0BE6..U+0BF2, U+0C05..U+0C39,U+0C66..U+0C6F, U+0C85..U+0CB9, U+0CDE..U+0CE3, U+0CE6..U+0CEF, U+0D05..U+0D39, U+0D60,U+0D61, U+0D66..U+0D6F, U+0D85..U+0DC6, U+1900..U+1938, U+1946..U+194F, U+A800..U+A805,U+A807..U+A822, U+0386-&gt;U+03B1, U+03AC-&gt;U+03B1, U+0388-&gt;U+03B5, U+03AD-&gt;U+03B5,U+0389-&gt;U+03B7, U+03AE-&gt;U+03B7, U+038A-&gt;U+03B9, U+0390-&gt;U+03B9, U+03AA-&gt;U+03B9,U+03AF-&gt;U+03B9, U+03CA-&gt;U+03B9, U+038C-&gt;U+03BF, U+03CC-&gt;U+03BF, U+038E-&gt;U+03C5,U+03AB-&gt;U+03C5, U+03B0-&gt;U+03C5, U+03CB-&gt;U+03C5, U+03CD-&gt;U+03C5, U+038F-&gt;U+03C9,U+03CE-&gt;U+03C9, U+03C2-&gt;U+03C3, U+0391..U+03A1-&gt;U+03B1..U+03C1,U+03A3..U+03A9-&gt;U+03C3..U+03C9, U+03B1..U+03C1, U+03C3..U+03C9, U+0E01..U+0E2E,U+0E30..U+0E3A, U+0E40..U+0E45, U+0E47, U+0E50..U+0E59, U+A000..U+A48F, U+4E00..U+9FBF,U+3400..U+4DBF, U+20000..U+2A6DF, U+F900..U+FAFF, U+2F800..U+2FA1F, U+2E80..U+2EFF,U+2F00..U+2FDF, U+3100..U+312F, U+31A0..U+31BF, U+3040..U+309F, U+30A0..U+30FF,U+31F0..U+31FF, U+AC00..U+D7AF, U+1100..U+11FF, U+3130..U+318F, U+A000..U+A48F,U+A490..U+A4CF  </span><br><span class="line"> ngram_len = 1  </span><br><span class="line"> ngram_chars = U+4E00..U+9FBF, U+3400..U+4DBF, U+20000..U+2A6DF, U+F900..U+FAFF,U+2F800..U+2FA1F, U+2E80..U+2EFF, U+2F00..U+2FDF, U+3100..U+312F, U+31A0..U+31BF,U+3040..U+309F, U+30A0..U+30FF,U+31F0..U+31FF, U+AC00..U+D7AF, U+1100..U+11FF,U+3130..U+318F, U+A000..U+A48F, U+A490..U+A4CF  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong><em>注意:</em></strong> 新的sphinx，不支持sql_query_info，charset_type设置了，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: key &apos;sql_query_info&apos; was permanently removed from Sphinx configuration. Refer to documentation for details.</span><br><span class="line">WARNING: key &apos;charset_type&apos; was permanently removed from Sphinx configuration. Refer to documentation for details.</span><br></pre></td></tr></table></figure>

<ul>
<li>3,安装scws词库</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># tar xvjf scws-dict-chs-utf8.tar.bz2 -C /usr/local/scws/etc/  </span><br><span class="line"></span><br><span class="line"># chown tank:tank /usr/local/scws/etc/dict.utf8.xdb</span><br></pre></td></tr></table></figure>

<p>在这里一定要加权限，也就是说让php-fpm或者php-cgi的运行用户，拥有dict.utf8.xdb的所有权限。如果不这么做的话，php 扩展调用词库会报如下错误：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: SimpleCWS::add_dict(): Failed to add the dict file</span><br></pre></td></tr></table></figure>

<p>怎么查看php-fpm,php-cgi的运行用户呢？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># ps aux |grep php-fpm  </span><br><span class="line">root 23487 0.0 0.1 284928 4652 ? Ss Nov05 0:00 php-fpm: master process (/etc/php-fpm.conf)  </span><br><span class="line">tank 23488 0.0 1.3 336108 52328 ? S Nov05 0:02 php-fpm: pool www  //在这里就是tank了  </span><br><span class="line">tank 23489 0.0 0.8 310484 34028 ? S Nov05 0:02 php-fpm: pool www  </span><br><span class="line">tank 23490 0.0 0.7 306620 30156 ? S Nov05 0:02 php-fpm: pool www  </span><br><span class="line">tank 23491 0.0 0.8 310096 33748 ? S Nov05 0:02 php-fpm: pool www  </span><br><span class="line">tank 23492 0.0 1.2 331812 47712 ? S Nov05 0:02 php-fpm: pool www  </span><br><span class="line">tank 24669 0.0 1.2 333520 48896 ? S Nov05 0:01 php-fpm: pool www  </span><br><span class="line">tank 29747 0.0 0.7 305000 27340 ? S 03:27 0:00 php-fpm: pool www  </span><br><span class="line">tank 29761 0.0 1.0 320536 39928 ? S 03:27 0:00 php-fpm: pool www  </span><br><span class="line">root 30705 0.0 0.0 103260 872 pts/5 S+ 04:11 0:00 grep php-fpm</span><br></pre></td></tr></table></figure>

<p>4,配置php.ini</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/php.ini  </span><br><span class="line">[sphinx]  </span><br><span class="line">extension = sphinx.so  </span><br><span class="line"></span><br><span class="line">[scws]  </span><br><span class="line">extension = scws.so  </span><br><span class="line">scws.default.charset = utf-8  </span><br><span class="line">scws.default.fpath = /usr/local/scws/etc</span><br></pre></td></tr></table></figure>

<h3 id="四，启动sphinx-php-fpm"><a href="#四，启动sphinx-php-fpm" class="headerlink" title="四，启动sphinx,php-fpm"></a>四，启动sphinx,php-fpm</h3><ul>
<li><p>1,启动sphinx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># /usr/local/sphinx2/bin/indexer --config /usr/local/sphinx2/etc/sphinx.conf --all  </span><br><span class="line"># /usr/local/sphinx2/bin/searchd --config /usr/local/sphinx2/etc/sphinx.conf</span><br></pre></td></tr></table></figure>
</li>
<li><p>2,重启php-fpm</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># /etc/init.d/php-fpm restart</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>前二次，我安装sphinx，必须在mysql中安装sphinx存储插件，而这次没有，看下图</p>
<img src="http://res.hillock.com.cn/wulai/images/sphinx_no_plugin.jpg">

<h3 id="五，测试sphinx全文检索"><a href="#五，测试sphinx全文检索" class="headerlink" title="五，测试sphinx全文检索"></a>五，测试sphinx全文检索</h3><ul>
<li>1,命令行的测试</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost phpext]# mysql -h 127.0.0.1 -P 9306  </span><br><span class="line">Welcome to the MySQL monitor. Commands end with ; or \g.  </span><br><span class="line">Your MySQL connection id is 1  </span><br><span class="line">Server version: 2.2.5-id64-release (r4825)  </span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.  </span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its  </span><br><span class="line">affiliates. Other names may be trademarks of their respective  </span><br><span class="line">owners.  </span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.  </span><br><span class="line"></span><br><span class="line">mysql&gt; select * from myorder where match(&apos;张&apos;);  </span><br><span class="line">+------+------------+------------+-------------+----------------+  </span><br><span class="line">| id | user_id | username | create_time | product_name |  </span><br><span class="line">+------+------------+------------+-------------+----------------+  </span><br><span class="line">| 9 | 1311895262 | 张三 | 1406823894 | tank is 坦克 |  </span><br><span class="line">| 10 | 1311895263 | tank张二 | 1406823894 | tank is 坦克 |  </span><br><span class="line">| 11 | 1311895264 | tank张一 | 1406823894 | tank is 坦克 |  </span><br><span class="line">| 12 | 1311895265 | tank张 | 1406823894 | tank is 坦克 |  </span><br><span class="line">+------+------------+------------+-------------+----------------+  </span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<ul>
<li>2,利用php 扩展<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line"> header(&quot;Content-type: text/html; charset=utf-8&quot;);  </span><br><span class="line"> $b_time = microtime(true);  </span><br><span class="line"> echo &apos;&lt;p&gt;&apos;.$b_time.&apos;&lt;/p&gt;&apos;;  </span><br><span class="line"> $key = &quot;张三&quot;;  </span><br><span class="line"> $index = &quot;myorder&quot;;  </span><br><span class="line"> //========================================分词  </span><br><span class="line"></span><br><span class="line"> $so = scws_new();  </span><br><span class="line"> $so-&gt;set_charset(&apos;utf-8&apos;);  </span><br><span class="line"> //默认词库  </span><br><span class="line"> $so-&gt;add_dict(ini_get(&apos;scws.default.fpath&apos;) . &apos;/dict.utf8.xdb&apos;);  </span><br><span class="line"> //自定义词库  </span><br><span class="line">// $so-&gt;add_dict(&apos;./dd.txt&apos;,SCWS_XDICT_TXT);  </span><br><span class="line"> //默认规则  </span><br><span class="line"> $so-&gt;set_rule(ini_get(&apos;scws.default.fpath&apos;) . &apos;/rules.utf8.ini&apos;);  </span><br><span class="line"></span><br><span class="line"> //设定分词返回结果时是否去除一些特殊的标点符号  </span><br><span class="line"> $so-&gt;set_ignore(true);  </span><br><span class="line"></span><br><span class="line"> //设定分词返回结果时是否复式分割，如“中国人”返回“中国＋人＋中国人”三个词。  </span><br><span class="line"> // 按位异或的 1 | 2 | 4 | 8 分别表示: 短词 | 二元 | 主要单字 | 所有单字  </span><br><span class="line"> //1,2,4,8 分别对应常量 SCWS_MULTI_SHORT SCWS_MULTI_DUALITY SCWS_MULTI_ZMAIN SCWS_MULTI_ZALL  </span><br><span class="line"> $so-&gt;set_multi(false);  </span><br><span class="line"></span><br><span class="line"> //设定是否将闲散文字自动以二字分词法聚合  </span><br><span class="line"> $so-&gt;set_duality(false);  </span><br><span class="line"></span><br><span class="line"> //设定搜索词  </span><br><span class="line"> $so-&gt;send_text($key);  </span><br><span class="line"> $words_array = $so-&gt;get_result();  </span><br><span class="line"> $words = &quot;&quot;;  </span><br><span class="line"> foreach($words_array as $v)  </span><br><span class="line"> &#123;  </span><br><span class="line"> $words = $words.&apos;|(&apos;.$v[&apos;word&apos;].&apos;)&apos;;  </span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> //加入全词  </span><br><span class="line"> #$words = &apos;(&apos;.$key.&apos;)&apos;.$words;  </span><br><span class="line"> $words = trim($words,&apos;|&apos;);  </span><br><span class="line"> $so-&gt;close();  </span><br><span class="line"> echo &apos;&lt;p&gt;输入：&apos;.$key.&apos;&lt;/p&gt;&apos;;  </span><br><span class="line"> echo &apos;&lt;p&gt;分词：&apos;.$words.&apos;&lt;/p&gt;&apos;;  </span><br><span class="line">//========================================搜索  </span><br><span class="line"> $sc = new SphinxClient();  </span><br><span class="line"> $sc-&gt;SetServer(&apos;127.0.0.1&apos;,9312);  </span><br><span class="line"> #$sc-&gt;SetMatchMode(SPH_MATCH_ALL);  </span><br><span class="line"> $sc-&gt;SetMatchMode(SPH_MATCH_EXTENDED);  </span><br><span class="line"> $sc-&gt;SetArrayResult(TRUE);  </span><br><span class="line"> $res = $sc-&gt;Query($words,$index);  </span><br><span class="line"> print_r($res);  </span><br><span class="line"> $e_time = microtime(true);  </span><br><span class="line"> $time = $e_time - $b_time;  </span><br><span class="line"> echo &apos;&lt;p&gt;&apos;.$e_time.&apos;&lt;/p&gt;&apos;;  </span><br><span class="line"></span><br><span class="line"> echo &apos;&lt;p&gt;&apos;.$time.&apos;&lt;/p&gt;&apos;;  </span><br><span class="line"> exit;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>结果如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;1415214126.9106&lt;/p&gt;&lt;p&gt;输入：张三&lt;/p&gt;&lt;p&gt;分词：(张三)&lt;/p&gt;Array  </span><br><span class="line">(  </span><br><span class="line"> [error] =&gt;  </span><br><span class="line"> [warning] =&gt;  </span><br><span class="line"> [status] =&gt; 0  </span><br><span class="line"> [fields] =&gt; Array  </span><br><span class="line"> (  </span><br><span class="line"> [0] =&gt; username  </span><br><span class="line"> [1] =&gt; product_name  </span><br><span class="line"> [2] =&gt; summary  </span><br><span class="line"> )  </span><br><span class="line"></span><br><span class="line"> [attrs] =&gt; Array  </span><br><span class="line"> (  </span><br><span class="line"> [user_id] =&gt; 1  </span><br><span class="line"> [username] =&gt; 7  </span><br><span class="line"> [create_time] =&gt; 2  </span><br><span class="line"> [product_name] =&gt; 7  </span><br><span class="line"> )  </span><br><span class="line"></span><br><span class="line"> [matches] =&gt; Array  </span><br><span class="line"> (  </span><br><span class="line"> [0] =&gt; Array  </span><br><span class="line"> (  </span><br><span class="line"> [id] =&gt; 9  </span><br><span class="line"> [weight] =&gt; 2500  </span><br><span class="line"> [attrs] =&gt; Array  </span><br><span class="line"> (  </span><br><span class="line"> [user_id] =&gt; 1311895262  </span><br><span class="line"> [username] =&gt; 张三  </span><br><span class="line"> [create_time] =&gt; 1406823894  </span><br><span class="line"> [product_name] =&gt; tank is 坦克  </span><br><span class="line"> )  </span><br><span class="line"></span><br><span class="line"> )  </span><br><span class="line"></span><br><span class="line"> )  </span><br><span class="line"></span><br><span class="line"> [total] =&gt; 1  </span><br><span class="line"> [total_found] =&gt; 1  </span><br><span class="line"> [time] =&gt; 0  </span><br><span class="line"> [words] =&gt; Array  </span><br><span class="line"> (  </span><br><span class="line"> [张] =&gt; Array  </span><br><span class="line"> (  </span><br><span class="line"> [docs] =&gt; 4  </span><br><span class="line"> [hits] =&gt; 4  </span><br><span class="line"> )  </span><br><span class="line"></span><br><span class="line"> [三] =&gt; Array  </span><br><span class="line"> (  </span><br><span class="line"> [docs] =&gt; 1  </span><br><span class="line"> [hits] =&gt; 1  </span><br><span class="line"> )  </span><br><span class="line"></span><br><span class="line"> )  </span><br><span class="line"></span><br><span class="line">)  </span><br><span class="line">&lt;p&gt;1415214126.9516&lt;/p&gt;&lt;p&gt;0.041085958480835&lt;/p&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      
        
        <tags>
            
            <tag> scws, sphinx, 中文分词, 全文检索, 安装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[sphinx-scws-全文检索(PHP7、MariaDB)]]></title>
      <url>http://www.wulai.me/2018/01/29/sphinx-scws-%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2(PHP7%E3%80%81MariaDB)/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>环境：centos 7 x86_64，php 7.1.7， MariaDB 10.1.23</p>
<h3 id="一，下载sphinx-scws相关包"><a href="#一，下载sphinx-scws相关包" class="headerlink" title="一，下载sphinx,scws相关包"></a>一，下载sphinx,scws相关包</h3><p>sphinx下载地址：<a href="http://sphinxsearch.com/downloads/release/" target="_blank" rel="noopener">http://sphinxsearch.com/downloads/release/</a></p>
<p>sphinx php扩展下载地址：<a href="http://pecl.php.net/package/sphinx" target="_blank" rel="noopener">http://pecl.php.net/package/sphinx</a></p>
<p>scws下载地址：<a href="http://www.xunsearch.com/scws/download.php" target="_blank" rel="noopener">http://www.xunsearch.com/scws/download.php</a></p>
<p>scws词库下载地址：<a href="http://www.xunsearch.com/scws/down/scws-dict-chs-utf8.tar.bz2" target="_blank" rel="noopener">http://www.xunsearch.com/scws/down/scws-dict-chs-utf8.tar.bz2</a></p>
<h3 id="二，安装sphinx-scws-以及php扩展"><a href="#二，安装sphinx-scws-以及php扩展" class="headerlink" title="二，安装sphinx,scws,以及php扩展"></a>二，安装sphinx,scws,以及php扩展</h3><ul>
<li><p>1,安装sphinx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># curl http://sphinxsearch.com/files/sphinx-2.3.1-beta.tar.gz</span><br><span class="line"># tar zxvf sphinx-2.3.1-beta.tar.gz  </span><br><span class="line"># cd sphinx-2.3.1-beta  </span><br><span class="line"># ./configure --prefix=/usr/local/sphinx --with-mysql=/usr/local/mariadb LIBS=-liconv</span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>2,安装sphinx客户端</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cd api/libsphinxclient   //sphinx-2.3.1-beta目录下  </span><br><span class="line"># ./configure --prefix=/usr/local/sphinx/libsphinxclient  </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>3,安装sphinx php扩展</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># git clone https://github.com/php/pecl-search_engine-sphinx.git  </span><br><span class="line"># cd pecl-search_engine-sphinx</span><br><span class="line"># git checkout php7  </span><br><span class="line"># phpize  </span><br><span class="line"># ./configure  --with-sphinx=/usr/local/sphinx/libsphinxclient --with-php-config=/usr/local/php/bin/php-config  </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<ul>
<li>4,安装scws</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># cd /usr/local/src  </span><br><span class="line"># wget http://www.xunsearch.com/scws/down/scws-1.2.3.tar.bz2</span><br><span class="line"># tar xvjf scws-1.2.3.tar.bz2  </span><br><span class="line"># mkdir /usr/local/scws     </span><br><span class="line"># cd scws-1.2.3     </span><br><span class="line"># ./configure --prefix=/usr/local/scws/     </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<ul>
<li>5,安装scws php扩展</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># cd /usr/local/src/sphinx/scws-1.2.3/phpext    </span><br><span class="line"># phpize     </span><br><span class="line"># ./configure --with-php-config=/usr/local/php/bin/php-config   </span><br><span class="line"># make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<ul>
<li>6 安装scws词库</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># wget http://www.xunsearch.com/scws/down/scws-dict-chs-utf8.tar.bz2</span><br><span class="line"># tar xvjf scws-dict-chs-utf8.tar.bz2 -C /usr/local/scws/etc/  </span><br><span class="line"></span><br><span class="line"># www为php-fpm运行用户  </span><br><span class="line"># chown www:www /usr/local/scws/etc/dict.utf8.xdb</span><br></pre></td></tr></table></figure>

<p>在这里一定要加权限，也就是说让php-fpm或者php-cgi的运行用户，拥有dict.utf8.xdb的所有权限。如果不这么做的话，php 扩展调用词库会报如下错误：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: SimpleCWS::add_dict(): Failed to add the dict file</span><br></pre></td></tr></table></figure>

<p>怎么查看php-fpm,php-cgi的运行用户呢？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># ps aux |grep php-fpm  </span><br><span class="line">[www@localhost src]$ ps aux |grep php-fpm</span><br><span class="line">www       51250  0.0  0.0 103340   912 pts/0    S+   11:35   0:00 grep php-fpm</span><br><span class="line">root     102701  0.0  0.0 256360  7064 ?        Ss   Jan23   0:07 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)                                                                    </span><br><span class="line">www      102702  0.0  0.0 259536 12332 ?        S    Jan23   0:00 php-fpm: pool     //使用php的用户 www                                                                                                            </span><br><span class="line">www      102703  0.0  0.0 259316 11792 ?        S    Jan23   0:00 php-fpm: pool www                                                                                                            </span><br><span class="line">www      102704  0.0  0.0 261576 14060 ?        S    Jan23   0:00 php-fpm: pool www                                                                                                            </span><br><span class="line">www      102705  0.0  0.0 259304 11852 ?        S    Jan23   0:00 php-fpm: pool www                                                                                                            </span><br><span class="line">www      102706  0.0  0.0 259128 12016 ?        S    Jan23   0:00 php-fpm: pool www                                                                                                            </span><br><span class="line">www      102707  0.0  0.0 259400 12100 ?        S    Jan23   0:00 php-fpm: pool www                                                                                                            </span><br><span class="line">www      102708  0.0  0.0 259296 12092 ?        S    Jan23   0:00 php-fpm: pool www</span><br></pre></td></tr></table></figure>

<h3 id="三，配置sphinx-scws-php等"><a href="#三，配置sphinx-scws-php等" class="headerlink" title="三，配置sphinx,scws,php等"></a>三，配置sphinx,scws,php等</h3><ul>
<li>1,创建测试表和数据 test.sql</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">test.sql</span><br><span class="line">/*</span><br><span class="line">Navicat MySQL Data Transfer</span><br><span class="line"></span><br><span class="line">Source Server         : 192.168.101.130</span><br><span class="line">Source Server Version : 50527</span><br><span class="line">Source Host           : 192.168.101.130:3306</span><br><span class="line">Source Database       : test</span><br><span class="line"></span><br><span class="line">Target Server Type    : MYSQL</span><br><span class="line">Target Server Version : 50527</span><br><span class="line">File Encoding         : 65001</span><br><span class="line"></span><br><span class="line">Date: 2016-08-14 13:46:48</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for `userinfo`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `userinfo`;</span><br><span class="line">CREATE TABLE `userinfo` (</span><br><span class="line">  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `userid` int(11) unsigned NOT NULL DEFAULT &apos;0&apos;,</span><br><span class="line">  `addtime` datetime NOT NULL,</span><br><span class="line">  `post` varchar(20) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">  `summary` text NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of userinfo</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `userinfo` VALUES (&apos;17&apos;, &apos;1&apos;, &apos;2012-06-01 00:24:54&apos;, &apos;洪&apos;, &apos;奥运&apos;);</span><br><span class="line">INSERT INTO `userinfo` VALUES (&apos;18&apos;, &apos;2&apos;, &apos;2014-08-19 10:24:54&apos;, &apos;中国人&apos;, &apos;洪荒&apos;);</span><br><span class="line">INSERT INTO `userinfo` VALUES (&apos;19&apos;, &apos;3&apos;, &apos;2015-08-01 12:24:54&apos;, &apos;洪荒之&apos;, &apos;nimne&apos;);</span><br><span class="line">INSERT INTO `userinfo` VALUES (&apos;20&apos;, &apos;4&apos;, &apos;2013-08-01 00:24:54&apos;, &apos;洪荒之力&apos;, &apos;23金&apos;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for `users`</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `users`;</span><br><span class="line">CREATE TABLE `users` (</span><br><span class="line">  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(20) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of users</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `users` VALUES (&apos;1&apos;, &apos;zhangsan&apos;);</span><br><span class="line">INSERT INTO `users` VALUES (&apos;2&apos;, &apos;zhangsi&apos;);</span><br><span class="line">INSERT INTO `users` VALUES (&apos;3&apos;, &apos;李四&apos;);</span><br><span class="line">INSERT INTO `users` VALUES (&apos;4&apos;, &apos;王五&apos;);</span><br></pre></td></tr></table></figure>

<p>导入数据 <code>source test.sql</code></p>
<img src="http://res.hillock.com.cn/wulai/images/20160814140124005.jpg">

<p>数据源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">	a.id,</span><br><span class="line">	a.userid,</span><br><span class="line">    b.username,</span><br><span class="line">    UNIX_TIMESTAMP(a.addtime) AS addtime,</span><br><span class="line">    a.post,</span><br><span class="line">    a.summary</span><br><span class="line"></span><br><span class="line">FROM</span><br><span class="line">	userinfo a</span><br><span class="line"></span><br><span class="line">LEFT JOIN users b ON a.userid = b.id</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+----+--------+----------+------------+--------------+---------+</span><br><span class="line">| id | userid | username | addtime    | post         | summary |</span><br><span class="line">+----+--------+----------+------------+--------------+---------+</span><br><span class="line">| 17 |      1 | zhangsan | 1338481494 | 洪           | 奥运    |</span><br><span class="line">| 18 |      2 | zhangsi  | 1408415094 | 中国人       | 洪荒    |</span><br><span class="line">| 19 |      3 | 李四     | 1438403094 | 洪荒之       | nimne   |</span><br><span class="line">| 20 |      4 | 王五     | 1375287894 | 洪荒之力     | 23金    |</span><br><span class="line">+----+--------+----------+------------+--------------+---------+</span><br></pre></td></tr></table></figure>

<img src="http://res.hillock.com.cn/wulai/images/20160814140002253.jpg">

<ul>
<li><p>2,配置sphinx.conf，加上以下内容<br>其中searchd 以下3个配置比较重要。<code>mysql -h0 -P 9306</code>访问。9312可以给php访问。query_log_format 记录日志的格式。</p>
</li>
<li><p>1 # php<br><code>listen          = 9312</code></p>
</li>
<li><p>2 # mysql<br><code>listen          = 9306:mysql41</code></p>
</li>
<li><p>3 # log_format</p>
<p><code>query_log_format = sphinxql</code></p>
</li>
<li><p>sphinx.conf</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"># vim /usr/local/sphinx/etc/sphinx-test.conf</span><br><span class="line"></span><br><span class="line">source users</span><br><span class="line">&#123;</span><br><span class="line">	type			= mysql</span><br><span class="line">	sql_host		= 127.0.0.1</span><br><span class="line">	sql_user		= root</span><br><span class="line">	sql_pass		= 123456</span><br><span class="line">	sql_db			= test</span><br><span class="line">	sql_port		= 3306	# optional, default is 3306</span><br><span class="line">	sql_query_pre = SET NAMES utf8</span><br><span class="line">        sql_query_pre = SET SESSION query_cache_type=OFF  </span><br><span class="line">        sql_query = 	SELECT a.id, a.userid,b.username, UNIX_TIMESTAMP(a.addtime) AS addtime, a.post, a.summary 	FROM userinfo a left join users b on a.userid = b.id  </span><br><span class="line">	sql_attr_uint = userid  </span><br><span class="line">	sql_field_string = username  </span><br><span class="line">	sql_field_string = post  </span><br><span class="line">	sql_attr_timestamp = addtime</span><br><span class="line">	sql_ranged_throttle = 0  </span><br><span class="line">	#sql_attr_uint		= group_id</span><br><span class="line">	#sql_attr_timestamp	= date_added</span><br><span class="line">	#sql_ranged_throttle	= 0</span><br><span class="line">&#125;</span><br><span class="line">source src1throttled : users</span><br><span class="line">&#123;</span><br><span class="line">	sql_ranged_throttle	= 100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">index users</span><br><span class="line">&#123;  </span><br><span class="line">	source = users</span><br><span class="line">	path = /usr/local/sphinx/var/data/users</span><br><span class="line">	docinfo = extern  </span><br><span class="line">	mlock = 0  </span><br><span class="line">	morphology = none  </span><br><span class="line">	min_word_len = 1  </span><br><span class="line">	html_strip = 1  </span><br><span class="line">  charset_table = U+FF10..U+FF19-&gt;0..9, 0..9, U+FF41..U+FF5A-&gt;a..z, U+FF21..U+FF3A-&gt;a..z,A..Z-&gt;a..z, a..z, U+0149, U+017F, U+0138, U+00DF, U+00FF, U+00C0..U+00D6-&gt;U+00E0..U+00F6,U+00E0..U+00F6, U+00D8..U+00DE-&gt;U+00F8..U+00FE, U+00F8..U+00FE, U+0100-&gt;U+0101, U+0101,U+0102-&gt;U+0103, U+0103, U+0104-&gt;U+0105, U+0105, U+0106-&gt;U+0107, U+0107, U+0108-&gt;U+0109,U+0109, U+010A-&gt;U+010B, U+010B, U+010C-&gt;U+010D, U+010D, U+010E-&gt;U+010F, U+010F,U+0110-&gt;U+0111, U+0111, U+0112-&gt;U+0113, U+0113, U+0114-&gt;U+0115, U+0115, U+0116-&gt;U+0117,U+0117, U+0118-&gt;U+0119, U+0119, U+011A-&gt;U+011B, U+011B, U+011C-&gt;U+011D, U+011D,U+011E-&gt;U+011F, U+011F, U+0130-&gt;U+0131, U+0131, U+0132-&gt;U+0133, U+0133, U+0134-&gt;U+0135,U+0135, U+0136-&gt;U+0137, U+0137, U+0139-&gt;U+013A, U+013A, U+013B-&gt;U+013C, U+013C,U+013D-&gt;U+013E, U+013E, U+013F-&gt;U+0140, U+0140, U+0141-&gt;U+0142, U+0142, U+0143-&gt;U+0144,U+0144, U+0145-&gt;U+0146, U+0146, U+0147-&gt;U+0148, U+0148, U+014A-&gt;U+014B, U+014B,U+014C-&gt;U+014D, U+014D, U+014E-&gt;U+014F, U+014F, U+0150-&gt;U+0151, U+0151, U+0152-&gt;U+0153,U+0153, U+0154-&gt;U+0155, U+0155, U+0156-&gt;U+0157, U+0157, U+0158-&gt;U+0159, U+0159,U+015A-&gt;U+015B, U+015B, U+015C-&gt;U+015D, U+015D, U+015E-&gt;U+015F, U+015F, U+0160-&gt;U+0161,U+0161, U+0162-&gt;U+0163, U+0163, U+0164-&gt;U+0165, U+0165, U+0166-&gt;U+0167, U+0167,U+0168-&gt;U+0169, U+0169, U+016A-&gt;U+016B, U+016B, U+016C-&gt;U+016D, U+016D, U+016E-&gt;U+016F,U+016F, U+0170-&gt;U+0171, U+0171, U+0172-&gt;U+0173, U+0173, U+0174-&gt;U+0175, U+0175,U+0176-&gt;U+0177, U+0177, U+0178-&gt;U+00FF, U+00FF, U+0179-&gt;U+017A, U+017A, U+017B-&gt;U+017C,U+017C, U+017D-&gt;U+017E, U+017E, U+0410..U+042F-&gt;U+0430..U+044F, U+0430..U+044F,U+05D0..U+05EA, U+0531..U+0556-&gt;U+0561..U+0586, U+0561..U+0587, U+0621..U+063A, U+01B9,U+01BF, U+0640..U+064A, U+0660..U+0669, U+066E, U+066F, U+0671..U+06D3, U+06F0..U+06FF,U+0904..U+0939, U+0958..U+095F, U+0960..U+0963, U+0966..U+096F, U+097B..U+097F,U+0985..U+09B9, U+09CE, U+09DC..U+09E3, U+09E6..U+09EF, U+0A05..U+0A39, U+0A59..U+0A5E,U+0A66..U+0A6F, U+0A85..U+0AB9, U+0AE0..U+0AE3, U+0AE6..U+0AEF, U+0B05..U+0B39,U+0B5C..U+0B61, U+0B66..U+0B6F, U+0B71, U+0B85..U+0BB9, U+0BE6..U+0BF2, U+0C05..U+0C39,U+0C66..U+0C6F, U+0C85..U+0CB9, U+0CDE..U+0CE3, U+0CE6..U+0CEF, U+0D05..U+0D39, U+0D60,U+0D61, U+0D66..U+0D6F, U+0D85..U+0DC6, U+1900..U+1938, U+1946..U+194F, U+A800..U+A805,U+A807..U+A822, U+0386-&gt;U+03B1, U+03AC-&gt;U+03B1, U+0388-&gt;U+03B5, U+03AD-&gt;U+03B5,U+0389-&gt;U+03B7, U+03AE-&gt;U+03B7, U+038A-&gt;U+03B9, U+0390-&gt;U+03B9, U+03AA-&gt;U+03B9,U+03AF-&gt;U+03B9, U+03CA-&gt;U+03B9, U+038C-&gt;U+03BF, U+03CC-&gt;U+03BF, U+038E-&gt;U+03C5,U+03AB-&gt;U+03C5, U+03B0-&gt;U+03C5, U+03CB-&gt;U+03C5, U+03CD-&gt;U+03C5, U+038F-&gt;U+03C9,U+03CE-&gt;U+03C9, U+03C2-&gt;U+03C3, U+0391..U+03A1-&gt;U+03B1..U+03C1,U+03A3..U+03A9-&gt;U+03C3..U+03C9, U+03B1..U+03C1, U+03C3..U+03C9, U+0E01..U+0E2E,U+0E30..U+0E3A, U+0E40..U+0E45, U+0E47, U+0E50..U+0E59</span><br><span class="line">	ngram_len = 1  </span><br><span class="line">	ngram_chars = U+4E00..U+9FBF, U+3400..U+4DBF, U+20000..U+2A6DF, U+F900..U+FAFF,U+2F800..U+2FA1F, U+2E80..U+2EFF, U+2F00..U+2FDF, U+3100..U+312F, U+31A0..U+31BF,U+3040..U+309F, U+30A0..U+30FF,U+31F0..U+31FF, U+AC00..U+D7AF, U+1100..U+11FF,U+3130..U+318F, U+A000..U+A48F, U+A490..U+A4CF  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">common</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">indexer</span><br><span class="line">&#123;</span><br><span class="line">	mem_limit		= 128M</span><br><span class="line">&#125;</span><br><span class="line">searchd</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	#php</span><br><span class="line">	listen          = 9312</span><br><span class="line"></span><br><span class="line">	#mysql</span><br><span class="line">    listen          = 9306:mysql41</span><br><span class="line"></span><br><span class="line">	log			= /usr/local/sphinx/var/log/searchd.log</span><br><span class="line">	query_log		= /usr/local/sphinx/var/log/query.log</span><br><span class="line">	query_log_format = sphinxql</span><br><span class="line">	read_timeout		= 5</span><br><span class="line">	client_timeout		= 300</span><br><span class="line">	max_children		= 30</span><br><span class="line">	persistent_connections_limit	= 30</span><br><span class="line">	pid_file		= /usr/local/sphinx/var/log/searchd.pid</span><br><span class="line">	seamless_rotate		= 1</span><br><span class="line">	preopen_indexes		= 1</span><br><span class="line">	unlink_old		= 1</span><br><span class="line">	mva_updates_pool	= 1M</span><br><span class="line">	max_packet_size		= 8M</span><br><span class="line">	max_filters		= 256</span><br><span class="line">	max_filter_values	= 4096</span><br><span class="line">	max_batch_queries	= 32</span><br><span class="line">	workers			= threads # for RT to work</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4,配置php.ini</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/php.ini  </span><br><span class="line">[sphinx]  </span><br><span class="line">extension = sphinx.so  </span><br><span class="line"></span><br><span class="line">[scws]  </span><br><span class="line">extension = scws.so  </span><br><span class="line">scws.default.charset = utf-8  </span><br><span class="line">scws.default.fpath = /usr/local/scws/etc</span><br></pre></td></tr></table></figure>

<h3 id="四，启动sphinx-php-fpm"><a href="#四，启动sphinx-php-fpm" class="headerlink" title="四，启动sphinx,php-fpm"></a>四，启动sphinx,php-fpm</h3><ul>
<li><p>1,启动sphinx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># /usr/local/sphinx/bin/indexer --config /usr/local/sphinx/etc/sphinx-test.conf --all  </span><br><span class="line"># /usr/local/sphinx/bin/searchd --config /usr/local/sphinx/etc/sphinx-test.conf</span><br></pre></td></tr></table></figure>
</li>
<li><p>2,重启php-fpm</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># /etc/init.d/php-fpm restart</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="五，测试sphinx全文检索"><a href="#五，测试sphinx全文检索" class="headerlink" title="五，测试sphinx全文检索"></a>五，测试sphinx全文检索</h3><ul>
<li>1,命令行的测试</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># mysql -h127.0.0.1  -P9306</span><br><span class="line">MySQL [(none)]&gt; show tables;</span><br><span class="line">+-------+-------+</span><br><span class="line">| Index | Type  |</span><br><span class="line">+-------+-------+</span><br><span class="line">| users | local |</span><br><span class="line">+-------+-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt;</span><br><span class="line">MySQL [(none)]&gt;</span><br><span class="line">MySQL [(none)]&gt; desc users;</span><br><span class="line">+----------+-----------+</span><br><span class="line">| Field    | Type      |</span><br><span class="line">+----------+-----------+</span><br><span class="line">| id       | bigint    |</span><br><span class="line">| username | field     |</span><br><span class="line">| post     | field     |</span><br><span class="line">| summary  | field     |</span><br><span class="line">| userid   | uint      |</span><br><span class="line">| username | string    |</span><br><span class="line">| addtime  | timestamp |</span><br><span class="line">| post     | string    |</span><br><span class="line">+----------+-----------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<img src="http://res.hillock.com.cn/wulai/images/20160814142332937.jpg">


<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MySQL [(none)]&gt; select * FROM users WHERE match(&apos;洪荒之力&apos;);</span><br><span class="line">+------+--------+----------+------------+--------------+</span><br><span class="line">| id   | userid | username | addtime    | post         |</span><br><span class="line">+------+--------+----------+------------+--------------+</span><br><span class="line">|   20 |      4 | 王五     | 1375287894 | 洪荒之力     |</span><br><span class="line">+------+--------+----------+------------+--------------+</span><br></pre></td></tr></table></figure>

<img src="http://res.hillock.com.cn/wulai/images/20160814142346640.jgp">


<ul>
<li>2,利用php 扩展</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> header(&quot;Content-type: text/html; charset=utf-8&quot;);</span><br><span class="line"> $b_time = microtime(true);</span><br><span class="line"> $key = &quot;洪荒之力&quot;;</span><br><span class="line"> $index = &quot;users&quot;;</span><br><span class="line"> //========================================分词</span><br><span class="line"></span><br><span class="line"> $so = scws_new();</span><br><span class="line"> $so-&gt;set_charset(&apos;utf-8&apos;);</span><br><span class="line"> //默认词库</span><br><span class="line"> $so-&gt;add_dict(ini_get(&apos;scws.default.fpath&apos;) . &apos;/dict.utf8.xdb&apos;);</span><br><span class="line"> //自定义词库</span><br><span class="line">// $so-&gt;add_dict(&apos;./dd.txt&apos;,SCWS_XDICT_TXT);</span><br><span class="line"> //默认规则</span><br><span class="line"> $so-&gt;set_rule(ini_get(&apos;scws.default.fpath&apos;) . &apos;/rules.utf8.ini&apos;);</span><br><span class="line"></span><br><span class="line"> //设定分词返回结果时是否去除一些特殊的标点符号</span><br><span class="line"> $so-&gt;set_ignore(true);</span><br><span class="line"></span><br><span class="line"> //设定分词返回结果时是否复式分割，如“中国人”返回“中国＋人＋中国人”三个词。</span><br><span class="line"> // 按位异或的 1 | 2 | 4 | 8 分别表示: 短词 | 二元 | 主要单字 | 所有单字</span><br><span class="line"> //1,2,4,8 分别对应常量 SCWS_MULTI_SHORT SCWS_MULTI_DUALITY SCWS_MULTI_ZMAIN SCWS_MULTI_ZALL</span><br><span class="line"> $so-&gt;set_multi(false);</span><br><span class="line"></span><br><span class="line"> //设定是否将闲散文字自动以二字分词法聚合</span><br><span class="line"> $so-&gt;set_duality(false);</span><br><span class="line"></span><br><span class="line"> //设定搜索词</span><br><span class="line"> $so-&gt;send_text($key);</span><br><span class="line"> $words_array = $so-&gt;get_result();</span><br><span class="line"> $words = &quot;&quot;;</span><br><span class="line"> foreach($words_array as $v)</span><br><span class="line"> &#123;</span><br><span class="line"> $words = $words.&apos;|(&apos;.$v[&apos;word&apos;].&apos;)&apos;;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> //加入全词</span><br><span class="line"> #$words = &apos;(&apos;.$key.&apos;)&apos;.$words;</span><br><span class="line"> $words = trim($words,&apos;|&apos;);</span><br><span class="line"> $so-&gt;close();</span><br><span class="line"> echo &apos;&lt;p&gt;输入：&apos;.$key.&apos;&lt;/p&gt;&apos;.&quot;\r\n&quot;;</span><br><span class="line"> echo &apos;&lt;p&gt;分词：&apos;.$words.&apos;&lt;/p&gt;&apos;.&quot;\r\n&quot;;</span><br><span class="line">//========================================搜索</span><br><span class="line"> $sc = new SphinxClient();</span><br><span class="line"> $sc-&gt;SetServer(&apos;127.0.0.1&apos;,9312);</span><br><span class="line"> #$sc-&gt;SetMatchMode(SPH_MATCH_ALL);</span><br><span class="line"> $sc-&gt;SetMatchMode(SPH_MATCH_EXTENDED);</span><br><span class="line"> $sc-&gt;SetArrayResult(TRUE);</span><br><span class="line"> $res = $sc-&gt;Query($words,$index);</span><br><span class="line"> print_r($res);</span><br><span class="line"> $e_time = microtime(true);</span><br><span class="line"> $time = $e_time - $b_time;</span><br><span class="line"> exit;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>结果如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;输入：洪荒之力&lt;/p&gt;</span><br><span class="line">&lt;p&gt;分词：(洪荒)|(之)|(力)&lt;/p&gt;</span><br><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [error] =&gt;</span><br><span class="line">    [warning] =&gt;</span><br><span class="line">    [status] =&gt; 0</span><br><span class="line">    [fields] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [0] =&gt; username</span><br><span class="line">            [1] =&gt; post</span><br><span class="line">            [2] =&gt; summary</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [attrs] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [userid] =&gt; 1</span><br><span class="line">            [username] =&gt; 7</span><br><span class="line">            [addtime] =&gt; 2</span><br><span class="line">            [post] =&gt; 7</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [matches] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [0] =&gt; Array</span><br><span class="line">                (</span><br><span class="line">                    [id] =&gt; 20</span><br><span class="line">                    [weight] =&gt; 4500</span><br><span class="line">                    [attrs] =&gt; Array</span><br><span class="line">                        (</span><br><span class="line">                            [userid] =&gt; 4</span><br><span class="line">                            [username] =&gt; 王五</span><br><span class="line">                            [addtime] =&gt; 1375345494</span><br><span class="line">                            [post] =&gt; 洪荒之力</span><br><span class="line">                        )</span><br><span class="line"></span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">            [1] =&gt; Array</span><br><span class="line">                (</span><br><span class="line">                    [id] =&gt; 19</span><br><span class="line">                    [weight] =&gt; 3451</span><br><span class="line">                    [attrs] =&gt; Array</span><br><span class="line">                        (</span><br><span class="line">                            [userid] =&gt; 3</span><br><span class="line">                            [username] =&gt; 李四</span><br><span class="line">                            [addtime] =&gt; 1438460694</span><br><span class="line">                            [post] =&gt; 洪荒之</span><br><span class="line">                        )</span><br><span class="line"></span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">            [2] =&gt; Array</span><br><span class="line">                (</span><br><span class="line">                    [id] =&gt; 18</span><br><span class="line">                    [weight] =&gt; 2436</span><br><span class="line">                    [attrs] =&gt; Array</span><br><span class="line">                        (</span><br><span class="line">                            [userid] =&gt; 2</span><br><span class="line">                            [username] =&gt; zhangsi</span><br><span class="line">                            [addtime] =&gt; 1408472694</span><br><span class="line">                            [post] =&gt; 中国人</span><br><span class="line">                        )</span><br><span class="line"></span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    [total] =&gt; 3</span><br><span class="line">    [total_found] =&gt; 3</span><br><span class="line">    [time] =&gt; 0</span><br><span class="line">    [words] =&gt; Array</span><br><span class="line">        (</span><br><span class="line">            [洪] =&gt; Array</span><br><span class="line">                (</span><br><span class="line">                    [docs] =&gt; 4</span><br><span class="line">                    [hits] =&gt; 4</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">            [荒] =&gt; Array</span><br><span class="line">                (</span><br><span class="line">                    [docs] =&gt; 3</span><br><span class="line">                    [hits] =&gt; 3</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">            [之] =&gt; Array</span><br><span class="line">                (</span><br><span class="line">                    [docs] =&gt; 2</span><br><span class="line">                    [hits] =&gt; 2</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">            [力] =&gt; Array</span><br><span class="line">                (</span><br><span class="line">                    [docs] =&gt; 1</span><br><span class="line">                    [hits] =&gt; 1</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>查询query.log</p>
<img src="http://res.hillock.com.cn/wulai/images/20160814143027377.jpg">



<blockquote>
<p>参考：<br><a href="http://blog.csdn.net/clevercode/article/details/52204124" target="_blank" rel="noopener">http://blog.csdn.net/clevercode/article/details/52204124</a><br><a href="http://www.cnblogs.com/chenpingzhao/p/4712345.html" target="_blank" rel="noopener">http://www.cnblogs.com/chenpingzhao/p/4712345.html</a><br><a href="http://www.ibm.com/developerworks/cn/opensource/os-sphinx/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/opensource/os-sphinx/</a><br><a href="http://ourmysql.com/archives/965" target="_blank" rel="noopener">http://ourmysql.com/archives/965</a><br><a href="http://www.cnblogs.com/yjf512/p/3581869.html" target="_blank" rel="noopener">http://www.cnblogs.com/yjf512/p/3581869.html</a><br><a href="http://blog.51yip.com/mysql/1658.html" target="_blank" rel="noopener">http://blog.51yip.com/mysql/1658.html</a></p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> scws, sphinx, 中文分词, 全文检索, 安装, PHP7, MariaDB </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[实现网页页面跳转的几种方法(meta标签、js实现、php实现)]]></title>
      <url>http://www.wulai.me/2018/01/25/%E5%AE%9E%E7%8E%B0%E7%BD%91%E9%A1%B5%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95-meta%E6%A0%87%E7%AD%BE%E3%80%81js%E5%AE%9E%E7%8E%B0%E3%80%81php%E5%AE%9E%E7%8E%B0/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="1、meta标签实现-只需在head里加上下面这一句就行了，在当前页面停留0-1秒后跳转到目标页面"><a href="#1、meta标签实现-只需在head里加上下面这一句就行了，在当前页面停留0-1秒后跳转到目标页面" class="headerlink" title="1、meta标签实现 只需在head里加上下面这一句就行了，在当前页面停留0.1秒后跳转到目标页面"></a>1、meta标签实现 只需在head里加上下面这一句就行了，在当前页面停留0.1秒后跳转到目标页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0.1; url=http://baidu.cn/&quot;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2、Javascript实现"><a href="#2、Javascript实现" class="headerlink" title="2、Javascript实现"></a>2、Javascript实现</h3><ul>
<li><p>方法一：这个方法比较常用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.location.href = &quot;http://baidu.cn/&quot;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>方法二：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.location = &quot;http://baidu.cn/&quot;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>方法三：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top.location = &quot;http://baidu.cn/&quot;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>方法四：<br>只对IE系列浏览器有效，实用性不大</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.navigate(&quot;http://baidu.cn/&quot;);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="3、php实现"><a href="#3、php实现" class="headerlink" title="3、php实现"></a>3、php实现</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    header(&quot;Location: http://baidu.cn/&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx 设置临时维护页面]]></title>
      <url>http://www.wulai.me/2018/01/25/Nginx-%E8%AE%BE%E7%BD%AE%E4%B8%B4%E6%97%B6%E7%BB%B4%E6%8A%A4%E9%A1%B5%E9%9D%A2/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>nginx维护页面处理-全部URL指向同一个页面<br>一般来说nginx的维护页面需要把所有访问本站的链接全部重定向到某个指定页面</p>
<h2 id="1-rewrite"><a href="#1-rewrite" class="headerlink" title="1.rewrite"></a>1.rewrite</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^(.*)$ /maintain.html break;</span><br></pre></td></tr></table></figure>

<p>注意这句后面如果有重定向等语句，那么后面执行的重定向等语句需要全部注释掉</p>
<h2 id="2-使用状态码"><a href="#2-使用状态码" class="headerlink" title="2.使用状态码"></a>2.使用状态码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location /&#123;</span><br><span class="line">return 503;</span><br><span class="line">&#125;</span><br><span class="line">#注意其他location优先级高的匹配均需要注释掉</span><br><span class="line">error_page 503 /maintain.html;</span><br></pre></td></tr></table></figure>

<p>每当服务器遇到 502 代码时，就自动转到临时维护的静态页：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name mydomain.com;</span><br><span class="line"></span><br><span class="line"># ... 省略掉 N 行代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_page 502 = @tempdown;</span><br><span class="line"></span><br><span class="line">location @tempdown &#123;</span><br><span class="line">rewrite ^(.*)$ /pages/maintain.html break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果你只想要【临时维护页面】就这样写（适合服务器更新东西或者改版）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name mydomain.com;</span><br><span class="line"></span><br><span class="line"># ... 省略掉 N 行代码</span><br><span class="line"></span><br><span class="line"># 所有页面都转跳到维护页</span><br><span class="line">rewrite ^(.*)$ /pages/maintain.html break;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>* 注：*</strong><br><strong>* 临时维护页要找对正确的路径，我的例子是 <a href="http://mydomain.com/page/maintain.html。所以路径是" target="_blank" rel="noopener">http://mydomain.com/page/maintain.html。所以路径是</a> /page/maintain.html *</strong></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[文件夹对比并提取差异]]></title>
      <url>http://www.wulai.me/2018/01/10/%E6%96%87%E4%BB%B6%E5%A4%B9%E5%AF%B9%E6%AF%94%E5%B9%B6%E6%8F%90%E5%8F%96%E5%B7%AE%E5%BC%82/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="STEP1"><a href="#STEP1" class="headerlink" title="STEP1"></a>STEP1</h2><p>A1.1是新文件夹，A1.0是旧文件夹，out是放置 A1.0到A1.1的保持目录结构的增量文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync --dry-run -rcnC --out-format=&quot;%n&quot;  A1.1/  A1.0/</span><br></pre></td></tr></table></figure>

<p>注意该处的-C参数是按照cvs的ignore规则来过滤不需要同步的文件，在CVS中，默认是不会提交二进制文件的，所以如果需要进行二进制文件提取，那就不要加C.<br>执行了该命令后，得到了一个A1目录的文件列表：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A1.1/system/app/</span><br><span class="line">A1.1/system/app/A.apk</span><br><span class="line">A1.1/system/app/B.apk</span><br><span class="line">A1.1/system/app/C.apk</span><br></pre></td></tr></table></figure>

<p>也就是差异文件，由于这里默认会显示出文件夹，所以要过滤掉以『/』结尾的文件夹的显示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync --dry-run -rcnC --out-format=&quot;%n&quot;  A1.1/  A1.0/ |grep -v &quot;/$&quot;</span><br></pre></td></tr></table></figure>

<p>这样就得到了一个纯增量文件的列表</p>
<h2 id="STEP2"><a href="#STEP2" class="headerlink" title="STEP2"></a>STEP2</h2><p>有了文件列表，复制的操作方法就很多了。可以继续使用rsync同步到新的out目录，以防止多次执行后错误文件修复问题<br>完整代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync --dry-run -rcnC --out-format=&quot;%n&quot;  A1.1/  A1.0/ |grep -v &quot;/$&quot;|xargs -I&#123;&#125; rsync -R A1/./&#123;&#125; out/</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[解决 MySQL 的 Table is marked as crashed and should be repaired 问题]]></title>
      <url>http://www.wulai.me/2018/01/09/%E8%A7%A3%E5%86%B3-MySQL-%E7%9A%84-Table-is-marked-as-crashed-and-should-be-repaired-%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>来源: [<a href="https://www.vpsee.com/2013/08/how-to-fix-mysql-table-is-marked-as-crashed-and-should-be-repaird/]" target="_blank" rel="noopener">https://www.vpsee.com/2013/08/how-to-fix-mysql-table-is-marked-as-crashed-and-should-be-repaird/]</a></p>
<p>昨天一位 VPS 客户说他的 WordPress 博客没了，网站可以打开，但是文章都没了，怀疑被黑。我们登陆客户 VPS 后没发现被黑迹象，然后进入 MySQL 数据库发现 Table ‘./wordpress/wp_posts’ is marked as crashed and should be repaired 错误，因为 wp_posts 表被损坏了，所以 WordPress 的文章都显示不出来：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line"></span><br><span class="line">mysql&gt; use wordpress;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; select * from wp_posts;</span><br><span class="line">ERROR 145 (HY000): Table &apos;./wordpress/wp_posts&apos; is marked as crashed and should be repaired</span><br><span class="line">mysql&gt; Bye</span><br></pre></td></tr></table></figure>

<p>修复 MySQL 数据库数据表问题可以由 mysqlcheck 来解决，先用 mysqlcheck 查看一下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># mysqlcheck -u root -p wordpress</span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure>

<p>然后添加 –auto-repair 参数自动修复，最好修复前备份一下数据库：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"># mysqldump -u root -p wordpress &gt; wordpress.sql</span><br><span class="line">Enter password:</span><br><span class="line"></span><br><span class="line"># mysqlcheck -u root -p wordpress --auto-repair</span><br><span class="line">Enter password:</span><br><span class="line">wordpress.wp_commentmeta</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_commentmeta`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_comments</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_comments`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_links</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_links`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_options</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_options`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_postmeta</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_postmeta`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_posts</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_posts`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_term_relationships                OK</span><br><span class="line">wordpress.wp_term_taxonomy</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_term_taxonomy`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_terms</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_terms`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_usermeta</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_usermeta`&quot; or dump/reload to fix it!</span><br><span class="line">wordpress.wp_users</span><br><span class="line">error    : Table upgrade required. Please do &quot;REPAIR TABLE `wp_users`&quot; or dump/reload to fix it!</span><br><span class="line"></span><br><span class="line">Repairing tables</span><br><span class="line">wordpress.wp_commentmeta                       OK</span><br><span class="line">wordpress.wp_comments                          OK</span><br><span class="line">wordpress.wp_links                             OK</span><br><span class="line">wordpress.wp_options                           OK</span><br><span class="line">wordpress.wp_postmeta                          OK</span><br><span class="line">wordpress.wp_posts                             OK</span><br><span class="line">wordpress.wp_term_taxonomy                     OK</span><br><span class="line">wordpress.wp_terms                             OK</span><br><span class="line">wordpress.wp_usermeta                          OK</span><br><span class="line">wordpress.wp_users</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[/bin/wipefs挖矿程序排查]]></title>
      <url>http://www.wulai.me/2018/01/03/bin-wipefs%E6%8C%96%E7%9F%BF%E7%A8%8B%E5%BA%8F%E6%8E%92%E6%9F%A5/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="基本情况"><a href="#基本情况" class="headerlink" title="基本情况"></a>基本情况</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@test ~]# cat /etc/redhat-release</span><br><span class="line">CentOS release 6.5 (Final)</span><br><span class="line">[root@test ~]# uname -a</span><br><span class="line">Linux test 2.6.32-431.el6.x86_64 #1 SMP Fri Nov 22 03:15:09 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[root@test ~]# file /bin/wipefs</span><br><span class="line">/bin/wipefs: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped</span><br><span class="line">[root@test ~]# ll /bin/wipefs</span><br><span class="line">-rwxr-xr-x 1 root root 2384177 Jul 18 2013 /bin/wipefs</span><br><span class="line">[root@monitor ~]# lsattr /bin/wipefs</span><br><span class="line">----i--------e- /bin/wipefs</span><br><span class="line">[root@monitor ~]# lsattr /bin/ddus-uidgen</span><br><span class="line">----i--------e- /bin/ddus-uidgen</span><br></pre></td></tr></table></figure>

<h3 id="改动了dns配置"><a href="#改动了dns配置" class="headerlink" title="改动了dns配置"></a>改动了dns配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@test rc3.d]# stat /etc/resolv.conf</span><br><span class="line">File: `/etc/resolv.conf&apos;</span><br><span class="line">Size: 106 Blocks: 8 IO Block: 4096 regular file</span><br><span class="line">Device: 802h/2050d Inode: 1182160 Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</span><br><span class="line">Access: 2017-11-22 06:00:02.797144215 +0800</span><br><span class="line">Modify: 2017-11-22 06:00:02.795144215 +0800</span><br><span class="line">Change: 2017-11-22 06:00:02.795144215 +0800</span><br><span class="line">[root@test rc3.d]# cat /etc/resolv.conf</span><br><span class="line">nameserver 208.67.222.222	#加拿大DNS</span><br><span class="line">nameserver 114.114.114.114</span><br><span class="line">nameserver 208.67.222.222</span><br><span class="line">nameserver 114.114.114.114</span><br></pre></td></tr></table></figure>

<h3 id="增加了开机启动"><a href="#增加了开机启动" class="headerlink" title="增加了开机启动"></a>增加了开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@test cron]# ll /etc/init.d/wipefs</span><br><span class="line">lrwxrwxrwx 1 root root 11 Nov 22 06:00 /etc/init.d/wipefs -&gt; /bin/wipefs</span><br><span class="line">[root@test rc3.d]# pwd</span><br><span class="line">/etc/rc.d/rc3.d</span><br><span class="line">[root@test rc3.d]# ll -h |grep wipefs</span><br><span class="line">lrwxrwxrwx 1 root root 18 Nov 22 06:00 S01wipefs -&gt; /etc/init.d/wipefs</span><br><span class="line">[root@test rc3.d]# cd /etc/rc3.d/</span><br><span class="line">[root@test rc3.d]# ll -h |grep wipefs</span><br><span class="line">lrwxrwxrwx 1 root root 18 Nov 22 06:00 S01wipefs -&gt; /etc/init.d/wipefs</span><br><span class="line">[root@test init.d]# pwd</span><br><span class="line">/etc/init.d</span><br><span class="line">[root@test init.d]# ll acpidtd</span><br><span class="line">-rwxr-xr-x 1 root root 1223753 Nov 20 16:03 acpidtd</span><br><span class="line">[root@test rc3.d]# ll -h |grep acpidtd</span><br><span class="line">lrwxrwxrwx 1 root root 19 Nov 20 16:03 S01acpidtd -&gt; /etc/init.d/acpidtd</span><br><span class="line">[root@test rc3.d]# pwd</span><br><span class="line">/etc/rc3.d</span><br><span class="line">[root@test rc3.d]# cd /etc/rc.d/rc3.d/</span><br><span class="line">[root@test rc3.d]# ll -h |grep acpidtd</span><br><span class="line">lrwxrwxrwx 1 root root 19 Nov 20 16:03 S01acpidtd -&gt; /etc/init.d/acpidtd</span><br><span class="line">[root@test rc3.d]# ll /bin/ddus-uidgen</span><br><span class="line">-rwxr-xr-x 1 root root 1223753 Nov 20 16:03 /bin/ddus-uidgen</span><br><span class="line">[root@test rc3.d]# ll /etc/resolv.conf</span><br><span class="line">-rw-r--r-- 1 root root 106 Nov 22 06:00 /etc/resolv.conf</span><br></pre></td></tr></table></figure>

<h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">pkill wipefs</span><br><span class="line">echo &quot;nameserver 114.114.114.114&quot; &gt; /etc/resolv.conf</span><br><span class="line">chattr -i /bin/wipefs</span><br><span class="line">chattr -i /bin/ddus-uidgen</span><br><span class="line">chattr -i /etc/init.d/acpidtd</span><br><span class="line">rm -rf /bin/wipefs</span><br><span class="line">rm -rf /etc/init.d/wipefs</span><br><span class="line">rm -rf /bin/ddus-uidgen</span><br><span class="line">rm -rf /etc/init.d/acpidtd</span><br><span class="line">rm -rf /etc/rc0.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc1.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc2.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc3.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc4.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc5.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc6.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc.d/rc0.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc.d/rc1.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc.d/rc2.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc.d/rc3.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc.d/rc4.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc.d/rc5.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc.d/rc6.d/S01wipefs</span><br><span class="line">rm -rf /etc/rc0.d/acpidtd</span><br><span class="line">rm -rf /etc/rc1.d/acpidtd</span><br><span class="line">rm -rf /etc/rc2.d/acpidtd</span><br><span class="line">rm -rf /etc/rc3.d/acpidtd</span><br><span class="line">rm -rf /etc/rc4.d/acpidtd</span><br><span class="line">rm -rf /etc/rc5.d/acpidtd</span><br><span class="line">rm -rf /etc/rc6.d/acpidtd</span><br><span class="line">rm -rf /etc/rc.d/rc0.d/acpidtd</span><br><span class="line">rm -rf /etc/rc.d/rc1.d/acpidtd</span><br><span class="line">rm -rf /etc/rc.d/rc2.d/acpidtd</span><br><span class="line">rm -rf /etc/rc.d/rc3.d/acpidtd</span><br><span class="line">rm -rf /etc/rc.d/rc4.d/acpidtd</span><br><span class="line">rm -rf /etc/rc.d/rc5.d/acpidtd</span><br><span class="line">rm -rf /etc/rc.d/rc6.d/acpidtd</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[fsck error on boot: /dev/sda6: UNEXPECTED INCONSISTENCY; RUN fsck MANUALLY]]></title>
      <url>http://www.wulai.me/2018/01/03/fsck-error-on-boot-dev-sda6-UNEXPECTED-INCONSISTENCY-RUN-fsck-MANUALLY/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>I have noticed that even if you do a fsck on the disk the problem may occur again in a few days.</p>
<p>I have found that the problem is worse on SSD disks than the regular HDD disks. I have found some steps that may fix the problem temporarily.</p>
<pre><code>fsck -fy /dev/sda1</code></pre><p>if sda1 is the right partition - the prompt will tell you exactly which one requires fsck.</p>
<p>After that if the systems boots up you may have another problem with the package management system, so if you open a terminal and type sudo apt-get update you may get an error. Do not worry. Run these commands:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get clean</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>

<p>My opinion is that there is serious problem in Ubuntu with regard to SSD disks. The community should fix it.</p>
<p>I have found a possible cause of this problem: Probably the system did not shutdown normally.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[NFS mount.nfs: access denied by server while mountin]]></title>
      <url>http://www.wulai.me/2017/12/28/NFS-mount-nfs-access-denied-by-server-while-mountin/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>setup NFS but when trying to mount getting the following errors</p>
<pre><code>mount.nfs: access denied by server while mounting &lt;server ip&gt;:/exports</code></pre><p>The</p>
<pre><code>showmount -e &lt;server ip&gt;</code></pre><p>command returns the following</p>
<pre><code>/exports &lt;client ip&gt;</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS中修改系统默认语言]]></title>
      <url>http://www.wulai.me/2017/12/27/CentOS%E4%B8%AD%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4%E8%AF%AD%E8%A8%80/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>操作系统安装时选择了中文字符，导致命令行下的错误提示信息也显示中文。这样无法在google上搜索到相对应的解决方法。所以需要临时修改提示信息为英文<br>    #export LANG=”en_US.UTF-8”</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[centos 6.5 把光盘设置为本地yum源]]></title>
      <url>http://www.wulai.me/2017/12/20/centos-6-5-%E6%8A%8A%E5%85%89%E7%9B%98%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%9C%AC%E5%9C%B0yum%E6%BA%90/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>为了搞学习内核编译，需要安装一些开发工具包，索性把光盘镜像设置成本地yum源，这样更快些！以下是一些基本步骤：</p>
<ul>
<li><p>1、 首先挂载光盘到/mnt/cd下，<code>mount  /dev/cdrom  /mnt/cd</code>，这个就不多说了；</p>
</li>
<li><p>2、 进入``/etc/yum.repos.d/<code></code>目录下，把原来的yum源备份，我给它重新命名了。</p>
<pre><code>mv CentOS-Vault.repo CentOS-Vault.repo.bak
mv CentOS-Debuginfo.repo CentOS-Debuginfo.repo.bak
mv CentOS-Base.repo CentOS-Base.repo.bak</code></pre></li>
</ul>
<ul>
<li>3、新建一个光盘源</li>
</ul>
<p><code>vim  CentOS-Media.repo</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># CentOS-Media.repo</span><br><span class="line">#</span><br><span class="line">#  This repo can be used with mounted DVD media, verify the mount point for</span><br><span class="line">#  CentOS-6.  You can use this repo and yum to install items directly off the</span><br><span class="line">#  DVD ISO that we release.</span><br><span class="line">#</span><br><span class="line"># To use this repo, put in your DVD and use it with the other repos too:</span><br><span class="line">#  yum --enablerepo=c6-media [command]</span><br><span class="line">#  </span><br><span class="line"># or for ONLY the media repo, do this:</span><br><span class="line">#</span><br><span class="line">#  yum --disablerepo=\* --enablerepo=c6-media [command]</span><br><span class="line"></span><br><span class="line">[c6-media]</span><br><span class="line">name=CentOS-$releasever - Media</span><br><span class="line">baseurl=file:///mnt/cd</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6</span><br></pre></td></tr></table></figure>

<p>保存退出</p>
<ul>
<li><p>4、<code>yum clean all</code> (清除缓存)</p>
</li>
<li><p>5、<code>yum  makecache</code> (建立新缓存)</p>
</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[带你去探险]]></title>
      <url>http://www.wulai.me/2017/12/11/%E5%B8%A6%E4%BD%A0%E5%8E%BB%E6%8E%A2%E9%99%A9/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div>
		<script>
			var ap = new APlayer({
				element: document.getElementById("aplayer0"),
				narrow: false,
				autoplay: true,
				showlrc: 0,
				music: {
					title: "带你去探险",
					author: "可乐",
					url: "http://res.hillock.com.cn/take%20you%20to%20the%20beautiful%20place.mp3",
					pic: "https://avatars2.githubusercontent.com/u/3354580?v=3&s=460",
				}
			});
			window.aplayers || (window.aplayers = []);
			window.aplayers.push(ap);
		</script>

<h4 id="带你去探险"><a href="#带你去探险" class="headerlink" title="带你去探险"></a>带你去探险</h4><p>刘笑嫣（可乐）</p>
<pre><code>过来吧，我要带你去个美丽的地方！
美丽的地方是树吗？
对，咱们去树里逛一逛！
不用怕，不用怕！
我会陪在你身边，一直等你长大！

过来吧，我要带你去个美丽的地方！
美丽的地方是花吗？
对，我要带你去欣赏花的美丽。
花蜜多么美味呀，甜甜的！
不用怕，不用怕！
我会陪在你身边，一直等你长大！

过来吧，我要带你去个美丽的地方！
美丽的地方是外面吗？
对，我要带你去外面的世界逛一逛！
那是一个多么美丽的地方呀，你也一定会很喜欢哒！
不用怕，不用怕！
我会陪在你身边，一直等你长大！</code></pre>]]></content>
      
        
        <tags>
            
            <tag> 诗 </tag>
            
            <tag> 可乐 </tag>
            
            <tag> 探险 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql select into outfile 语法 乱码问题]]></title>
      <url>http://www.wulai.me/2017/12/05/mysql-select-into-outfile-%E8%AF%AD%E6%B3%95-%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>一个常见的问题，mysql 导出csv格式的语法，已经乱码问题：<br>由于数据库一般默认的是UTF-8 格式的字符集，而execl默认的是gbk格式的字符集，这里有两种方法解决乱码：</p>
<h4 id="方法一：-先转出-txt格式的文件，然后选择用excel打开时，提示选择哪种编码打开，选择gbk即可"><a href="#方法一：-先转出-txt格式的文件，然后选择用excel打开时，提示选择哪种编码打开，选择gbk即可" class="headerlink" title="方法一： 先转出.txt格式的文件，然后选择用excel打开时，提示选择哪种编码打开，选择gbk即可"></a>方法一： 先转出.txt格式的文件，然后选择用excel打开时，提示选择哪种编码打开，选择gbk即可</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from mobile_order_region where school_id=6921 into outfile &apos;/tmp/6921.txt&apos;</span><br></pre></td></tr></table></figure>

<h4 id="方法二：导出时直接设置字符集格式："><a href="#方法二：导出时直接设置字符集格式：" class="headerlink" title="方法二：导出时直接设置字符集格式："></a>方法二：导出时直接设置字符集格式：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from mobile_order_region where school_id=6921 into outfile &apos;/tmp/6921.csv&apos;</span><br><span class="line">CHARACTER SET gbk</span><br><span class="line">FIELDS TERMINATED BY &apos;,&apos;</span><br><span class="line">OPTIONALLY ENCLOSED BY &apos;&quot;&apos;</span><br><span class="line"> LINES TERMINATED BY &apos;\n&apos;;</span><br><span class="line">Query OK, 6888 rows affected (0.11 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; \q</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL 字符串拼接]]></title>
      <url>http://www.wulai.me/2017/09/27/MySQL-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>在Mysql 数据库中存在两种字符串连接操作.具体操作如下</p>
<p>一. 语法:</p>
<ol>
<li><p>CONCAT(string1,string2,…)   说明 : string1,string2代表字符串,concat函数在连接字符串的时候，只要其中一个是NULL,那么将返回NULL</p>
<p>例1:</p>
</li>
</ol>
<p>   例2:</p>
<ol start="2">
<li><p>CONCAT_WS(separator,str1,str2,…)</p>
<p>说明 : string1,string2代表字符串,concat_ws 代表 concat with separator,第一个参数是其它参数的分隔符。分隔符的位置放在要连接的两个字符串之间。分隔符可以是一个字符串，也可以是其它参数。如果分隔符为 NULL，则结果为 NULL。函数会忽略任何分隔符参数后的 NULL 值。</p>
<p>举例1:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   mysql&gt; select concat_ws(&apos;#&apos;,&apos;dbdh=&apos;,&apos;NorthEastTrcoon&apos;,null) AS dbdh_name_three;</span><br><span class="line">+-----------------------+</span><br><span class="line">| dbdh_name_three       |</span><br><span class="line">+-----------------------+</span><br><span class="line">| dbdh=#NorthEastTrcoon |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>例2:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select concat_ws(null,&apos;dbdh=&apos;,&apos;NorthEastTrcoon&apos;,null) AS dbdh_name_fourth</span><br><span class="line">;</span><br><span class="line">+------------------+</span><br><span class="line">| dbdh_name_fourth |</span><br><span class="line">+------------------+</span><br><span class="line">| NULL             |</span><br><span class="line">+------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>例3:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">     mysql&gt; select concat_ws(&apos;*&apos;,&apos;dbdh=&apos;,&apos;NorthEastTrcoon&apos;,null) AS dbdh_name_fifth;</span><br><span class="line">+-----------------------+</span><br><span class="line">| dbdh_name_fifth       |</span><br><span class="line">+-----------------------+</span><br><span class="line">| dbdh=*NorthEastTrcoon |</span><br><span class="line">+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

</li>
</ol>
<ol start="3">
<li>MySQL中group_concat函数<br>完整的语法如下：<br> group_concat([DISTINCT] 要连接的字段 [Order BY ASC/DESC 排序字段] [Separator ‘分隔符’])</li>
</ol>
<p>基本查询</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from stu1;</span><br><span class="line">+------+------+</span><br><span class="line">| id| name |</span><br><span class="line">+------+------+</span><br><span class="line">|1 | 10|</span><br><span class="line">|1 | 20|</span><br><span class="line">|1 | 20|</span><br><span class="line">|2 | 20|</span><br><span class="line">|3 | 200   |</span><br><span class="line">|3 | 500   |</span><br><span class="line">+------+------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>以id分组，把name字段的值打印在一行，逗号分隔(默认)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select id,group_concat(name) from aa group by id;</span><br><span class="line">+------+--------------------+</span><br><span class="line">| id| group_concat(name) |</span><br><span class="line">+------+--------------------+</span><br><span class="line">|1 | 10,20,20|</span><br><span class="line">|2 | 20 |</span><br><span class="line">|3 | 200,500|</span><br><span class="line">+------+--------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>以id分组，把name字段的值打印在一行，分号分隔</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select id,group_concat(name separator &apos;;&apos;) from aa group by id;</span><br><span class="line">+------+----------------------------------+</span><br><span class="line">| id| group_concat(name separator &apos;;&apos;) |</span><br><span class="line">+------+----------------------------------+</span><br><span class="line">|1 | 10;20;20 |</span><br><span class="line">|2 | 20|</span><br><span class="line">|3 | 200;500   |</span><br><span class="line">+------+----------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>以id分组，把去冗余的name字段的值打印在一行，</p>
<p>逗号分隔</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select id,group_concat(distinct name) from aa group by id;</span><br><span class="line">+------+-----------------------------+</span><br><span class="line">| id| group_concat(distinct name) |</span><br><span class="line">+------+-----------------------------+</span><br><span class="line">|1 | 10,20|</span><br><span class="line">|2 | 20   |</span><br><span class="line">|3 | 200,500 |</span><br><span class="line">+------+-----------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>以id分组，把name字段的值打印在一行，逗号分隔，以name排倒序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select id,group_concat(name order by name desc) from aa group by id;</span><br><span class="line">+------+---------------------------------------+</span><br><span class="line">| id| group_concat(name order by name desc) |</span><br><span class="line">+------+---------------------------------------+</span><br><span class="line">|1 | 20,20,10   |</span><br><span class="line">|2 | 20|</span><br><span class="line">|3 | 500,200|</span><br><span class="line">+------+---------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>还有一个简单的连接方式为: ||</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select *  from student;</span><br><span class="line">+----+------+-------+----------+------------+</span><br><span class="line">| id | age  | score | name     | birth      |</span><br><span class="line">+----+------+-------+----------+------------+</span><br><span class="line">|  1 |   23 |    78 | 李四     | 2017-10-10 |</span><br><span class="line">|  2 |   24 |    78 | zhangsan | 2017-10-10 |</span><br><span class="line">|  3 |   25 |    99 | 王五     | 2016-05-17 |</span><br><span class="line">+----+------+-------+----------+------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select id+999,name,name+99,name+&apos;999&apos; from student;</span><br><span class="line">+--------+----------+---------+------------+</span><br><span class="line">| id+999 | name     | name+99 | name+&apos;999&apos; |</span><br><span class="line">+--------+----------+---------+------------+</span><br><span class="line">|   1000 | 李四     |      99 |        999 |</span><br><span class="line">|   1001 | zhangsan |      99 |        999 |</span><br><span class="line">|   1002 | 王五     |      99 |        999 |</span><br><span class="line">+--------+----------+---------+------------+</span><br><span class="line">3 rows in set, 6 warnings (0.00 sec)</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[LNMP的并发与资源分配]]></title>
      <url>http://www.wulai.me/2017/09/14/LNMP%E7%9A%84%E5%B9%B6%E5%8F%91%E4%B8%8E%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol start="0">
<li><h1 id="写作背景"><a href="#写作背景" class="headerlink" title="写作背景"></a>写作背景</h1><p>好久没有写博客了，前端时间来了一场说走就走的旅行，和爱人一起辞职，去云南玩了半个月，才刚回来，最近一段时间在找工作，没事就上网看看技术相关的文章，充充电，昨天偶尔发现一遍讲解LNMP的并发与资源分配的文章，感觉不错，和大家分享下。<br>很多时候面试官都会问你，你们的程序性能如何？程序的并发可以达到多少？程序的瓶颈在哪儿？为了满足业务需求应该购买多少台服务器？负载均衡中php应用服务器需要多少台？<br>可能这些问题在面试中会设置一个应用的场景及一些前提条件，让面试的人去设计，并提出看法建议，能够回答得很好的人还是比较少的。</p>
</li>
<li><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><h2 id="1-1-LNMP中的N是nginx充当Web-Server"><a href="#1-1-LNMP中的N是nginx充当Web-Server" class="headerlink" title="1.1 LNMP中的N是nginx充当Web Server"></a>1.1 LNMP中的N是nginx充当Web Server</h2><p>内容的分发者，会在文件系统找到相应的文件，就返回给浏览器，如：nginx。如果是静态的文件，就可以直接返回，但是如果是index.php需要解析并执行的脚本文件时，Web Server就无力了，需要将请求转发给相应的脚本语言的解析器来解释并执行，最终将程序的执行结果，返回给Web Server，再返回给浏览器。</p>
</li>
</ol>
<h2 id="1-2-LNMP中的P是php充当后端的逻辑处理程序"><a href="#1-2-LNMP中的P是php充当后端的逻辑处理程序" class="headerlink" title="1.2 LNMP中的P是php充当后端的逻辑处理程序"></a>1.2 LNMP中的P是php充当后端的逻辑处理程序</h2><p>那么php与nginx的常规协作方式是如何的呢？需要我们明确几个概念</p>
<h2 id="1-3-cgi"><a href="#1-3-cgi" class="headerlink" title="1.3 cgi"></a>1.3 cgi</h2><p>通用网关接口，是HTTP协议中描述的，Web Server与后端处理程序进程间通信的协议</p>
<h2 id="1-4-php-cgi"><a href="#1-4-php-cgi" class="headerlink" title="1.4 php-cgi"></a>1.4 php-cgi</h2><p>php实现了cgi协议，使得web server与php共同完成一个动态网页的请求响应</p>
<h2 id="1-5-fastcgi"><a href="#1-5-fastcgi" class="headerlink" title="1.5 fastcgi"></a>1.5 fastcgi</h2><p>是为了解决cgi性能问题，而规范的另外一种协议，为什么说解决cgi性能问题，因为在面对各大中型网站的业务需求中，cgi程序表现得越来越无力，因为cgi程序在每次接收到请求时都需要启动新的进程，并初始化环境，然后执行程序，具体的协议内容，在此不引述。</p>
<h2 id="1-6-php-fpm"><a href="#1-6-php-fpm" class="headerlink" title="1.6 php-fpm"></a>1.6 php-fpm</h2><p>实现了fastcgi协议，是php-cgi的进程管理器，解决高并发网站的性能问题。<br>在最终回答LNMP的并发考虑与资源分配还需要明确的几个概念</p>
<h2 id="1-7-并发"><a href="#1-7-并发" class="headerlink" title="1.7 并发"></a>1.7 并发</h2><p>一般由单位内完成的请求数来衡量，如，每秒事务数（TPS），每秒HTTP请求数（HPS），每秒查询数（QPS）。通常情况下，我们说PHP的并发，都是指一秒内PHP完成的动态请求的次数。如某网站高峰期的动态请求并发为5000每秒，这个数字不算太高，但也不低。一般日活跃用户数在1000万-5000万的网站应用才能达到这个级别。</p>
<h2 id="1-8-性能"><a href="#1-8-性能" class="headerlink" title="1.8 性能"></a>1.8 性能</h2><p>一般是指应用程序的处理速度，如果php的应用程序，打开一个页面（执行一个脚本程序）通常需要在50-100ms完成，这对程序的性能要求还是比较高的。但是这还仅仅只是程序处理，php处理完成之后，还要交给web server，web server再将数据返回浏览器，这中间会有一个网络延迟，通常网络正常的情况下，需要大约100ms，最终一个动态网页的请求大约200ms（理想的情况下）可以到达用户浏览器端（仅仅是一个html结构）。</p>
<h1 id="2-资源分配"><a href="#2-资源分配" class="headerlink" title="2.资源分配"></a>2.资源分配</h1><h2 id="2-1-php-fpm进程数"><a href="#2-1-php-fpm进程数" class="headerlink" title="2.1 php-fpm进程数"></a>2.1 php-fpm进程数</h2><p>按照上面的描述，并发为5000每秒，每个请求完成大约200ms（具体页面要具体分析，这里只是一个理想值），如果只有5台PHP应用程序服务器，那么每台机器平均为并发1000每秒，如果是使用nginx+php-fpm的架构，php-fpm的php-cgi进程管理器的配置应该如何呢？我计算的结果为（具体的配置项说明在后文）：</p>
<ul>
<li>pm=static</li>
<li>pm.max_children=100<br>上面的100是如何得来的，由于机器平均并发为1000每秒，每个动态请求的处理时间为100ms，也就是说1个php-fpm的worker处理进程在1秒内可以处理10个请求，100个php-fpm的worker处理进程，就可以处理1000个请求。<br>当然需要结合服务器硬件资源来进行配置，如果配置不当，很容易在请求高峰期或者流量猛增导致服务器宕机。</li>
</ul>
<h2 id="2-2-网络带宽"><a href="#2-2-网络带宽" class="headerlink" title="2.2 网络带宽"></a>2.2 网络带宽</h2><p>网络带宽也会是一个重要的因素，如果你的服务处理很强，但是用户的请求和响应不能及时到达也是白忙活，这个参数如何计算呢？<br>并发5000每秒，每个请求的输出为20K，则5000x20K=100000K=100M<br>这就要求你的公网负载均衡器外网出口带宽至少要达到100M</p>
<h2 id="2-3-内存"><a href="#2-3-内存" class="headerlink" title="2.3 内存"></a>2.3 内存</h2><p>上述中100个php-fpm的worker处理进程，理论上如果服务器只运行php-fpm，那么我们可以将服务器内存的一半分配给php-fpm，通常情况下，我们可以认为一个php-fpm的worker处理进程占用内存20M，那么100x20M=2G，也就是说明服务器的内存大约为4G</p>
<h2 id="2-4-CPU"><a href="#2-4-CPU" class="headerlink" title="2.4 CPU"></a>2.4 CPU</h2><p>由于php-fpm是一个多进程的模型应用，CPU进程调度消耗也是很大的，并且PHP应用程序有问题也会导致CPU占用率高，这就没有量化的指标，需要具体情况具体分析了。但是有一个小建议，可以部署一个crontab每隔一分钟检测cpu占用率超过多少就kill掉相应的php-fpm的worker处理进程。</p>
<h2 id="2-5-php-fpm-Unix-Socket"><a href="#2-5-php-fpm-Unix-Socket" class="headerlink" title="2.5 php-fpm Unix Socket"></a>2.5 php-fpm Unix Socket</h2><p>如果nginx与php在同一台机器，nginx与php-fpm使用unix域套接字代替tcp socke进行通信，这个配置挺关键的，纯echo的ab测试，采用unix域套接字每秒请求数提升10%-20%</p>
<p>即nginx中配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_pass unix:/data/server/var/php/php-fpm.sock;</span><br></pre></td></tr></table></figure>

<p>php-fpm.conf中配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen = /data/server/var/php/php-fpm.sock</span><br></pre></td></tr></table></figure>

<p>最后遇到很多同学对php-fpm的进程管理器的核心配置不太了解，下面是我翻译的配置说明：</p>
<ol start="3">
<li><h1 id="php-fpm配置项"><a href="#php-fpm配置项" class="headerlink" title="php-fpm配置项"></a>php-fpm配置项</h1><h2 id="3-1-pm"><a href="#3-1-pm" class="headerlink" title="3.1 pm"></a>3.1 pm</h2></li>
</ol>
<ul>
<li>static 一个固定的值，由pm.max_children指定</li>
<li>dynamic 动态的（工作方式和Apache的prefork模式一致），但是保持至少一个，由<ul>
<li>pm.max_children 在同一时间最大的进程数</li>
<li>pm.start_servers php-fpm启动时开启的等待请求到来的进程数</li>
<li>pm.min_spare_servers 在空闲状态下，运行的最小进程数，如果小于此值，会创建新的进程</li>
<li>pm.max_spare_servers 在空闲状态下，运行的最大进程数，如果大于此值，会kill部分进程</li>
<li>ondemand 启动时不会创建进程，当请求达到时创建子进程处理请求</li>
<li>pm.max_children 在同一时间最大的进程数</li>
<li>pm.process_idle_timeout 空闲多少秒之后进程会被kill</li>
</ul>
</li>
<li>pm = static</li>
</ul>
<h2 id="3-2-pm-max-children"><a href="#3-2-pm-max-children" class="headerlink" title="3.2 pm.max_children"></a>3.2 pm.max_children</h2><p>在同一时间最大的进程数</p>
<ul>
<li>pm.max_children = 120</li>
</ul>
<h2 id="3-3-pm-start-servers"><a href="#3-3-pm-start-servers" class="headerlink" title="3.3 pm.start_servers"></a>3.3 pm.start_servers</h2><p>php-fpm启动时开启的等待请求到来的进程数，默认值为：min_spare_servers + (max_spare_servers – min_spare_servers) / 2</p>
<ul>
<li>pm.start_servers = 80</li>
</ul>
<h2 id="3-4-pm-min-spare-servers"><a href="#3-4-pm-min-spare-servers" class="headerlink" title="3.4 pm.min_spare_servers"></a>3.4 pm.min_spare_servers</h2><p>在空闲状态下，运行的最小进程数，如果小于此值，会创建新的进程</p>
<ul>
<li>pm.min_spare_servers = 60</li>
</ul>
<h2 id="3-5-pm-max-spare-servers"><a href="#3-5-pm-max-spare-servers" class="headerlink" title="3.5 pm.max_spare_servers"></a>3.5 pm.max_spare_servers</h2><p>在空闲状态下，运行的最大进程数，如果大于此值，会kill部分进程</p>
<ul>
<li>pm.max_spare_servers = 120</li>
</ul>
<h2 id="3-6-pm-process-idle-timeout"><a href="#3-6-pm-process-idle-timeout" class="headerlink" title="3.6 pm.process_idle_timeout"></a>3.6 pm.process_idle_timeout</h2><p>空闲多少秒之后进程会被kill，默认为10s</p>
<ul>
<li>pm.process_idle_timeout = 10s</li>
</ul>
<h2 id="3-7-pm-max-requests"><a href="#3-7-pm-max-requests" class="headerlink" title="3.7 pm.max_requests"></a>3.7 pm.max_requests</h2><p>每个进程处理多少个请求之后自动终止，可以有效防止内存溢出，如果为0则不会自动终止，默认为0</p>
<ul>
<li>pm.max_requests = 5000</li>
</ul>
<h2 id="3-8-pm-status-path"><a href="#3-8-pm-status-path" class="headerlink" title="3.8 pm.status_path"></a>3.8 pm.status_path</h2><p>注册的URI，以展示php-fpm状态的统计信息</p>
<ul>
<li>pm.status_path = /status<br>其中统计页面信息有：<ul>
<li>pool 进程池名称</li>
<li>process manager 进程管理器名称（static, dynamic or ondemand）</li>
<li>start time php-fpm启动时间</li>
<li>start since php-fpm启动的总秒数</li>
<li>accepted conn 当前进程池接收的请求数</li>
<li>listen queue 等待队列的请求数</li>
<li>max listen queue 自启动以来等待队列中最大的请求数</li>
<li>listen queue len 等待连接socket队列大小</li>
<li>idle processes 当前空闲的进程数</li>
<li>active processes 活动的进程数</li>
<li>total processes 总共的进程数（idle+active）</li>
<li>max active processes 自启动以来活动的进程数最大值</li>
<li>max children reached 达到最大进程数的次数</li>
</ul>
</li>
</ul>
<h2 id="3-9-ping-path"><a href="#3-9-ping-path" class="headerlink" title="3.9 ping.path"></a>3.9 ping.path</h2><p>ping url，可以用来测试php-fpm是否存活并可以响应</p>
<ul>
<li>ping.path = /ping</li>
</ul>
<h2 id="ping-response"><a href="#ping-response" class="headerlink" title="ping.response"></a>ping.response</h2><p>ping url的响应正文</p>
<ul>
<li>ping.response = pong</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Linux, LNMP, nginx, 高并发解决方案 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS / RHEL: Remove Routes 169.254.0.0 / 255.255.0.0 From the System]]></title>
      <url>http://www.wulai.me/2017/08/08/CentOS-RHEL-Remove-Routes-169-254-0-0-255-255-0-0-From-the-System/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>zeroconf (Zero configuration networking), is a techniques that automatically creates a usable Internet Protocol (IP) network without manual operator intervention or special configuration servers. 169.254.0.0/255.255.0.0 route is part of zeroconf under RHEL 6 / CentOS 6 or older versions. To see current routing table, enter:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># route -n</span><br></pre></td></tr></table></figure>

<p>Sample outputs:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">74.8x.4y.zz     0.0.0.0         255.255.255.248 U     0      0        0 eth1</span><br><span class="line">10.10.29.64     0.0.0.0         255.255.255.192 U     0      0        0 eth0</span><br><span class="line">169.254.0.0     0.0.0.0         255.255.0.0     U     1002   0        0 eth0</span><br><span class="line">169.254.0.0     0.0.0.0         255.255.0.0     U     1003   0        0 eth1</span><br><span class="line">10.0.0.0        10.10.29.65     255.0.0.0       UG    0      0        0 eth0</span><br><span class="line">0.0.0.0         74.8x.yy.zz     0.0.0.0         UG    0      0        0 eth1</span><br></pre></td></tr></table></figure>

<p>Every time the server or Linux desktop boots, the zeroconf route 169.254.0.0 is enabled and added to the kernel routing table. To disable zeroconf route under RHEL / CentOS / Fedora Linux, enter:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi /etc/sysconfig/network</span><br></pre></td></tr></table></figure>

<p>Append the following directive:</p>
<p>NOZEROCONF=yes<br>Save and close the file. Reboot the system / server or restart the networking service:</p>
<h1 id="etc-init-d-network-restart"><a href="#etc-init-d-network-restart" class="headerlink" title="/etc/init.d/network restart"></a>/etc/init.d/network restart</h1><p>Verify routing table, enter:</p>
<h1 id="route-n"><a href="#route-n" class="headerlink" title="route -n"></a>route -n</h1><p>OR</p>
<h1 id="ip-route"><a href="#ip-route" class="headerlink" title="ip route"></a>ip route</h1>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[How to Install Oracle VirtualBox 5.1 on CentOS/RHEL 7/6 and Fedora 25]]></title>
      <url>http://www.wulai.me/2017/08/08/How-to-Install-Oracle-VirtualBox-5-1-on-CentOS-RHEL-7-6-and-Fedora-25/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Oracle VirtualBox is a cross-platform virtualization application. It installs on your existing Intel or AMD-based computers, whether they are running Windows, Mac, Linux or Solaris operating systems. It extends the capabilities of your existing computer so that it can run multiple operating systems at the same time. Click here to read more about VirtualBox</p>
<p>Oracle has released VirtualBox 5.1.14 maintenance release of VirtualBox 5.1 on January 17th, 2017. In this release VirtualBox has improves stability and fixes regressions. To read more about this release read changelog.</p>
<p>This article will help you to install Oracle VirtualBox 5.1 on CentOS, Redhat and Fedora systems using Yum.</p>
<h1 id="Step-1-–-Add-Required-Yum-Repositories"><a href="#Step-1-–-Add-Required-Yum-Repositories" class="headerlink" title="Step 1 – Add Required Yum Repositories"></a>Step 1 – Add Required Yum Repositories</h1><p>Firstly you are required to add VirtualBox yum repository in your system. Download repository file from its official site and place it under at __ /etc/yum.repos.d/virtualbox.repo __ .First navigate to <strong>/etc/yum.repos.d/</strong> directory and use one of below commands as per your operating system.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># cd /etc/yum.repos.d/</span><br><span class="line"></span><br><span class="line">For CentOS/RHEL Systems:</span><br><span class="line"># wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo</span><br><span class="line"></span><br><span class="line">For Fedora Systems:</span><br><span class="line"># wget http://download.virtualbox.org/virtualbox/rpm/fedora/virtualbox.repo</span><br></pre></td></tr></table></figure>

<p>__ CentOS/RHEL __ Users also need to add EPEL yum repository using one of the following commands.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CentOS/RHEL 7, 64 Bit (x86_64):</span><br><span class="line"># rpm -Uvh http://epel.mirror.net.in/epel/7/x86_64/e/epel-release-7-9.noarch.rpm</span><br><span class="line"></span><br><span class="line">CentOS/RHEL 6, 64 Bit (x86_64):</span><br><span class="line"># rpm -Uvh http://epel.mirror.net.in/epel/6/x86_64/epel-release-6-8.noarch.rpm</span><br></pre></td></tr></table></figure>

<h1 id="Step-2-–-Install-Required-Packages"><a href="#Step-2-–-Install-Required-Packages" class="headerlink" title="Step 2 – Install Required Packages"></a>Step 2 – Install Required Packages</h1><p>Before installing VirtualBox make sure to install all required packages to run VirtualBox like kernel-headers, kernel-devels etc. Use the following command to install required packages.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># yum install gcc make patch  dkms qt libgomp</span><br><span class="line"># yum install kernel-headers kernel-devel fontforge binutils glibc-headers glibc-devel</span><br></pre></td></tr></table></figure>

<h1 id="Step-3-–-Setup-Environment-Variable"><a href="#Step-3-–-Setup-Environment-Variable" class="headerlink" title="Step 3 – Setup Environment Variable"></a>Step 3 – Setup Environment Variable</h1><p>VirtualBox installation required kernel source code to install required modules, So we need to configure environment variable __ KERN_DIR __ to which VirtualBox get kernel source code. In my case latest kernel source is available in ** 2.6.32-504.3.3.el6.x86_64 ** directory under ** /usr/src/kernels/ **. Make sure you are using correct source path.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># export KERN_DIR=/usr/src/kernels/2.6.32-504.3.3.el6.x86_64</span><br></pre></td></tr></table></figure>

<h1 id="Step-4-–-Install-Oracle-VirtualBox-and-Setup"><a href="#Step-4-–-Install-Oracle-VirtualBox-and-Setup" class="headerlink" title="Step 4 – Install Oracle VirtualBox and Setup"></a>Step 4 – Install Oracle VirtualBox and Setup</h1><p>Use the following command to install VirtualBox 5.1 using yum command line tool. It will install the latest version of VirtualBox 5.1.x on your system.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install VirtualBox-5.1</span><br></pre></td></tr></table></figure>

<p>After installation, we need to rebuild kernel modules using the following command.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/lib/virtualbox/vboxdrv.sh setup</span><br></pre></td></tr></table></figure>

<h1 id="Step-5-–-Start-VirtualBox"><a href="#Step-5-–-Start-VirtualBox" class="headerlink" title="Step 5 – Start VirtualBox"></a>Step 5 – Start VirtualBox</h1><p>Use following command to start VirtualBox from X windows. You can switch to GUI mode using ** init 5 ** or ** startx ** commands from terminal.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># virtualbox &amp;</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[在Mac OS X系统下 用dd命令将iso镜像写入u盘]]></title>
      <url>http://www.wulai.me/2017/08/07/%E5%9C%A8Mac-OS-X%E7%B3%BB%E7%BB%9F%E4%B8%8B-%E7%94%A8dd%E5%91%BD%E4%BB%A4%E5%B0%86iso%E9%95%9C%E5%83%8F%E5%86%99%E5%85%A5u%E7%9B%98/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="一、-Mac下将ISO写入U盘可使用命令行工具dd，操作如下："><a href="#一、-Mac下将ISO写入U盘可使用命令行工具dd，操作如下：" class="headerlink" title="一、 Mac下将ISO写入U盘可使用命令行工具dd，操作如下："></a>一、 Mac下将ISO写入U盘可使用命令行工具dd，操作如下：</h2><h3 id="1、找出U盘挂载的路径，使用如下命令：diskutil-list"><a href="#1、找出U盘挂载的路径，使用如下命令：diskutil-list" class="headerlink" title="1、找出U盘挂载的路径，使用如下命令：diskutil list"></a>1、找出U盘挂载的路径，使用如下命令：diskutil list</h3><h3 id="2、将U盘unmount（将N替换为挂载路径）：diskutil-unmountDisk-dev-disk-N"><a href="#2、将U盘unmount（将N替换为挂载路径）：diskutil-unmountDisk-dev-disk-N" class="headerlink" title="2、将U盘unmount（将N替换为挂载路径）：diskutil unmountDisk /dev/disk[N]"></a>2、将U盘unmount（将N替换为挂载路径）：diskutil unmountDisk /dev/disk[N]</h3><h3 id="3、写入U盘：sudo-dd-if-iso路径-of-dev-rdisk-N-bs-1m-rdisk-中加入r可以让写入速度加快"><a href="#3、写入U盘：sudo-dd-if-iso路径-of-dev-rdisk-N-bs-1m-rdisk-中加入r可以让写入速度加快" class="headerlink" title="3、写入U盘：sudo dd if=iso路径 of=/dev/rdisk[N] bs=1m  rdisk 中加入r可以让写入速度加快"></a>3、写入U盘：sudo dd if=iso路径 of=/dev/rdisk[N] bs=1m  rdisk 中加入r可以让写入速度加快</h3><h2 id="二、具体操作示例："><a href="#二、具体操作示例：" class="headerlink" title="二、具体操作示例："></a>二、具体操作示例：</h2><ol>
<li>将iso转换成dmg 转iso 用</li>
</ol>
<p>UDRW 替换为 UDTO</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">lapommedeMacBook-Pro:~ lapomme$ sudo hdiutil convert -format UDRW -o /linux.dmg kali.iso</span><br><span class="line">Password:</span><br><span class="line">正在读取Master Boot Record（MBR：0）…</span><br><span class="line">正在读取Kali Live （Apple_ISO：1）…</span><br><span class="line">正在读取（Windows_NTFS_Hidden：2）…</span><br><span class="line">............................................................................</span><br><span class="line">正在读取（DOS_FAT_12：3）…</span><br><span class="line">..............................................................................</span><br><span class="line">已耗时：10.178s</span><br><span class="line">速度：288.3M 字节/秒</span><br><span class="line">节省：0.0%</span><br><span class="line">created: /linux.dmg</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>查看u盘盘符</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">lapommedeMacBook-Pro:~ lapomme$ diskutil list</span><br><span class="line">/dev/disk0 (internal, physical):</span><br><span class="line">#: TYPE NAME SIZE IDENTIFIER</span><br><span class="line">0: GUID_partition_scheme *251.0 GB disk0</span><br><span class="line">1: EFI EFI 209.7 MB disk0s1</span><br><span class="line">2: Apple_CoreStorage Macintosh HD 250.1 GB disk0s2</span><br><span class="line">3: Apple_Boot Recovery HD 650.0 MB disk0s3</span><br><span class="line">/dev/disk1 (internal, virtual):</span><br><span class="line">#: TYPE NAME SIZE IDENTIFIER</span><br><span class="line">0: Apple_HFS Macintosh HD +249.8 GB disk1</span><br><span class="line">Logical Volume on disk0s2</span><br><span class="line">E2BD4617-5A22-46A9-A6F4-D54E3EE92BBC</span><br><span class="line">Unencrypted</span><br><span class="line">/dev/disk2 (external, physical):</span><br><span class="line">#: TYPE NAME SIZE IDENTIFIER</span><br><span class="line">0: FDisk_partition_scheme *62.0 GB disk2</span><br><span class="line">1: DOS_FAT_32 UNTITLED 1 62.0 GB disk2s1</span><br><span class="line">/dev/disk3 (disk image):</span><br><span class="line">#: TYPE NAME SIZE IDENTIFIER</span><br><span class="line">0: FDisk_partition_scheme +3.1 GB disk3</span><br><span class="line">1: 0x17 3.0 GB disk3s1</span><br><span class="line">2: DOS_FAT_12 NO NAME 110.1 MB disk3s2</span><br></pre></td></tr></table></figure>
</li>
<li><p>取消挂载U盘</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lapommedeMacBook-Pro:~ lapomme$ diskutil umountDisk /dev/disk2</span><br><span class="line">Unmount of all volumes on disk2 was successful</span><br></pre></td></tr></table></figure>
</li>
<li><p>用dd命令写入U盘</p>
</li>
</ol>
<p>说明：</p>
<p>（1）sudo dd if=源路径 of=/dev/r卷标 bs=1m ［‘r’ 会让命令执行加快一点］ ［‘bs’为一次填充的容量］</p>
<p>（2）获取映像名称和完整路径可以直接将文件拖入终端，即在终端中显示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lapommedeMacBook-Pro:~ lapomme$ sudo dd if=/linux.dmg of=/dev/rdisk2 bs=1m</span><br><span class="line">2934+1 records in</span><br><span class="line">2934+1 records out</span><br><span class="line">3076767744 bytes transferred in 149.567568 secs (20571089 bytes/sec)</span><br></pre></td></tr></table></figure>

<ol start="5">
<li><p>查看磁盘进度，可以用iostat命令查看磁盘写入状态</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lapommedeMacBook-Pro:~ lapomme$ iostat -w 2</span><br><span class="line">disk0 disk2 disk3 cpu load average</span><br><span class="line">KB/t tps MB/s KB/t tps MB/s KB/t tps MB/s us sy id 1m 5m 15m</span><br><span class="line">102.71 25 2.49 598.70 0 0.15 24.76 1 0.02 5 4 90 2.04 1.71 1.69</span><br><span class="line">512.00 48 23.93 1024.00 24 23.93 0.00 0 0.00 1 3 96 2.11 1.74 1.69</span><br><span class="line">473.00 26 11.99 1024.00 12 11.98 0.00 0 0.00 3 3 93 2.11 1.74 1.69</span><br><span class="line">491.68 50 23.99 1024.00 24 23.99 0.00 0 0.00 24 8 68 2.11 1.74 1.69</span><br></pre></td></tr></table></figure>
</li>
<li><p>操作完毕后将U盘弹出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lapommedeMacBook-Pro:~ lapomme$ diskutil eject /dev/disk2</span><br><span class="line">Disk /dev/disk2 ejected</span><br></pre></td></tr></table></figure>

</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7 Command line install VirtuBox]]></title>
      <url>http://www.wulai.me/2017/08/03/CentOS7-Command-line-install-VirtuBox/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1-导出OVA-gt-test-ova"><a href="#1-导出OVA-gt-test-ova" class="headerlink" title="1.导出OVA -&gt; test.ova"></a>1.导出OVA -&gt; test.ova</h2><h2 id="2-copy到服务器-amp-导入"><a href="#2-copy到服务器-amp-导入" class="headerlink" title="2.copy到服务器&amp;导入"></a>2.copy到服务器&amp;导入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost vm] BoxManage import test.ovf</span><br></pre></td></tr></table></figure>

<h2 id="查看虚拟机镜像文件配置信息"><a href="#查看虚拟机镜像文件配置信息" class="headerlink" title="查看虚拟机镜像文件配置信息"></a>查看虚拟机镜像文件配置信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost vm]# VBoxManage showvminfo HKAirline</span><br><span class="line">Name:            HKAirline</span><br><span class="line">Groups:          /</span><br><span class="line">Guest OS:        Red Hat (64-bit)</span><br><span class="line">UUID:            041f669d-2974-4322-a046-a55903285424</span><br><span class="line">Config file:     /root/VirtualBox VMs/HKAirline/HKAirline.vbox</span><br><span class="line">Snapshot folder: /root/VirtualBox VMs/HKAirline/Snapshots</span><br><span class="line">Log folder:      /root/VirtualBox VMs/HKAirline/Logs</span><br><span class="line">Hardware UUID:   041f669d-2974-4322-a046-a55903285424</span><br><span class="line">Memory size:     2048MB</span><br><span class="line">Page Fusion:     off</span><br><span class="line">VRAM size:       16MB</span><br><span class="line">CPU exec cap:    100%</span><br><span class="line">HPET:            off</span><br><span class="line">Chipset:         piix3</span><br><span class="line">Firmware:        BIOS</span><br><span class="line">Number of CPUs:  1</span><br><span class="line">PAE:             on</span><br><span class="line">Long Mode:       on</span><br><span class="line">Triple Fault Reset: off</span><br><span class="line">APIC:            on</span><br><span class="line">X2APIC:          on</span><br><span class="line">CPUID Portability Level: 0</span><br><span class="line">CPUID overrides: None</span><br><span class="line">Boot menu mode:  message and menu</span><br><span class="line">Boot Device (1): Floppy</span><br><span class="line">Boot Device (2): DVD</span><br><span class="line">Boot Device (3): HardDisk</span><br><span class="line">Boot Device (4): Not Assigned</span><br><span class="line">ACPI:            on</span><br><span class="line">IOAPIC:          on</span><br><span class="line">BIOS APIC mode:  APIC</span><br><span class="line">Time offset:     0ms</span><br><span class="line">RTC:             UTC</span><br><span class="line">Hardw. virt.ext: on</span><br><span class="line">Nested Paging:   on</span><br><span class="line">Large Pages:     on</span><br><span class="line">VT-x VPID:       on</span><br><span class="line">VT-x unr. exec.: on</span><br><span class="line">Paravirt. Provider: Default</span><br><span class="line">Effective Paravirt. Provider: KVM</span><br><span class="line">State:           powered off (since 2017-08-03T11:27:45.000000000)</span><br><span class="line">Monitor count:   1</span><br><span class="line">3D Acceleration: off</span><br><span class="line">2D Video Acceleration: off</span><br><span class="line">Teleporter Enabled: off</span><br><span class="line">Teleporter Port: 0</span><br><span class="line">Teleporter Address:</span><br><span class="line">Teleporter Password:</span><br><span class="line">Tracing Enabled: off</span><br><span class="line">Allow Tracing to Access VM: off</span><br><span class="line">Tracing Configuration:</span><br><span class="line">Autostart Enabled: off</span><br><span class="line">Autostart Delay: 0</span><br><span class="line">Default Frontend:</span><br><span class="line">Storage Controller Name (0):            IDE</span><br><span class="line">Storage Controller Type (0):            PIIX4</span><br><span class="line">Storage Controller Instance Number (0): 0</span><br><span class="line">Storage Controller Max Port Count (0):  2</span><br><span class="line">Storage Controller Port Count (0):      2</span><br><span class="line">Storage Controller Bootable (0):        on</span><br><span class="line">Storage Controller Name (1):            SATA</span><br><span class="line">Storage Controller Type (1):            IntelAhci</span><br><span class="line">Storage Controller Instance Number (1): 0</span><br><span class="line">Storage Controller Max Port Count (1):  30</span><br><span class="line">Storage Controller Port Count (1):      2</span><br><span class="line">Storage Controller Bootable (1):        on</span><br><span class="line">IDE (1, 0): Empty</span><br><span class="line">SATA (0, 0): /root/VirtualBox VMs/HKAirline/HKAirline-disk001.vmdk (UUID: 6afa88f3-3035-4aa5-a940-f6ec43bc56bb)</span><br><span class="line">NIC 1:           MAC: 0800274D5932, Attachment: Bridged Interface &apos;eth0&apos;, Cable connected: on, Trace: off (file: none), Type: 82540EM, Reported speed: 0 Mbps, Boot priority: 0, Promisc Policy: deny, Bandwidth group: none</span><br><span class="line">NIC 2:           MAC: 0800279B57E7, Attachment: Bridged Interface &apos;eth0&apos;, Cable connected: on, Trace: off (file: none), Type: 82540EM, Reported speed: 0 Mbps, Boot priority: 0, Promisc Policy: deny, Bandwidth group: none</span><br><span class="line">NIC 3:           MAC: 080027716E47, Attachment: Bridged Interface &apos;eth0&apos;, Cable connected: on, Trace: off (file: none), Type: 82540EM, Reported speed: 0 Mbps, Boot priority: 0, Promisc Policy: deny, Bandwidth group: none</span><br><span class="line">NIC 4:           MAC: 080027C363BB, Attachment: Bridged Interface &apos;eth0&apos;, Cable connected: on, Trace: off (file: none), Type: 82540EM, Reported speed: 0 Mbps, Boot priority: 0, Promisc Policy: deny, Bandwidth group: none</span><br><span class="line">NIC 5:           disabled</span><br><span class="line">NIC 6:           disabled</span><br><span class="line">NIC 7:           disabled</span><br><span class="line">NIC 8:           disabled</span><br><span class="line">Pointing Device: PS/2 Mouse</span><br><span class="line">Keyboard Device: PS/2 Keyboard</span><br><span class="line">UART 1:          disabled</span><br><span class="line">UART 2:          disabled</span><br><span class="line">UART 3:          disabled</span><br><span class="line">UART 4:          disabled</span><br><span class="line">LPT 1:           disabled</span><br><span class="line">LPT 2:           disabled</span><br><span class="line">Audio:           enabled (Driver: ALSA, Controller: AC97, Codec: AD1980)</span><br><span class="line">Clipboard Mode:  disabled</span><br><span class="line">Drag and drop Mode: disabled</span><br><span class="line">VRDE:            enabled (Address 0.0.0.0, Ports 3389, MultiConn: off, ReuseSingleConn: off, Authentication type: external)</span><br><span class="line">Video redirection: disabled</span><br><span class="line">VRDE property: TCP/Ports  = &quot;3389&quot;</span><br><span class="line">VRDE property: TCP/Address = &lt;not set&gt;</span><br><span class="line">VRDE property: VideoChannel/Enabled = &lt;not set&gt;</span><br><span class="line">VRDE property: VideoChannel/Quality = &lt;not set&gt;</span><br><span class="line">VRDE property: VideoChannel/DownscaleProtection = &lt;not set&gt;</span><br><span class="line">VRDE property: Client/DisableDisplay = &lt;not set&gt;</span><br><span class="line">VRDE property: Client/DisableInput = &lt;not set&gt;</span><br><span class="line">VRDE property: Client/DisableAudio = &lt;not set&gt;</span><br><span class="line">VRDE property: Client/DisableUSB = &lt;not set&gt;</span><br><span class="line">VRDE property: Client/DisableClipboard = &lt;not set&gt;</span><br><span class="line">VRDE property: Client/DisableUpstreamAudio = &lt;not set&gt;</span><br><span class="line">VRDE property: Client/DisableRDPDR = &lt;not set&gt;</span><br><span class="line">VRDE property: H3DRedirect/Enabled = &lt;not set&gt;</span><br><span class="line">VRDE property: Security/Method = &lt;not set&gt;</span><br><span class="line">VRDE property: Security/ServerCertificate = &lt;not set&gt;</span><br><span class="line">VRDE property: Security/ServerPrivateKey = &lt;not set&gt;</span><br><span class="line">VRDE property: Security/CACertificate = &lt;not set&gt;</span><br><span class="line">VRDE property: Audio/RateCorrectionMode = &lt;not set&gt;</span><br><span class="line">VRDE property: Audio/LogPath = &lt;not set&gt;</span><br><span class="line">USB:             enabled</span><br><span class="line">EHCI:            disabled</span><br><span class="line">XHCI:            disabled</span><br><span class="line"></span><br><span class="line">USB Device Filters:</span><br><span class="line"></span><br><span class="line">&lt;none&gt;</span><br><span class="line"></span><br><span class="line">Bandwidth groups:  &lt;none&gt;</span><br><span class="line"></span><br><span class="line">Shared folders:  &lt;none&gt;</span><br><span class="line"></span><br><span class="line">Video capturing:    not active</span><br><span class="line">Capture screens:    0</span><br><span class="line">Capture file:       /root/VirtualBox VMs/HKAirline/HKAirline.webm</span><br><span class="line">Capture dimensions: 1024x768</span><br><span class="line">Capture rate:       512 kbps</span><br><span class="line">Capture FPS:        25</span><br><span class="line"></span><br><span class="line">Guest:</span><br><span class="line"></span><br><span class="line">Configured memory balloon size:      0 MB</span><br></pre></td></tr></table></figure>

<h2 id="3-检查服务器的网卡名称"><a href="#3-检查服务器的网卡名称" class="headerlink" title="3.检查服务器的网卡名称"></a>3.检查服务器的网卡名称</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost var]# ifconfig</span><br><span class="line">enp3s0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 11.0.0.30  netmask 255.255.255.0  broadcast 11.0.0.255</span><br><span class="line">        inet6 fe80::7627:eaff:fe0b:cbdd  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 74:27:ea:0b:cb:dd  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 1176518  bytes 1473593219 (1.3 GiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 629933  bytes 45138166 (43.0 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 0  (Local Loopback)</span><br><span class="line">        RX packets 83  bytes 7928 (7.7 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 83  bytes 7928 (7.7 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>

<h2 id="5-启动网卡配置"><a href="#5-启动网卡配置" class="headerlink" title="5. 启动网卡配置"></a>5. 启动网卡配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib/virtualbox/vboxdrv.sh setup</span><br></pre></td></tr></table></figure>

<h3 id="5-1-安装内核"><a href="#5-1-安装内核" class="headerlink" title="5.1 安装内核"></a>5.1 安装内核</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum install kernel-headers-$(uname -r)</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirror.bit.edu.cn</span><br><span class="line"> * epel: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * extras: mirrors.btte.net</span><br><span class="line"> * updates: mirror.bit.edu.cn</span><br><span class="line">No package kernel-headers-3.10.0-327.el7.x86_64 available.</span><br><span class="line">Error: Nothing to do</span><br></pre></td></tr></table></figure>

<h3 id="5-2-查看内核"><a href="#5-2-查看内核" class="headerlink" title="5.2 查看内核"></a>5.2 查看内核</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# uname -a</span><br><span class="line">Linux localhost.localdomain 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure>

<h3 id="5-3-下载匹配内核"><a href="#5-3-下载匹配内核" class="headerlink" title="5.3 下载匹配内核"></a>5.3 下载匹配内核</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# wget ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/7.0/x86_64/updates/security/kernel-devel-3.10.0-</span><br><span class="line">327.el7.x86_64.rpm</span><br><span class="line">--2017-08-03 09:00:48--  ftp://ftp.pbone.net/mirror/ftp.scientificlinux.org/linux/scientific/7.0/x86_64/updates/security/kernel-devel-3.10.0-327.el7.x86_64.rpm</span><br><span class="line">           =&gt; ‘kernel-devel-3.10.0-327.el7.x86_64.rpm.1’</span><br><span class="line">Resolving ftp.pbone.net (ftp.pbone.net)... 85.14.85.4</span><br><span class="line">Connecting to ftp.pbone.net (ftp.pbone.net)|85.14.85.4|:21... connected.</span><br><span class="line">Logging in as anonymous ... Logged in!</span><br><span class="line">==&gt; SYST ... done.    ==&gt; PWD ... done.</span><br><span class="line">==&gt; TYPE I ... done.  ==&gt; CWD (1) /mirror/ftp.scientificlinux.org/linux/scientific/7.0/x86_64/updates/security ... done.</span><br><span class="line">==&gt; SIZE kernel-devel-3.10.0-327.el7.x86_64.rpm ... 11470260</span><br><span class="line">==&gt; PASV ... done.    ==&gt; RETR kernel-devel-3.10.0-327.el7.x86_64.rpm ... done.</span><br><span class="line">Length: 11470260 (11M) (unauthoritative)</span><br><span class="line"></span><br><span class="line">100%[====================================================================================================&gt;] 11,470,260   603KB/s   in 28s    </span><br><span class="line"></span><br><span class="line">2017-08-03 09:01:21 (406 KB/s) - ‘kernel-devel-3.10.0-327.el7.x86_64.rpm’ saved [11470260]</span><br></pre></td></tr></table></figure>

<h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install make gcc libpcap libpcap-devel -y</span><br></pre></td></tr></table></figure>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>通过如下命令直接安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh kernel-devel-3.10.0-327.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>如果系统已经安装了较高版本的内核头文件，则需要通过如下命令实现降级：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh --oldpackage kernel-devel-3.10.0-327.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<h2 id="查看Bradge接口"><a href="#查看Bradge接口" class="headerlink" title="查看Bradge接口"></a>查看Bradge接口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost vm]# VBoxManage list bridgedifs</span><br><span class="line">Name:            enp3s0</span><br><span class="line">GUID:            33706e65-3073-4000-8000-7427ea0bcbdd</span><br><span class="line">DHCP:            Disabled</span><br><span class="line">IPAddress:       11.0.0.30</span><br><span class="line">NetworkMask:     255.255.255.0</span><br><span class="line">IPV6Address:     fe80:0000:0000:0000:7627:eaff:fe0b:cbdd</span><br><span class="line">IPV6NetworkMaskPrefixLength: 64</span><br><span class="line">HardwareAddress: 74:27:ea:0b:cb:dd</span><br><span class="line">MediumType:      Ethernet</span><br><span class="line">Status:          Up</span><br><span class="line">VBoxNetworkName: HostInterfaceNetworking-enp3s0</span><br></pre></td></tr></table></figure>

<h3 id="修改网卡设备的名称"><a href="#修改网卡设备的名称" class="headerlink" title="修改网卡设备的名称"></a>修改网卡设备的名称</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost vm]# VBoxManage modifyvm HKAirline --bridgeadapter4 enp3s0</span><br></pre></td></tr></table></figure>

<h3 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage startvm HKAirline --type headless</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[HOWTO disable tmpfs on /tmp?]]></title>
      <url>http://www.wulai.me/2017/08/02/HOWTO-disable-tmpfs-on-tmp/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/tmpfiles.d/tmp.conf</span><br><span class="line">#  This file is part of systemd.</span><br><span class="line">#</span><br><span class="line">#  systemd is free software; you can redistribute it and/or modify it</span><br><span class="line">#  under the terms of the GNU Lesser General Public License as published by</span><br><span class="line">#  the Free Software Foundation; either version 2.1 of the License, or</span><br><span class="line">#  (at your option) any later version.</span><br><span class="line"></span><br><span class="line"># See tmpfiles.d(5) for details</span><br><span class="line"></span><br><span class="line"># Clear tmp directories separately, to make them easier to override</span><br><span class="line">D /tmp 1777 root root 0</span><br><span class="line">D /var/tmp 1777 root root 10d</span><br><span class="line"></span><br><span class="line"># Exclude namespace mountpoints created with PrivateTmp=yes</span><br><span class="line">x /tmp/systemd-private-*</span><br><span class="line">x /var/tmp/systemd-private-*</span><br><span class="line">X /tmp/systemd-private-*/tmp</span><br><span class="line">X /var/tmp/systemd-private-*/tmp</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[$ cat /etc/tmpfiles.d/tmp.conf]]></title>
      <url>http://www.wulai.me/2017/08/02/cat-etc-tmpfiles-d-tmp-conf/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[How to resize a VirtualBox vmdk file]]></title>
      <url>http://www.wulai.me/2017/08/01/How-to-resize-a-VirtualBox-vmdk-file/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>548<br>down vote<br>yes, Brian, you are right: those are the steps, but if you want to end having back a vmdk hard disk (maybe you are interested in using the disk in vwmare too) you miss one more step. So the complete howto is:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage clonehd &quot;source.vmdk&quot; &quot;cloned.vdi&quot; --format vdi</span><br><span class="line">VBoxManage modifyhd &quot;cloned.vdi&quot; --resize 51200</span><br><span class="line">VBoxManage clonehd &quot;cloned.vdi&quot; &quot;resized.vmdk&quot; --format vmdk</span><br><span class="line">The above will resize the hard disk up to 50GB (50 * 1024MB).</span><br></pre></td></tr></table></figure>

<p>To complete things you need to resize the drive too! To achieve this, you might want to download gparted iso and boot from that iso to resize your drive (select the iso from within the virtualbox settings).</p>
<p>P.S. If your new size is too small, you’ll get the same error even with your new vdi file.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 分区只读]]></title>
      <url>http://www.wulai.me/2017/08/01/Linux-%E5%88%86%E5%8C%BA%E5%8F%AA%E8%AF%BB/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1<br>down vote<br>In case it is a fixed drive and not a removable drive, you can add the entry permanently.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/fstab</span><br></pre></td></tr></table></figure>

<p>Add an entry in the following format:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;file-system&gt; &lt;mount-point&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;</span><br></pre></td></tr></table></figure>

<p>And then do:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure>

<p>mount -o remount,rw /</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos 7: failed to bring up/down networking: configure interface for a trunk interface]]></title>
      <url>http://www.wulai.me/2017/07/31/Centos-7-failed-to-bring-up-down-networking-configure-interface-for-a-trunk-interface/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>it seems that disabling NetworkManager did the trick :)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop NetworkManager</span><br><span class="line">systemctl disable NetworkManager</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Rename ethernet interfaces on Centos7]]></title>
      <url>http://www.wulai.me/2017/07/31/Rename-ethernet-interfaces-on-Centos7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="0-Prepare"><a href="#0-Prepare" class="headerlink" title="0 Prepare"></a>0 Prepare</h3><pre><code>yum install pciutils -y</code></pre><h3 id="1-get-PCI-info"><a href="#1-get-PCI-info" class="headerlink" title="1 get PCI info:"></a>1 get PCI info:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] lspci | grep Ethernet   </span><br><span class="line">05:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection                                     </span><br><span class="line">06:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection                                     </span><br><span class="line">07:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection                                     </span><br><span class="line">08:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection</span><br></pre></td></tr></table></figure>

<h3 id="2-add-config-to-cat-usr-lib-udev-rules-d-60-net-rules"><a href="#2-add-config-to-cat-usr-lib-udev-rules-d-60-net-rules" class="headerlink" title="2 add config to cat /usr/lib/udev/rules.d/60-net.rules."></a>2 add config to <code>cat /usr/lib/udev/rules.d/60-net.rules</code>.</h3><p><strong><em>Notice:</em></strong> param <code>KERNELS</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat /usr/lib/udev/rules.d/60-net.rules</span><br><span class="line">ACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, DRIVERS==&quot;?*&quot;, ATTR&#123;type&#125;==&quot;1&quot;, PROGRAM=&quot;/lib/udev/rename_device&quot;, RESULT==&quot;?*&quot;, NAME=&quot;$result&quot;</span><br><span class="line">SUBSYSTEMS==&quot;pci&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, KERNELS==&quot;0000:00:05.0&quot;, NAME=&quot;vfnet0&quot;</span><br><span class="line">SUBSYSTEMS==&quot;pci&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, KERNELS==&quot;0000:00:06.0&quot;, NAME=&quot;vfnet1&quot;</span><br><span class="line">SUBSYSTEMS==&quot;pci&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, KERNELS==&quot;0000:00:07.0&quot;, NAME=&quot;vfnet2&quot;</span><br><span class="line">SUBSYSTEMS==&quot;pci&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, KERNELS==&quot;0000:00:08.0&quot;, NAME=&quot;vfnet3&quot;</span><br></pre></td></tr></table></figure>

<h3 id="3-reboot"><a href="#3-reboot" class="headerlink" title="3 reboot"></a>3 reboot</h3><h3 id="4-check"><a href="#4-check" class="headerlink" title="4 check"></a>4 check</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat /usr/lib/udev/rules.d/60-net.rules</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: vfnet0: &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master bond0 state UP qlen 1000</span><br><span class="line">    link/ether f2:d5:5d:21:4e:38 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">3: vfnet1: &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master bond0 state UP qlen 1000</span><br><span class="line">    link/ether 3e:ec:21:1a:d2:86 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">4: vfnet2: &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master bond0 state UP qlen 1000</span><br><span class="line">    link/ether be:70:05:01:46:04 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">5: vfnet3: &lt;BROADCAST,MULTICAST,SLAVE,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast master bond0 state UP qlen 1000</span><br><span class="line">    link/ether e6:de:61:c9:a8:d1 brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[name ethernet interfaces on CentOS7]]></title>
      <url>http://www.wulai.me/2017/07/27/name-ethernet-interfaces-on-CentOS7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>I’ve learned how to continue to use the ethX prefix. I’m still using the udev rules that I mentioned in post above. So at bootup udev will rename my interfaces netX. And then using /etc/rc.local I’ve included the following commands to rename them from netX back to ethX.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/sbin/ip link set net0 down</span><br><span class="line">/sbin/ip link set net0 name eth0</span><br><span class="line">/sbin/ip link set eth0 up</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>Using the ip command I can change the name of the interfaces after the initial bootup is completed.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[One final update.]]></title>
      <url>http://www.wulai.me/2017/07/27/One-final-update/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[mac关闭ipv6选项]]></title>
      <url>http://www.wulai.me/2017/07/18/mac%E5%85%B3%E9%97%ADipv6%E9%80%89%E9%A1%B9/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ networksetup -listallnetworkservices  </span><br><span class="line">An asterisk (*) denotes that a network service is disabled.  </span><br><span class="line">SAMSUNG Modem  </span><br><span class="line">Bluetooth DUN  </span><br><span class="line">Thunderbolt Ethernet  </span><br><span class="line">Wi-Fi  </span><br><span class="line">Bluetooth PAN  </span><br><span class="line">Thunderbolt Bridge  </span><br><span class="line">$ networksetup -setv6off Wi-Fi</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[GUIDE: Oracle VM VirtualBox and Oracle Linux NIC bonding]]></title>
      <url>http://www.wulai.me/2017/07/11/GUIDE-Oracle-VM-VirtualBox-and-Oracle-Linux-NIC-bonding/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Author: Dude</span><br><span class="line">Date: 01-Jun-2013</span><br><span class="line">Version: B</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Last updates:</span><br><span class="line">23-Jul-2013, changes required due to forum upgrade</span><br></pre></td></tr></table></figure>

<p><a href="https://community.oracle.com/thread/2546040" target="_blank" rel="noopener">https://community.oracle.com/thread/2546040</a></p>
<p>What is Linux network interface bonding? Simply put, the Linux system provides a kernel driver, which can create a logical network device (bond) using 2 or more Network Interface Controllers (NIC) to accomplish link-aggregation and adapter fault-tolerance. For more information, please see the Deployment Guide at <a href="https://linux.oracle.com/documentation/" target="_blank" rel="noopener">https://linux.oracle.com/documentation/</a></p>
<p>The channel bonding interface supports several modes of operation. In a typical active-backup set up for fault-tolerance, the system performs MII-based health monitoring of the network interface slaves (eth0, eth1) and assigns them according to bond options and interface availability. In active-backup mode (mode 1), only the current active network device is seen externally.</p>
<p>Linux bonding for fault-tolerance under Oracle VM VirtualBox does not seem to function as advertised. Searching the Internet for more information shows that other people have tried to set up Linux bonding using various virtualization products, virtual host network adapter and bonding options, but without success.</p>
<p>It appears the management of Media Access Control addresses (MAC) interferes with internal routing methods between the host and the virtual machine guest. Using the <strong><em>modinfo bonding</em></strong> command (fig. 1) shows a listing of available parameters for the bonding kernel module. The <strong><em>fail_over_mac</em></strong> parameter addresses the Mac address issue in VirtualBox.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># modinfo bonding</span><br><span class="line">filename:       /lib/modules/2.6.39-400.17.1.el6uek.x86_64</span><br><span class="line">                /kernel/drivers/net/bonding/bonding.ko</span><br><span class="line">parm:           fail_over_mac:For active-backup,</span><br><span class="line">                do not set all slaves to the same MAC;</span><br><span class="line">                0 for none (default), 1 for active, 2 for follow (charp)</span><br></pre></td></tr></table></figure>

<h3 id="Configuration-Example"><a href="#Configuration-Example" class="headerlink" title="Configuration Example"></a>Configuration Example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Virtualization Product: Oracle VM VirtualBox 4.2.10</span><br><span class="line">VM Guest OS: Oracle Linux 6.4 (x64)</span><br></pre></td></tr></table></figure>

<p>VM adapter settings: <strong>Bridged Adapter</strong>, Paravirtualized Network (virtio-net)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Adapter1 (eth0): 080027436617, en0, Ethernet 1</span><br><span class="line">Adapter2 (eth1): 08002708F36A, en0, Ethernet 1</span><br></pre></td></tr></table></figure>

<p>Note: If you wish to reset the network adapter names and MAC addresses used by the Oracle Linux guest system, erase the content of <code>/etc/udev/rules.d/70-persistent-net.rules</code> and restart the virtual machine.</p>
<h4 id="1-Create-or-modify-the-following-configuration-files"><a href="#1-Create-or-modify-the-following-configuration-files" class="headerlink" title="1. Create or modify the following configuration files:"></a>1. Create or modify the following configuration files:</h4><p><code>/etc/modprobe.d/bonding-eth0_eth1.conf</code></p>
<pre><code>alias bond0 bonding</code></pre><p><code>/etc/sysconfig/network-scripts/ifcfg-bond0</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=bond0</span><br><span class="line">IPADDR=10.0.2.12</span><br><span class="line">NETMASK=255.0.0.0</span><br><span class="line">GATEWAY=10.0.0.138</span><br><span class="line">DNS1=10.0.0.138</span><br><span class="line">DNS2=8.8.8.8</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">USERCTL=no</span><br><span class="line">BONDING_OPTS=&quot;mode=1 miimon=100 fail_over_mac=1&quot;</span><br></pre></td></tr></table></figure>

<p><code>/etc/sysconfig/network-scripts/ifcfg-eth0</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">ONBOOT=yes</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br><span class="line">USERCTL=no</span><br></pre></td></tr></table></figure>

<p><code>/etc/sysconfig/network-scripts/ifcfg-eth1</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth1</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">ONBOOT=yes</span><br><span class="line">MASTER=bond0</span><br><span class="line">SLAVE=yes</span><br><span class="line">USERCTL=no</span><br></pre></td></tr></table></figure>

<h4 id="2-Restart-the-system-or-network-services-root"><a href="#2-Restart-the-system-or-network-services-root" class="headerlink" title="2. Restart the system or network services (root):"></a>2. Restart the system or network services (root):</h4><pre><code># service network restart</code></pre><h4 id="Configuration-Test"><a href="#Configuration-Test" class="headerlink" title="Configuration Test"></a>Configuration Test</h4><p>Enter the following commands as user root to verify proper operation of NIC bonding:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># tail /var/log/messages</span><br><span class="line">bond0: setting mode to active-backup (1).</span><br><span class="line">bond0: Setting MII monitoring interval to 100.</span><br><span class="line">bond0: Setting fail_over_mac to active (1).</span><br><span class="line">bond0: Adding slave eth0.</span><br><span class="line">bond0: making interface eth0 the new active one.</span><br><span class="line">bond0: first active interface up!</span><br><span class="line">bond0: enslaving eth0 as an active interface with an up link.</span><br><span class="line">bond0: Adding slave eth1.</span><br><span class="line">bond0: enslaving eth1 as a backup interface with an up link.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># ifconfig</span><br><span class="line">bond0     Link encap:Ethernet  HWaddr 08:00:27:43:66:17  </span><br><span class="line">          inet addr:10.0.2.12  Bcast:10.255.255.255  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: fe80::a00:27ff:fe43:6617/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MASTER MULTICAST  MTU:1500  Metric:1</span><br><span class="line"></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 08:00:27:43:66:17  </span><br><span class="line">          UP BROADCAST RUNNING SLAVE MULTICAST  MTU:1500  Metric:1</span><br><span class="line"></span><br><span class="line">eth1      Link encap:Ethernet  HWaddr 08:00:27:08:F3:6A  </span><br><span class="line">          UP BROADCAST RUNNING SLAVE MULTICAST  MTU:1500  Metric:1</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># netstat -rn</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface</span><br><span class="line">0.0.0.0         10.0.0.138      0.0.0.0         UG        0 0          0 bond0</span><br><span class="line">10.0.0.0        0.0.0.0         255.0.0.0       U         0 0          0 bond0</span><br><span class="line">169.254.0.0     0.0.0.0         255.255.0.0     U         0 0          0 bond0</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># ifconfig eth0 down</span><br><span class="line"></span><br><span class="line"># tail /var/log/messages</span><br><span class="line">bond0: link status definitely down for interface eth0, disabling it</span><br><span class="line">bond0: making interface eth1 the new active one.</span><br><span class="line"></span><br><span class="line"># ifconfig</span><br><span class="line">bond0     Link encap:Ethernet  HWaddr 08:00:27:08:F3:6A  </span><br><span class="line">          inet addr:10.0.2.12  Bcast:10.255.255.255  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: fe80::a00:27ff:fe43:6617/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MASTER MULTICAST  MTU:1500  Metric:1</span><br><span class="line"></span><br><span class="line">eth1      Link encap:Ethernet  HWaddr 08:00:27:08:F3:6A  </span><br><span class="line">          UP BROADCAST RUNNING SLAVE MULTICAST  MTU:1500  Metric:1</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># ifconfig eth0 up</span><br><span class="line"></span><br><span class="line"># ifconfig eth1 down</span><br><span class="line"></span><br><span class="line"># tail /var/log/messages</span><br><span class="line">bond0: link status definitely up for interface eth0, 4294967295 Mbps full duplex.</span><br><span class="line">bond0: link status definitely down for interface eth1, disabling it</span><br><span class="line">bond0: making interface eth0 the new active one.</span><br><span class="line"></span><br><span class="line"># ifconfig</span><br><span class="line">bond0     Link encap:Ethernet  HWaddr 08:00:27:43:66:17  </span><br><span class="line">          inet addr:10.0.2.12  Bcast:10.255.255.255  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: fe80::a00:27ff:fe43:6617/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MASTER MULTICAST  MTU:1500  Metric:1</span><br><span class="line"></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 08:00:27:43:66:17  </span><br><span class="line">          UP BROADCAST RUNNING SLAVE MULTICAST  MTU:1500  Metric:1</span><br></pre></td></tr></table></figure>

<p>During the above test, the client network connection from host 10.0.0.1 (ssh) was maintained without any noticeable interruption. As it can be seen from the syslog and ifconfig command output, the bond0 interface was automatically assigned either the MAC address of eth0 or eth1 and the fail-over worked as advertised.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos7网卡配置失败]]></title>
      <url>http://www.wulai.me/2017/07/11/Centos7%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE%E5%A4%B1%E8%B4%A5/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h2><p>Restarting network (via systemctl):  Job for network.service failed. See ‘systemctl status network.service’ and ‘journalctl -xn’ for details.</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="查找原因"><a href="#查找原因" class="headerlink" title="查找原因"></a>查找原因</h3><pre><code>systemctl status network.service

 cat /var/log/message |grep network</code></pre><ol>
<li>Could not load file ‘/etc/sysconfig/network-scripts/ifcfg-lo’<br>This is generated by command ‘nmcli con load /etc/sysconfig/network-scripts/ifcfg-lo’ executed by ‘ifup’</li>
</ol>
<p>Tadding the line “TYPE=loopback” to the file /etc/sysconfig/network-scripts/ifcfg-lo</p>
<ol start="2">
<li>如果是网卡<ul>
<li><code>ip addr</code> get mac address</li>
<li>add to /etc/sysconfig/network-scripts/ifcfg-XXXX  HWADDR=XXXXXXXXXXX</li>
</ul>
</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[SSH session slow to start? It's the DNS stupid~~]]></title>
      <url>http://www.wulai.me/2017/07/11/SSH-session-slow-to-start-It-s-the-DNS-stupid/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Ever tried logging into a machine with ssh and found you have to wait much longer than reasonable for the session to start? This happened to me a few times and was especially annoying with machines on my local network (or a VM attached to a virtual network) that should be letting me in immediately.</p>
<p>I eventually got mad enough to strace the SSH daemon and debug what was going on and it turns out it’s a DNS thing. Basically the session is slow to start because the SSH server is trying to lookup the hostname of the SSH client and for whatever reason it’s timing out (e.g., it can’t reach a nameserver, because you happen to be offline)</p>
<p>There are a couple of very simple ways to fix that:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add &quot;UseDNS no&quot; to /etc/ssh/sshd_config</span><br><span class="line">add the client&apos;s net address to the server&apos;s /etc/hosts</span><br></pre></td></tr></table></figure>

<p>*** 改项可能会导致远程连接失败</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[ssh 调试方法]]></title>
      <url>http://www.wulai.me/2017/07/11/ssh-%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li><p>服务端</p>
<p>   /usr/sbin/sshd -d</p>
</li>
</ol>
<ul>
<li>客户端<br>   ssh -v -p22 <a href="mailto:root@192.168.56.10" target="_blank" rel="noopener">root@192.168.56.10</a></li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[硬盘只读模式]]></title>
      <url>http://www.wulai.me/2017/07/06/%E7%A1%AC%E7%9B%98%E5%8F%AA%E8%AF%BB%E6%A8%A1%E5%BC%8F/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="1-先改为可编辑模式"><a href="#1-先改为可编辑模式" class="headerlink" title="1 先改为可编辑模式"></a>1 先改为可编辑模式</h3><p> mount -o  remount,rw /</p>
<h3 id="2-编辑文件-etc-fstab"><a href="#2-编辑文件-etc-fstab" class="headerlink" title="2 编辑文件  /etc/fstab"></a>2 编辑文件  <code>/etc/fstab</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure>

<p>将<code>ro</code>修改为<code>rw</code></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[How to setup tagged VLANs on Mac OS X]]></title>
      <url>http://www.wulai.me/2017/07/04/How-to-setup-tagged-VLANs-on-Mac-OS-X/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ol>
<li>From the Apple menu (upper left corner of your desktop) choose System Preferences…</li>
</ol>
<ul>
<li>Open Network</li>
<li>In the toolbar below all of your network interfaces, click the gear wheel to access a dropdown menu</li>
<li>From that dropdown menu, select Manage Virtual Interfaces…</li>
<li>Click on + to access another dropdown menu</li>
<li>From that dropdown menu, select New VLAN…</li>
<li>Enter an appropriate name for your new VLAN, e.g. DMZ</li>
<li>Enter the desired tag, e.g. 23</li>
<li>Choose the correct physical interface, normally Ethernet</li>
<li>Click Create</li>
<li>Click Done</li>
<li>Configure your new VLAN interface as you would configure a physical interface, e.g. assign it an IP address, network mask, etc.</li>
<li>Click Apply</li>
<li>Close the network preferences window.</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[svn 取消版本控制]]></title>
      <url>http://www.wulai.me/2017/06/06/svn-%E5%8F%96%E6%B6%88%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>删除这些目录是很简单的，命令如下</p>
<pre><code>find . -type d -name &quot;.svn&quot;|xargs rm -rf</code></pre><p>或者</p>
<pre><code>find . -type d -iname &quot;.svn&quot; -exec rm -rf {} \;  </code></pre>]]></content>
      
        
        <tags>
            
            <tag> svn 取消版本控制 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[购买墨迹天气空气果，看互联网公司用户体验的盲区]]></title>
      <url>http://www.wulai.me/2017/05/26/%E4%BA%92%E8%81%94%E7%BD%91%E5%85%AC%E5%8F%B8%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E7%9A%84%E7%9B%B2%E5%8C%BA/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h5 id="个人观点-现阶段互联网公司普遍盲区在售后服务的体验。"><a href="#个人观点-现阶段互联网公司普遍盲区在售后服务的体验。" class="headerlink" title="个人观点: 现阶段互联网公司普遍盲区在售后服务的体验。"></a>个人观点: 现阶段互联网公司普遍盲区在售后服务的体验。</h5><p>最近想买一个测试雾霾的表，看了一些文章，也看了知乎上姜洋的答复。作为一个互联网的参与者，就选择购买了在天猫旗舰店买了空气果2.物流很快。包装很精美。到这个阶段用户体验还是不错的。</p>
<p>不过打开发现是空气果sport.这个时候不好的体验开始。</p>
<ol>
<li>通过阿里旺旺留言。</li>
</ol>
<ul>
<li>电话确认无法连接</li>
<li>需要自己把货发过去，然后再给我寄过来</li>
<li>联系人</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 互联网,用户体验,墨迹天气,空气果 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL 去掉字段中的换行和回车符]]></title>
      <url>http://www.wulai.me/2017/05/22/MySQL-%E5%8E%BB%E6%8E%89%E5%AD%97%E6%AE%B5%E4%B8%AD%E7%9A%84%E6%8D%A2%E8%A1%8C%E5%92%8C%E5%9B%9E%E8%BD%A6%E7%AC%A6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>解决方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE tablename SET field = REPLACE(REPLACE(field, CHAR(10), &apos;&apos;), CHAR(13), &apos;&apos;);</span><br><span class="line">char(10):  换行符</span><br><span class="line">char(13):  回车符</span><br></pre></td></tr></table></figure>

<p>MySQL的trim函数没办法去掉回车和换行，只能去掉多余的空格，可以用MySQL的replace函数，解决掉这个问题，具体解决办法如下：</p>
<p>假设想要审核数据库中内容为“我爱你<br>”的短信息（注意内容后有换行）通过（status改变成1）</p>
<p>之前的SQL语句是不起作用的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE `tran`</span><br><span class="line">SET `status` = &apos;1&apos;</span><br><span class="line">WHERE `msg` = &apos;我爱你&apos;;</span><br></pre></td></tr></table></figure>

<p>修改之后的语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE `tran`</span><br><span class="line">SET `status` = &apos;1&apos;</span><br><span class="line">WHERE trim( replace( `msg`, &apos;\r\n&apos;, &apos; &apos; ) ) = &apos;我爱你&apos;;</span><br></pre></td></tr></table></figure>

<p>把数据中的回车换行等替换成空格之后再trim掉，就达到目的了，虽然不是特别完美，但是由于没办法在用户录入的时候控制，所以只能出此下策，好在MySQL内置函数的效率还是很有保证的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UPDATE `tran`</span><br><span class="line">SET `status` = &apos;1&apos;</span><br><span class="line">WHERE trim( trim(</span><br><span class="line">BOTH &apos;\r\n&apos;</span><br><span class="line">FROM content ) ) = &apos;我爱你&apos;</span><br></pre></td></tr></table></figure>

<p>用了两个trim，这样的好处是不会替换内容中间的换行和回车，只会处理头尾的空格换行回车，相当于php中trim函数的作用了。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[12个非常有用的JavaScript技巧]]></title>
      <url>http://www.wulai.me/2017/05/12/12%E4%B8%AA%E9%9D%9E%E5%B8%B8%E6%9C%89%E7%94%A8%E7%9A%84JavaScript%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote>
<p>原文：<a href="https://blog.jscrambler.com/12-extremely-useful-hacks-for-javascript/?utm_source=tuicool&utm_medium=referral" target="_blank" rel="noopener">12 Extremely Useful Hacks for JavaScript</a></p>
</blockquote>
<blockquote>
<p>作者：Caio Ribeiro Pereira</p>
</blockquote>
<blockquote>
<p>翻译：雁惊寒</p>
</blockquote>
<p>在这篇文章中，我将分享12个非常有用的JavaScript技巧。这些技巧可以帮助你减少并优化代码。</p>
<h3 id="1-使用-将变量转换成布尔类型"><a href="#1-使用-将变量转换成布尔类型" class="headerlink" title="1) 使用!!将变量转换成布尔类型"></a>1) 使用!!将变量转换成布尔类型</h3><p>有时，我们需要检查一些变量是否存在，或者它是否具有有效值，从而将它们的值视为true。对于做这样的检查，你可以使用||（双重否定运算符），它能自动将任何类型的数据转换为布尔值，只有这些变量才会返回false：0，null，””，undefined或NaN，其他的都返回true。我们来看看这个简单的例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function Account(cash) &#123;  </span><br><span class="line">    this.cash = cash;</span><br><span class="line">    this.hasMoney = !!cash;</span><br><span class="line">&#125;</span><br><span class="line">var account = new Account(100.50);  </span><br><span class="line">console.log(account.cash); // 100.50  </span><br><span class="line">console.log(account.hasMoney); // true</span><br><span class="line"></span><br><span class="line">var emptyAccount = new Account(0);  </span><br><span class="line">console.log(emptyAccount.cash); // 0  </span><br><span class="line">console.log(emptyAccount.hasMoney); // false</span><br></pre></td></tr></table></figure>

<p>在这个例子中，如果account.cash的值大于零，则account.hasMoney的值就是true。</p>
<h3 id="2-使用-将变量转换成数字"><a href="#2-使用-将变量转换成数字" class="headerlink" title="2) 使用+将变量转换成数字"></a>2) 使用+将变量转换成数字</h3><p>这个转换超级简单，但它只适用于数字字符串，不然就会返回NaN（不是数字）。看看这个例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function toNumber(strNumber) &#123;  </span><br><span class="line">    return +strNumber;</span><br><span class="line">&#125;</span><br><span class="line">console.log(toNumber(&quot;1234&quot;)); // 1234  </span><br><span class="line">console.log(toNumber(&quot;ACB&quot;)); // NaN</span><br></pre></td></tr></table></figure>

<p>这个转换操作也可以作用于Date，在这种情况下，它将返回时间戳：</p>
<pre><code>console.log(+new Date()) // 1461288164385  </code></pre><h3 id="3-短路条件"><a href="#3-短路条件" class="headerlink" title="3) 短路条件"></a>3) 短路条件</h3><p>如果你看到过这种类似的代码:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (conected) &#123;  </span><br><span class="line">    login();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那么你可以在这两个变量之间使用&amp;&amp;（AND运算符）来缩短代码。例如，前面的代码可以缩减到一行：</p>
<pre><code>conected &amp;&amp; login();  </code></pre><p>你也可以用这种方法来检查对象中是否存在某些属性或函数。类似于以下代码：</p>
<pre><code>user &amp;&amp; user.login();</code></pre><h3 id="4-使用-设置默认值"><a href="#4-使用-设置默认值" class="headerlink" title="4) 使用||设置默认值"></a>4) 使用||设置默认值</h3><p>在ES6中有默认参数这个功能。为了在旧版浏览器中模拟此功能，你可以使用||（OR运算符），并把默认值作为它的第二个参数。如果第一个参数返回false，那么第二个参数将会被作为默认值返回。看下这个例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function User(name, age) &#123;  </span><br><span class="line">    this.name = name || &quot;Oliver Queen&quot;;</span><br><span class="line">    this.age = age || 27;</span><br><span class="line">&#125;</span><br><span class="line">var user1 = new User();  </span><br><span class="line">console.log(user1.name); // Oliver Queen  </span><br><span class="line">console.log(user1.age); // 27</span><br><span class="line"></span><br><span class="line">var user2 = new User(&quot;Barry Allen&quot;, 25);  </span><br><span class="line">console.log(user2.name); // Barry Allen  </span><br><span class="line">console.log(user2.age); // 25</span><br></pre></td></tr></table></figure>

<h3 id="5-在循环中缓存array-length"><a href="#5-在循环中缓存array-length" class="headerlink" title="5) 在循环中缓存array.length"></a>5) 在循环中缓存array.length</h3><p>这个技巧非常简单，并且在循环处理大数组时能够避免对性能造成巨大的影响。基本上几乎每个人都是这样使用for来循环遍历一个数组的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0; i &lt; array.length; i++) &#123;  </span><br><span class="line">    console.log(array[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果你使用较小的数组，那还好，但是如果处理大数组，则此代码将在每个循环里重复计算数组的大小，这会产生一定的延迟。为了避免这种情况，你可以在变量中缓存array.length，以便在循环中每次都使用缓存来代替array.length：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var length = array.length;  </span><br><span class="line">for (var i = 0; i &lt; length; i++) &#123;  </span><br><span class="line">    console.log(array[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>为了更简洁，可以这么写：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (var i = 0, length = array.length; i &lt; length; i++) &#123;  </span><br><span class="line">    console.log(array[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="6-检测对象中的属性"><a href="#6-检测对象中的属性" class="headerlink" title="6) 检测对象中的属性"></a>6) 检测对象中的属性</h3><p>当你需要检查某些属性是否存在，避免运行未定义的函数或属性时，这个技巧非常有用。如果你打算编写跨浏览器代码，你也可能会用到这个技术。例如，我们假设你需要编写与旧版Internet Explorer 6兼容的代码，并且想要使用document.querySelector()来通过ID获取某些元素。 但是，在现代浏览器中，这个函数不存在。所以，要检查这个函数是否存在，你可以使用in运算符。看下这个例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (&apos;querySelector&apos; in document) &#123;  </span><br><span class="line">    document.querySelector(&quot;#id&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    document.getElementById(&quot;id&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在这种情况下，如果在document中没有querySelector函数，它就会使用document.getElementById()作为代替。</p>
<h3 id="7-获取数组的最后一个元素"><a href="#7-获取数组的最后一个元素" class="headerlink" title="7) 获取数组的最后一个元素"></a>7) 获取数组的最后一个元素</h3><p>Array.prototype.slice（begin，end）可以用来裁剪数组。但是如果没有设置结束参数end的值的话，该函数会自动将end设置为数组长度值。我认为很少有人知道这个函数可以接受负值，如果你将begin设置一个负数的话，你就能从数组中获取到倒数的元素：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var array = [1, 2, 3, 4, 5, 6];  </span><br><span class="line">console.log(array.slice(-1)); // [6]  </span><br><span class="line">console.log(array.slice(-2)); // [5,6]  </span><br><span class="line">console.log(array.slice(-3)); // [4,5,6]</span><br></pre></td></tr></table></figure>

<h3 id="8-数组截断"><a href="#8-数组截断" class="headerlink" title="8) 数组截断"></a>8) 数组截断</h3><p>这个技术可以锁定数组的大小，这对于要删除数组中固定数量的元素是非常有用的。例如，如果你有一个包含10个元素的数组，但是你只想获得前五个元素，则可以通过设置array.length = 5来阶段数组。看下这个例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var array = [1, 2, 3, 4, 5, 6];  </span><br><span class="line">console.log(array.length); // 6  </span><br><span class="line">array.length = 3;  </span><br><span class="line">console.log(array.length); // 3  </span><br><span class="line">console.log(array); // [1,2,3]</span><br></pre></td></tr></table></figure>

<h3 id="9-全部替换"><a href="#9-全部替换" class="headerlink" title="9) 全部替换"></a>9) 全部替换</h3><p>String.replace()函数允许使用String和Regex来替换字符串，这个函数本身只能替换第一个匹配的串。但是你可以在正则表达式末尾添加/g来模拟replaceAll()函数：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var string = &quot;john john&quot;;  </span><br><span class="line">console.log(string.replace(/hn/, &quot;ana&quot;)); // &quot;joana john&quot;  </span><br><span class="line">console.log(string.replace(/hn/g, &quot;ana&quot;)); // &quot;joana joana&quot;</span><br></pre></td></tr></table></figure>

<h3 id="10-合并数组"><a href="#10-合并数组" class="headerlink" title="10) 合并数组"></a>10) 合并数组</h3><p>如果你需要合并两个数组，你可以使用Array.concat()函数：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var array1 = [1, 2, 3];  </span><br><span class="line">var array2 = [4, 5, 6];  </span><br><span class="line">console.log(array1.concat(array2)); // [1,2,3,4,5,6];</span><br></pre></td></tr></table></figure>

<p>但是，这个函数对于大数组来说不并合适，因为它将会创建一个新的数组并消耗大量的内存。在这种情况下，你可以使用Array.push.apply（arr1，arr2），它不会创建一个新数组，而是将第二个数组合并到第一个数组中，以减少内存使用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var array1 = [1, 2, 3];  </span><br><span class="line">var array2 = [4, 5, 6];  </span><br><span class="line">console.log(array1.push.apply(array1, array2)); // [1,2,3,4,5,6];</span><br></pre></td></tr></table></figure>

<h3 id="11-把NodeList转换成数组"><a href="#11-把NodeList转换成数组" class="headerlink" title="11) 把NodeList转换成数组"></a>11) 把NodeList转换成数组</h3><p>如果运行document.querySelectorAll(“p”)函数，它会返回一个DOM元素数组，即NodeList对象。但是这个对象并没有一些属于数组的函数，例如：sort()，reduce()，map()，filter()。为了启用这些函数，以及数组的其他的原生函数，你需要将NodeList转换为数组。要进行转换，只需使用这个函数：[] .slice.call（elements）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var elements = document.querySelectorAll(&quot;p&quot;); // NodeList  </span><br><span class="line">var arrayElements = [].slice.call(elements); // 现在已经转换成数组了</span><br><span class="line">var arrayElements = Array.from(elements); // 把NodeList转换成数组的另外一个方法</span><br></pre></td></tr></table></figure>

<h3 id="12-对数组元素进行洗牌"><a href="#12-对数组元素进行洗牌" class="headerlink" title="12) 对数组元素进行洗牌"></a>12) 对数组元素进行洗牌</h3><p>如果要像外部库Lodash那样对数据元素重新洗牌，只需使用这个技巧：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var list = [1, 2, 3];  </span><br><span class="line">console.log(list.sort(function() &#123;  </span><br><span class="line">    return Math.random() - 0.5</span><br><span class="line">&#125;)); // [2,1,3]</span><br></pre></td></tr></table></figure>

<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>现在，你已经学到了一些有用的JS技巧，它们主要用于缩减JavaScript代码量，其中一些技巧在许多流行的JS框架都使用到，如Lodash，Underscore.js，Strings.js等。如果你知道其他JS技巧，欢迎分享！</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[imaxabsConfigure HUAWEI E1750 HSPA USB Stick in Linux → Configure USB modem HUAWEI E3131 in Linux]]></title>
      <url>http://www.wulai.me/2017/03/25/%E2%86%90-imaxabsConfigure-HUAWEI-E1750-HSPA-USB-Stick-in-Linux-%E2%86%92Configure-USB-modem-HUAWEI-E3131-in-Linux/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>For installing device HUAWEI E3131 in CentOS 6.4 Linux you have to follow instructions below. Can be used to send SMS by AT command and also to establish HiSpeed Mobile Internet connection.</p>
<p>##Install requirements</p>
<p>You have to download usb_modeswitch and data with configurations.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]$ wget http://www.draisberghof.de/usb_modeswitch/usb-modeswitch-1.2.7.tar.bz2</span><br><span class="line">[root@localhost ~]$ wget http://www.draisberghof.de/usb_modeswitch/usb-modeswitch-data-20130807.tar.bz2</span><br><span class="line">[root@localhost ~]$ yum install libusb libusb-devel minicom wvdial</span><br><span class="line">[root@localhost ~]$ bzip2 -d usb-modeswitch-1.2.7.tar.bz2</span><br><span class="line">[root@localhost ~]$ bzip2 -d usb-modeswitch-data-20130807.tar.bz2</span><br><span class="line">[root@localhost ~]$ tar -xf usb-modeswitch-1.2.7.tar</span><br><span class="line">[root@localhost ~]$ tar -xf usb-modeswitch-data-20130807.tar</span><br><span class="line">[root@localhost ~]$ cd usb-modeswitch-1.2.7</span><br><span class="line">[root@localhost usb-modeswitch-1.2.7]$ make all</span><br><span class="line">cc -o usb_modeswitch usb_modeswitch.c -Wall -l usb</span><br><span class="line">sed &apos;s_!/usr/bin/tclsh_!&apos;&quot;/usr/bin/jimsh&quot;&apos;_&apos; &lt; usb_modeswitch.tcl &gt; usb_modeswitch_dispatcher</span><br><span class="line">[root@localhost usb-modeswitch-1.2.7]$ make install</span><br><span class="line">sed &apos;s_!/usr/bin/tclsh_!&apos;&quot;/usr/bin/jimsh&quot;&apos;_&apos; &lt; usb_modeswitch.tcl &gt; usb_modeswitch_dispatcher</span><br><span class="line">install -D --mode=755 usb_modeswitch /usr/sbin/usb_modeswitch</span><br><span class="line">install -D --mode=755 usb_modeswitch.sh /lib/udev/usb_modeswitch</span><br><span class="line">install -D --mode=644 usb_modeswitch.conf /etc/usb_modeswitch.conf</span><br><span class="line">install -D --mode=644 usb_modeswitch.1 /usr/share/man/man1/usb_modeswitch.1</span><br><span class="line">install -D --mode=755 usb_modeswitch_dispatcher /usr/sbin/usb_modeswitch_dispatcher</span><br><span class="line">install -d /var/lib/usb_modeswitch</span><br><span class="line">[root@localhost usb-modeswitch-1.2.7]$ cd ..</span><br><span class="line">[root@localhost ~]$ cd usb-modeswitch-data-20130807</span><br><span class="line">[root@localhost usb-modeswitch-data-20130807]$ make install</span><br><span class="line">install -d /usr/share/usb_modeswitch</span><br><span class="line">install -d /etc/usb_modeswitch.d</span><br><span class="line">install -D --mode=644 40-usb_modeswitch.rules /lib/udev/rules.d/40-usb_modeswitch.rules</span><br><span class="line">install --mode=644 -t /usr/share/usb_modeswitch ./usb_modeswitch.d/*</span><br><span class="line">custom logging function 0x7fd5344c7010 registered</span><br><span class="line">selinux=0</span><br><span class="line">calling: control</span><br></pre></td></tr></table></figure>

<h2 id="Manual-configuration"><a href="#Manual-configuration" class="headerlink" title="Manual configuration"></a>Manual configuration</h2><p>Now we have to install modules and configure device to modem mode.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]$ lsusb</span><br><span class="line">Bus 001 Device 029: ID 12d1:14fe Huawei Technologies Co., Ltd.</span><br><span class="line">[root@localhost ~]$ modprobe option usbserial usb_wwan</span><br><span class="line">[root@localhost ~]$ /usr/sbin/usb_modeswitch -H -v 12d1 -p 14fe -c /etc/usb_modeswitch.d/12d1\:14fe</span><br><span class="line">[root@localhost ~]$ lsusb</span><br><span class="line">Bus 001 Device 030: ID 12d1:1506 Huawei Technologies Co., Ltd. E398 LTE/UMTS/GSM Modem/Networkcard</span><br><span class="line">[root@localhost ~]$ ls -la /dev/ttyUSB*</span><br><span class="line">crw-rw---- 1 root dialout 188,  0 23. srp 08.49 /dev/ttyUSB0</span><br><span class="line">crw-rw---- 1 root dialout 188,  1 23. srp 08.49 /dev/ttyUSB1</span><br><span class="line">crw-rw---- 1 root dialout 188,  2 23. srp 08.49 /dev/ttyUSB2</span><br><span class="line">crw-rw---- 1 root dialout 188,  3 23. srp 08.49 /dev/ttyUSB3</span><br></pre></td></tr></table></figure>

<h2 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h2><p>Now we have 4 USB serial ports then we can use minicom -s -c on command to test send SMS by<br>AT commands. For dialup internet you have to use wvdial.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Now we have 4 USB serial ports then we can use minicom -s -c on command to test send SMS by</span><br><span class="line">AT commands. For dialup internet you have to use wvdial.</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Dialer Defaults]</span><br><span class="line">Init1 = AT+CGDCONT=1,&quot;IP&quot;,&quot;internet.t-mobile.cz&quot;</span><br><span class="line">Init2 =</span><br><span class="line">Init3 =</span><br><span class="line">Stupid Mode = 1</span><br><span class="line">Ask Password = 0</span><br><span class="line">Phone = *99***1#</span><br><span class="line">Modem = /dev/ttyUSB0</span><br><span class="line">Username = neco</span><br><span class="line">Password = neco</span><br><span class="line">Baud = 9600</span><br><span class="line">Auto DNS = yes</span><br><span class="line">Dial Command = ATDT</span><br></pre></td></tr></table></figure>

<blockquote>
<p>ystem: CentOS 6.4 x86_64<br>GIMP: 2.6 x86_64<br>Inkscape: 0.47 x86_64<br>GNOME: 2.28.2 x86_64</p>
</blockquote>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Shell 前后台进程切换]]></title>
      <url>http://www.wulai.me/2017/03/23/Shell-%E5%89%8D%E5%90%8E%E5%8F%B0%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Shell 前后台进程切换</p>
<p>当你用 shell 启动一个程序时，往往他是在前台工作的。比如执行命令</p>
<pre><code>redis-server</code></pre><p>启动 redis 后，shell 就不能再输入了。因为此时 redis 在前台。</p>
<p>Shell 支持作用控制，有以下命令：</p>
<ul>
<li>command &amp; 让进程在后台运行</li>
<li>jobs –l 查看后台运行的进程</li>
<li>fg %n 让后台运行的进程 n 到前台来</li>
<li>bg %n 让进程 n 到后台去;</li>
</ul>
<p><code>PS：n 为 jobs 查看到的进程编号。</code></p>
<h3 id="1、执行命令-amp-切换至后台"><a href="#1、执行命令-amp-切换至后台" class="headerlink" title="1、执行命令 &amp; 切换至后台"></a>1、执行命令 &amp; 切换至后台</h3><p>在 Mac 终端运行命令的时候，在命令末尾加上 &amp; 符号，就可以让程序在后台运行</p>
<h3 id="2、切换正在运行的程序到后台"><a href="#2、切换正在运行的程序到后台" class="headerlink" title="2、切换正在运行的程序到后台"></a>2、切换正在运行的程序到后台</h3><p>如果程序正在前台运行，可以使用 Ctrl+z 选项把程序暂停，然后用 bg %[number] 命令把这个程序放到后台运行，这个步骤分为3步，如下：</p>
<h4 id="2-1-暂停程序运行Ctrl-z"><a href="#2-1-暂停程序运行Ctrl-z" class="headerlink" title="2.1 暂停程序运行Ctrl+z"></a>2.1 暂停程序运行Ctrl+z</h4><p>Ctrl+z 跟系统任务有关的，Ctrl+z 可以将一个正在前台执行的命令放到后台，并且暂停。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜ /Users/apple git:(master) ✗&gt; redis-server</span><br><span class="line"></span><br><span class="line">^Z</span><br><span class="line">[1]  + 18669 suspended  redis-server</span><br></pre></td></tr></table></figure>

<h4 id="2-2-查看暂停的程序"><a href="#2-2-查看暂停的程序" class="headerlink" title="2.2 查看暂停的程序"></a>2.2 查看暂停的程序</h4><p>察看 jobs 使用 jobs 或 ps 命令可以察看正在执行的 jobs</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ /Users/apple git:(master) ✗&gt; jobs -l</span><br><span class="line">[1]  + running    redis-server</span><br></pre></td></tr></table></figure>

<ul>
<li><p>jobs 命令执行的结果，+ 表示是一个当前的作业，减号表示是当前作业之后的一个作业。</p>
</li>
<li><p>jobs -l 选项可显示所有任务的 PID，jobs 的状态可以是 running， stopped， Terminated</p>
</li>
</ul>
<h4 id="2-3-切换程序至后台"><a href="#2-3-切换程序至后台" class="headerlink" title="2.3 切换程序至后台"></a>2.3 切换程序至后台</h4><p>bg 将一个在后台暂停的命令，变成继续执行如果后台中有多个命令，可以用 bg %jobnumber 将选中的命令调出.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜ /Users/apple git:(source) ✗&gt; bg</span><br><span class="line">[1]  + 18823 continued  redis-server</span><br><span class="line">➜ /Users/apple git:(source) ✗&gt; jobs -l</span><br><span class="line">[1]  + 18823 running    redis-server</span><br></pre></td></tr></table></figure>

<h4 id="2-4-切换程序至前台"><a href="#2-4-切换程序至前台" class="headerlink" title="2.4 切换程序至前台"></a>2.4 切换程序至前台</h4><p>也可以用 <code>fg %[number]</code> 指令把一个程序掉到前台运行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ /Users/apple git:(source) ✗&gt; fg %1</span><br><span class="line">[1]  + 18823 running    redis-server</span><br></pre></td></tr></table></figure>

<h4 id="2-5-终止后台程序"><a href="#2-5-终止后台程序" class="headerlink" title="2.5 终止后台程序"></a>2.5 终止后台程序</h4><p>也可以直接终止后台运行的程序，使用 kill 命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜ /Users/apple git:(source) ✗&gt; kill %1</span><br></pre></td></tr></table></figure>

<p>但是如果任务被终止了 kill，shell 从当前的 shell 环境已知的列表中删除任务的进程标识;也就是说，jobs 命令显示的是当前 shell 环境中所起的后台正在运行或者被挂起的任务信息。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Can't resume screen, says I am already attached?]]></title>
      <url>http://www.wulai.me/2017/03/22/Can-t-resume-screen-says-I-am-already-attached/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>he session is still attached on another terminal. The server hasn’t detected the network outage on that connection: it only detects the outage when it tries to send a packet and gets an error back or no response after a timeout, but this hasn’t happened yet. You’re in a common situation where the client detected the outage because it tried to send some input and failed, but the server is just sitting there waiting for input. Eventually the server will send a keepalive packet and detect that the connection is dead.</p>
<p>In the meantime, use the <code>-d</code> option to detach the screen session from the terminal where it’s in.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen -r -d 30608</span><br><span class="line">screen -rd is pretty much the standard way to attach to an</span><br></pre></td></tr></table></figure>

<p>existing screen session.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Save MySQL query results into a text or CSV file]]></title>
      <url>http://www.wulai.me/2017/03/10/Save-MySQL-query-results-into-a-text-or-CSV-file/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>MySQL provides an easy mechanism for writing the results of a select statement into a text file on the server. Using extended options of the INTO OUTFILE nomenclature, it is possible to create a comma separated value (CSV) which can be imported into a spreadsheet application such as OpenOffice or Excel or any other applciation which accepts data in CSV format.</p>
<p>Given a query such as</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT order_id,product_name,qty FROM orders</span><br></pre></td></tr></table></figure>

<p>which returns three columns of data, the results can be placed into the file /tmo/orders.txt using the query:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT order_id,product_name,qty FROM orders</span><br><span class="line">INTO OUTFILE &apos;/tmp/orders.txt&apos;</span><br></pre></td></tr></table></figure>

<p>This will create a tab-separated file, each row on its own line. To alter this behavior, it is possible to add modifiers to the query:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT order_id,product_name,qty FROM orders</span><br><span class="line">INTO OUTFILE &apos;/tmp/orders.csv&apos;</span><br><span class="line">FIELDS TERMINATED BY &apos;,&apos;</span><br><span class="line">ENCLOSED BY &apos;&quot;&apos;</span><br><span class="line">LINES TERMINATED BY &apos;\n&apos;</span><br></pre></td></tr></table></figure>

<p>In this example, each field will be enclosed in “double quotes,” the fields will be separated by commas, and each row will be output on a new line separated by a newline (\n). Sample output of this command would look like:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;1&quot;,&quot;Tech-Recipes sock puppet&quot;,&quot;14.95&quot; &quot;2&quot;,&quot;Tech-Recipes chef&apos;s hat&quot;,&quot;18.95&quot;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>Keep in mind that the output file must not already exist and that the user MySQL is running as has write permissions to the directory MySQL is attempting to write the file to.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[MAGENTO 2: CHANGE THE BASE-URL USING THE COMMAND LINE]]></title>
      <url>http://www.wulai.me/2017/03/10/MAGENTO-2-CHANGE-THE-BASE-URL-USING-THE-COMMAND-LINE/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>The following Magento 2’s CLI command will update the Magento base-url and the base-url-secure values.</p>
<p>Go to the Magento’s root directory, then type within the console:</p>
<pre><code>php bin/magento setup:store-config:set --base-url=&quot;http://localhost:8080/&quot;</code></pre><p>Replacing <a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a> with your new base-url.</p>
<p>You may want to change the base-url-secure also:</p>
<pre><code>php bin/magento setup:store-config:set --base-url-secure=&quot;https://localhost:8080/&quot;</code></pre><p>Note: both base-url and base-url-secure values must contain the URL’s scheme, http:// or https://, and a trailing slash /.</p>
<p>Then clear the cache:</p>
<pre><code>php bin/magento cache:flush</code></pre><p>Troubleshooting<br>Clear current values from the database<br>Can happen that the above command doesn’t works as expected and you still have some url pointing to the old base-url. In these cases you have to clear some values in your db.</p>
<p>Open the Magento 2 database with your favorite MySQL tool then go to the core_config_data table.</p>
<p>Search for rows having these values in the column path (note that there could be more than one row for each value):</p>
<ul>
<li>“web/unsecure/base_url”</li>
<li>“web/secure/base_url”<br>Delete these rows (Magento will recreate them).</li>
</ul>
<p>Now you can set the base-url value using the above CLI command.</p>
<p>Single-Store Mode option enabled<br>If you have the Single-Store Mode option enabled this could bring to some problem with setting the base-url with the command line.</p>
<p>In this case you should modify the base-url using only the command line and not the Magento’s Admin Panel. If you already saved the Base url field value using the Admin Panel you should clear values within the Magento’s core_config_data table as described above.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[How to remove old Docker containers]]></title>
      <url>http://www.wulai.me/2017/03/10/How-to-remove-old-Docker-containers/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="1、remove-exit-containers"><a href="#1、remove-exit-containers" class="headerlink" title="1、remove exit containers"></a>1、remove <code>exit</code> containers</h3><p>Until that command is available, you can string docker commands together with other unix commands to get what you need. Here is an example on how to clean up old containers that are weeks old.</p>
<pre><code>$ docker ps --filter &quot;status=exited&quot; | grep &apos;weeks ago&apos; | awk &apos;{print $1}&apos; | xargs --no-run-if-empty docker rm</code></pre><h3 id="2、remove-images"><a href="#2、remove-images" class="headerlink" title="2、remove images"></a>2、remove images</h3><pre><code>$ docker images | grep &quot;&lt;none&gt;&quot; | awk &apos;{print $3}&apos; | xargs docker rmi</code></pre><h3 id="3-rm-all-stopped-containers"><a href="#3-rm-all-stopped-containers" class="headerlink" title="3 rm all stopped containers"></a>3 rm all <code>stopped</code> containers</h3><p>If you want to use awk for this consider this command if you want do rm all stopped containers (without a error because of the first line):</p>
<pre><code>$ docker ps -a | awk &apos;NR &gt; 1 {print $1}&apos; | xargs docker rm</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[linux文件名编码转换工具convmv]]></title>
      <url>http://www.wulai.me/2017/03/07/linux%E6%96%87%E4%BB%B6%E5%90%8D%E7%BC%96%E7%A0%81%E8%BD%AC%E6%8D%A2%E5%B7%A5%E5%85%B7convmv/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>今天介绍个文件名转码的工具–convmv，convmv能帮助我们很容易地对一个文件，一个目录下所有文件进行编码转换，比如gbk转为utf8等。</p>
<h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><pre><code>convmv [options] FILE(S) … DIRECTORY(S)</code></pre><h3 id="主要选项："><a href="#主要选项：" class="headerlink" title="主要选项："></a>主要选项：</h3><ul>
<li><p>1、-f ENCODING<br>指定目前文件名的编码，如-f gbk</p>
</li>
<li><p>2、-t ENCODING<br>指定将要转换成的编码，如-t utf-8</p>
</li>
<li><p>3、-r<br>递归转换目录下所有文件名</p>
</li>
<li><p>4、–list<br>列出所有支持的编码</p>
</li>
<li><p>5、–notest<br>默认是只打印转换后的效果，加这个选项才真正执行转换操作。</p>
</li>
<li><p>更多选项请man convmv。</p>
</li>
</ul>
<p>例子：<br>递归转换centos目录下的目前文件名编码gbk为utf-8:</p>
<pre><code>convmv -f gbk -t utf-8 --notest -r  centos</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[latest-ffmpeg-centos6.sh]]></title>
      <url>http://www.wulai.me/2017/03/07/latest-ffmpeg-centos6-sh/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="脚本-latest-ffmpeg-centos6-sh"><a href="#脚本-latest-ffmpeg-centos6-sh" class="headerlink" title="脚本 latest-ffmpeg-centos6.sh"></a>脚本 <code>latest-ffmpeg-centos6.sh</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"># source: https://trac.ffmpeg.org/wiki/CentosCompilationGuide</span><br><span class="line"></span><br><span class="line">yum install autoconf automake gcc gcc-c++ git libtool make nasm pkgconfig zlib-devel</span><br><span class="line"></span><br><span class="line">mkdir ~/ffmpeg_sources</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">curl -O http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz</span><br><span class="line">tar xzvf yasm-1.2.0.tar.gz</span><br><span class="line">cd yasm-1.2.0</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --bindir=&quot;$HOME/bin&quot;</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line">. ~/.bash_profile</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">git clone --depth 1 git://git.videolan.org/x264</span><br><span class="line">cd x264</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --bindir=&quot;$HOME/bin&quot; --enable-static</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">git clone --depth 1 git://github.com/mstorsjo/fdk-aac.git</span><br><span class="line">cd fdk-aac</span><br><span class="line">autoreconf -fiv</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --disable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">curl -L -O http://downloads.sourceforge.net/project/lame/lame/3.99/lame-3.99.5.tar.gz</span><br><span class="line">tar xzvf lame-3.99.5.tar.gz</span><br><span class="line">cd lame-3.99.5</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --bindir=&quot;$HOME/bin&quot; --disable-shared --enable-nasm</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">curl -O http://downloads.xiph.org/releases/opus/opus-1.0.3.tar.gz</span><br><span class="line">tar xzvf opus-1.0.3.tar.gz</span><br><span class="line">cd opus-1.0.3</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --disable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">curl -O http://downloads.xiph.org/releases/ogg/libogg-1.3.1.tar.gz</span><br><span class="line">tar xzvf libogg-1.3.1.tar.gz</span><br><span class="line">cd libogg-1.3.1</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --disable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">curl -O http://downloads.xiph.org/releases/vorbis/libvorbis-1.3.3.tar.gz</span><br><span class="line">tar xzvf libvorbis-1.3.3.tar.gz</span><br><span class="line">cd libvorbis-1.3.3</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --with-ogg=&quot;$HOME/ffmpeg_build&quot; --disable-shared</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">git clone --depth 1 https://chromium.googlesource.com/webm/libvpx</span><br><span class="line">cd libvpx</span><br><span class="line">git checkout tags/v1.3.0</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --disable-examples</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make clean</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">curl -O http://downloads.xiph.org/releases/theora/libtheora-1.1.1.tar.gz</span><br><span class="line">tar xzvf libtheora-1.1.1.tar.gz</span><br><span class="line">cd libtheora-1.1.1</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --with-ogg=&quot;$HOME/ffmpeg_build&quot; --disable-examples --disable-shared --disable-sdltest --disable-vorbistest</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line"></span><br><span class="line">yum -y install freetype-devel speex-devel</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources</span><br><span class="line">git clone --depth 1 git://source.ffmpeg.org/ffmpeg</span><br><span class="line">cd ffmpeg</span><br><span class="line">PKG_CONFIG_PATH=&quot;$HOME/ffmpeg_build/lib/pkgconfig&quot;</span><br><span class="line">export PKG_CONFIG_PATH</span><br><span class="line">./configure --prefix=&quot;$HOME/ffmpeg_build&quot; --extra-cflags=&quot;-I$HOME/ffmpeg_build/include&quot; --extra-ldflags=&quot;-L$HOME/ffmpeg_build/lib&quot; --bindir=&quot;$HOME/bin&quot; --extra-libs=&quot;-ldl&quot; --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libmp3lame --enable-libopus --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libfreetype --enable-libspeex --enable-libtheora</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">make distclean</span><br><span class="line">hash -r</span><br><span class="line">. ~/.bash_profile</span><br><span class="line"></span><br><span class="line">cd ~/ffmpeg_sources/ffmpeg/tools</span><br><span class="line">make qt-faststart</span><br><span class="line">cp qt-faststart /usr/bin</span><br><span class="line">ldconfig</span><br><span class="line">cd</span><br></pre></td></tr></table></figure>

<h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ:"></a>FAQ:</h2><ul>
<li><p>ERROR: libvpx decoder version must be &gt;=0.9.1</p>
<pre><code>sudo yum install libvpx.x86_64 libvpx-devel.x86_64</code></pre></li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[docker mysql Access denied for user]]></title>
      <url>http://www.wulai.me/2017/03/06/docker-mysql-Access-denied-for-user/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@docker:~/drupal# docker inspect drupal_mysql | grep MYSQL_ROOT_PASSWORD</span><br><span class="line">&quot;MYSQL_ROOT_PASSWORD=test&quot;,</span><br><span class="line">root@docker:~/drupal# docker exec -it drupal_mysql mysql -u root -p</span><br><span class="line">Enter password: test</span><br><span class="line">ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: YES)</span><br></pre></td></tr></table></figure>

<p>I’ve gratuitously rebuilt, recreated, <code>--no-cache&#39;d</code>, <code>--force-recreate&#39;d</code>.. nothing is working. I’ve also tried putting the environment variable directly in a mysql Dockerfile and as an “environment” argument in my docker-compose.yml.</p>
<p>The only thing that IS working is passing -e ‘MYSQL_ROOT_PASSWORD=test’ in a docker run statement.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[flock防止重复rsync]]></title>
      <url>http://www.wulai.me/2017/02/24/flock%E9%98%B2%E6%AD%A2%E9%87%8D%E5%A4%8Drsync/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>我使用crontab同步一个文件夹时，发现一个问题，我在crontab中设置的1分钟运行一次.但当那个文件夹的内容改变时。1分钟不一定能同步完，但这时第二个rsync进行又起来了。</p>
<p>这个就产生一个问题，二个rsync一起处理相同的文件，这样会出问题。如下</p>
<pre><code>* * * * /usr/bin/rsync -avlR /data/files    172.16.xxx.xxx:/data</code></pre><p>本来想写个脚本来解决，但太麻烦。所以用了个linux下的锁。。呵呵，象下面这个.</p>
<pre><code>1 * * * * flock -xn /var/run/rsync.lock -c &quot;rsync -avlR /data/files    172.16.xxx.xxx:/data&quot;</code></pre><p>这样,使用flock的<code>-x</code>参数先建一个锁文件，然后<code>-n</code>指定，如果锁存在，就等待。直到建成功锁在会运行-c后面的命令。这样第一个进程没有运行完前，锁文件都会存在。这样就不会二个rsync同时并发处理一个东西了</p>
<p><code>来源</code>: <a href="http://www.cnblogs.com/cmsd/p/3697049.html" target="_blank" rel="noopener">http://www.cnblogs.com/cmsd/p/3697049.html</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[rsync 只同步指定类型的文件]]></title>
      <url>http://www.wulai.me/2017/02/15/rsync-%E5%8F%AA%E5%90%8C%E6%AD%A5%E6%8C%87%E5%AE%9A%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>需求： 同步某个目录下所有的图片（<em>.jpg），该目录下有很多其他的文件，但只想同步</em>.jpg的文件。</p>
<p>rsync 有一个–exclude 可以排除指定文件，还有个–include选项的作用正好和–exclude相反。<br>那直接使用–include=”*.jpg”是否可以呢？</p>
<p>rsync -av  –include=”*.jpg”  /src/   /des/</p>
<p>实验证明，这样是不对的。</p>
<p>而正确的答案是<br>rsync -av  –include=”<em>.jpg” –exclude=</em>  /src/ /des/</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL 导入慢的解决方法]]></title>
      <url>http://www.wulai.me/2017/02/09/MySQL-%E5%AF%BC%E5%85%A5%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>MySQL导出的SQL语句在导入时有可能会非常非常慢，经历过导入仅45万条记录，竟用了近3个小时。在导出时合理使用几个参数，可以大大加快导 入的速度。</p>
<ul>
<li><code>-e</code> 使用包括几个VALUES列表的多行INSERT语法;</li>
<li><code>-max_allowed_packet=XXX</code> 客户端/服务器之间通信的缓存区的最大大小;</li>
<li><code>--net_buffer_length=XXX</code>  TCP/IP和套接字通信缓冲区大小,创建长度达net_buffer_length的行。</li>
</ul>
<p><code>注意</code>：max_allowed_packet和net_buffer_length不能比目标数据库的设定数值 大，否则可能出错。</p>
<p>首先确定目标库的参数值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;show variables like &apos;max_allowed_packet&apos;;</span><br><span class="line">mysql&gt;show variables like &apos;net_buffer_length&apos;;</span><br></pre></td></tr></table></figure>

<p>根据参数值书写mysqldump命令，如：</p>
<pre><code>E:\eis&gt;mysqldump -uroot -p eis_db goodclassification -e --max_allowed_packet=1048576 --net_buffer_length=16384 &gt;good3.sql</code></pre><p>之前2小时才能导入的sql现在几十秒就可以完成了。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[svn merge 合并单个文件]]></title>
      <url>http://www.wulai.me/2017/02/04/svn-merge-%E5%90%88%E5%B9%B6%E5%8D%95%E4%B8%AA%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>I’m not sure exactly what you’re asking as the title talks about merging single files but the text of the question talks about single revisions. In the case of merging single revisions you need: (to merge the changes committed in revisions 100, 105, 115)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd trunk</span><br><span class="line">svn merge -c 100 -c 105 -c 115 http://..../branches/mybranch .</span><br></pre></td></tr></table></figure>

<p>If you want to merge only the part of revision 100 that affects file.cpp:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd trunk/path/to/file.cpp</span><br><span class="line">svn merge -c 100 http://../branches/mybranch/path/to/file.cpp file.cpp</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[php CMYK to RGB]]></title>
      <url>http://www.wulai.me/2017/02/04/php-CMYK-to-RGB/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="php-CMYK-to-RGB"><a href="#php-CMYK-to-RGB" class="headerlink" title="php CMYK to RGB"></a>php CMYK to RGB</h3><p><code>来源</code>:<a href="http://php.net/manual/en/imagick.setimagecolorspace.php" target="_blank" rel="noopener">http://php.net/manual/en/imagick.setimagecolorspace.php</a></p>
<p>Simlest way converting from CMYK to RGB:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if ($jpeg-&gt;getImageColorspace() == \Imagick::COLORSPACE_CMYK) &#123;</span><br><span class="line">    $jpeg-&gt;transformimagecolorspace(\Imagick::COLORSPACE_SRGB);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>It is pretty work in current stable Image Magick (6.9.0-4).</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[php try/catch a warning ]]></title>
      <url>http://www.wulai.me/2017/01/06/php-try-catch-a-warning/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="方案一，输出到系统错误"><a href="#方案一，输出到系统错误" class="headerlink" title="方案一，输出到系统错误"></a>方案一，输出到系统错误</h2><p>One possibility is to set your own error handler before the call and restore the previous error handler later with restore_error_handler().</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set_error_handler(function() &#123; /* ignore errors */ &#125;);</span><br><span class="line">dns_get_record();</span><br><span class="line">restore_error_handler();</span><br></pre></td></tr></table></figure>

<p>You could build on this idea and write a re-usable error handler that logs the errors for you.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set_error_handler([$logger, &apos;onSilencedError&apos;]);</span><br><span class="line">dns_get_record();</span><br><span class="line">restore_error_handler();</span><br><span class="line">Turning errors into exceptions</span><br></pre></td></tr></table></figure>

<p>You can use <code>set_error_handler()</code> and the <code>ErrorException</code> class to turn all php errors into exceptions.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">set_error_handler(function($errno, $errstr, $errfile, $errline, array $errcontext) &#123;</span><br><span class="line">    // error was suppressed with the @-operator</span><br><span class="line">    if (0 === error_reporting()) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    throw new ErrorException($errstr, 0, $errno, $errfile, $errline);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">    dns_get_record();</span><br><span class="line">&#125; catch (ErrorException $e) &#123;</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>The important thing to note when using your own error handler is that it will bypass the <code>error_reporting</code> setting and pass all errors (notices, warnings, etc.) to your error handler. You can set a second argument on <code>set_error_handler()</code> to define which error types you want to receive, or access the current setting using … = <code>error_reporting()</code> inside the error handler.</p>
<p>Suppressing the warning</p>
<p>Another possibility is to suppress the call with the @ operator and check the return value of dns_get_record() afterwards. But I’d advise against this as errors/warnings are triggered to be handled, not to be suppressed.</p>
<h2 id="方案二：-输出到自定义函数"><a href="#方案二：-输出到自定义函数" class="headerlink" title="方案二： 输出到自定义函数"></a>方案二： 输出到自定义函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">set_error_handler(function ($errno, $errstr) &#123;</span><br><span class="line">    // do something</span><br><span class="line">    echo &quot;\r\n～～～～～找到错误 :-D～～～～～\r\n&quot;;</span><br><span class="line">    echo &quot;错误信息:($errno)$errstr \r\n&quot;;</span><br><span class="line">    debug_print_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS);</span><br><span class="line">    echo &quot;\r\n&quot;;</span><br><span class="line">&#125;, E_WARNING);</span><br><span class="line">$dir_handle = opendir(&quot;$dir/111&quot;);  //要catch的函数</span><br><span class="line">restore_error_handler();</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[UTF-8编码去除BOM头的python脚本]]></title>
      <url>http://www.wulai.me/2016/12/14/UTF-8%E7%BC%96%E7%A0%81%E5%8E%BB%E9%99%A4BOM%E5%A4%B4%E7%9A%84python%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><blockquote>
<p>欢迎转载，但请务必在明确位置注明文章出处！ &gt;<a href="http://johnnyshieh.github.io/python/2015/08/02/python-remove-utf8-bom/" target="_blank" rel="noopener">http://johnnyshieh.github.io/python/2015/08/02/python-remove-utf8-bom/</a></p>
</blockquote>
<p>前几天我在Windows写完一篇markdown格式的文章，上传到github page后，这个文章的页面把jekyll的YAML头信息也显示出来了，没有像我之前在ubuntu中写的文章一样正常解析YAML头信息，最后谷歌了半天发现原因是在Windows用记事本保存utf-8编码的文件时会默认加上BOM头字符。而jekyll的文档中也明确写明了如果使用UTF-8编码，那么在文件中一定不要出现BOM头字符。</p>
<p>所以我把如何在Windows和linux系统中去除UTF-8的BOM头的方法做个记录。</p>
<ol>
<li>UTF-8 与 UTF-8 + BOM 的区别</li>
</ol>
<p>下面是我从网上复制过来BOM的简介：</p>
<p>BOM – Byte Order Mark，中文名译作“字节顺序标记”。在UCS 编码中有一个叫做 “Zero Width No-Break Space” ，中文译名作“零宽无间断间隔”的字符，它的编码是 FEFF。而 FFFE 在 UCS 中是不存在的字符，所以不应该出现在实际传输中。UCS 规范建议我们在传输字节流前，先传输字符 “Zero Width No-Break Space”。这样如果接收者收到 FEFF，就表明这个字节流是 Big-Endian 的；如果收到FFFE，就表明这个字节流是 Little- Endian 的。因此字符 “Zero Width No-Break Space” （“零宽无间断间隔”）又被称作 BOM。</p>
<p>UTF-8 不需要 BOM 来表明字节顺序，但可以用 BOM 来表明编码方式。字符 “Zero Width No-Break Space” 的 UTF-8 编码是 EF BB BF。所以如果接收者收到以 EF BB BF （十六进制）开头的字节流，就知道这是 UTF-8编码了。Windows 就是使用 BOM 来标记文本文件的编码方式的。</p>
<p>所以UTF-8 + BOM其实就是在文件的开头加上了 0xEF 0xBB 0xBF 这三个字节,而这个三个字节是一串隐藏字符。</p>
<ol start="2">
<li>在Linux中如何检测去除BOM头</li>
</ol>
<p>在Linux中可以用vim很方便地检测、去除BOM头</p>
<p>检测是否有BOM头：</p>
<pre><code>:set bomb?</code></pre><p>去除BOM头：</p>
<pre><code>:set encoding=utf-8
:set nobomb</code></pre><p>添加BOM头也很简单：</p>
<pre><code>:set encoding=utf-8
:set bomb</code></pre><ol start="3">
<li>利用python脚本在window、linux、mac os中去除BOM头</li>
</ol>
<p>我在Terence的BomSweeper的基础上，用python3完成了一个去除单个文件BOM或者批量去除一个文件夹内多个文件BOM的脚本。原理就是删除文件开头的BOM 3个字节。</p>
<p>大家可以到Github中查看下载源码，项目地址– Utf8BomRemover</p>
<p>在readme中我有写明脚本的使用方法，如果大家对这个脚本有什么建议欢迎留言。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[批量改名]]></title>
      <url>http://www.wulai.me/2016/12/12/%E6%89%B9%E9%87%8F%E6%94%B9%E5%90%8D/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>将扩展名为<code>.json</code>的文件名添加前缀<code>ad_</code></p>
<pre><code>for i in `ls *.json`;do mv -f $i `echo &quot;ad_&quot;$i`;done</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[awk列出文件夹所有文件导入到md文件]]></title>
      <url>http://www.wulai.me/2016/12/12/awk%E5%88%97%E5%87%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5%E5%88%B0md%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>通过命令列出文件夹并输出到指定文件</p>
<pre><code>ll |grep json | awk &apos;{print &quot;## &quot;NR&quot;.&quot; ,$9}&apos; &gt; README.md</code></pre><p>说明：</p>
<ul>
<li><code>ll</code> 列出夹所有文件</li>
<li><code>grep json</code> 仅显示包含 <strong>json</strong> 的文件名</li>
<li>awk ‘{print “## “NR”.” ,$9}’<ul>
<li>awk 格式化grep的结果</li>
<li>打印输出</li>
<li><code>##</code> 每一天前面添加字符串<code>##</code></li>
<li>NR”.” 格式化输出行号。如 <code>1.</code>,<code>2.</code>等</li>
<li><code>,</code> 连接字符串</li>
<li><code>$9</code> 结果的第9列数据</li>
<li><code>&gt; README.md</code> 结果输出到README.md 文件</li>
</ul>
</li>
</ul>
<p>实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">localhost:IFE8.0 json.json liuligang$ ll</span><br><span class="line">total 944</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff    510 12 12 10:39 README.md</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  21499 11 28 10:40 airshop.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  36993 11 28 12:17 en_culture.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  17351 11 28 12:18 en_gourmet.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   6548 11 28 12:18 en_magazines.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  25975 11 28 12:17 en_movies.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  21805 11 28 12:16 en_recommend.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  29110 11 28 12:18 en_travel.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   1082 11 28 11:43 english_menu.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  28534 11 28 11:48 ent_cars.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  29919 11 28 11:46 ent_film.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  27993 11 28 11:47 ent_finance.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  26844 11 28 11:49 ent_travel.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   5409 11 28 11:49 ent_video.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   1331 11 28 11:48 entertainment_menu.json</span><br><span class="line">-rw-r--r--  1 liuligang  staff    350 12 12 10:21 file.list</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   7247 11 28 10:39 game.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  36349 11 28 11:49 gossip.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   8555 11 28 10:37 home.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  31678 11 28 11:50 lifestyle.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   1673 11 28 10:48 mainMenu.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff  43716 11 28 11:50 recommend.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   8423 11 28 10:41 topic2.json</span><br><span class="line">-rw-r--r--@ 1 liuligang  staff   7047 11 28 10:40 topic4.json</span><br></pre></td></tr></table></figure>

<p>输出README.md文件如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">## 1. airshop.json</span><br><span class="line">## 2. en_culture.json</span><br><span class="line">## 3. en_gourmet.json</span><br><span class="line">## 4. en_magazines.json</span><br><span class="line">## 5. en_movies.json</span><br><span class="line">## 6. en_recommend.json</span><br><span class="line">## 7. en_travel.json</span><br><span class="line">## 8. english_menu.json</span><br><span class="line">## 9. ent_cars.json</span><br><span class="line">## 10. ent_film.json</span><br><span class="line">## 11. ent_finance.json</span><br><span class="line">## 12. ent_travel.json</span><br><span class="line">## 13. ent_video.json</span><br><span class="line">## 14. entertainment_menu.json</span><br><span class="line">## 15. game.json</span><br><span class="line">## 16. gossip.json</span><br><span class="line">## 17. home.json</span><br><span class="line">## 18. lifestyle.json</span><br><span class="line">## 19. mainMenu.json</span><br><span class="line">## 20. recommend.json</span><br><span class="line">## 21. topic2.json</span><br><span class="line">## 22. topic4.json</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[git如何放弃所有本地修改]]></title>
      <url>http://www.wulai.me/2016/11/21/git%E5%A6%82%E4%BD%95%E6%94%BE%E5%BC%83%E6%89%80%E6%9C%89%E6%9C%AC%E5%9C%B0%E4%BF%AE%E6%94%B9/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout . #本地所有修改的。没有的提交的，都返回到原来的状态</span><br><span class="line">git stash #把所有没有提交的修改暂存到stash里面。可用git stash pop回复。</span><br><span class="line">git reset --hard HASH #返回到某个节点，不保留修改。</span><br><span class="line">git reset --soft HASH #返回到某个节点。保留修改</span><br></pre></td></tr></table></figure>

<p>git丢弃本地修改的所有文件（新增、删除、修改）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clean -df #返回到某个节点</span><br><span class="line">git clean 参数</span><br><span class="line">    -n 显示 将要 删除的 文件 和  目录</span><br><span class="line">    -f 删除 文件</span><br><span class="line">    -df 删除 文件 和 目录</span><br></pre></td></tr></table></figure>

<p>也可以使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout . &amp;&amp; git clean -xdf</span><br></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[macOS 10.12 Finder小技巧 快捷键显示隐藏文件]]></title>
      <url>http://www.wulai.me/2016/11/18/macOS-10-12-Finder%E5%B0%8F%E6%8A%80%E5%B7%A7-%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>快捷键:</p>
<pre><code>Command-Shift-.(句号)</code></pre><p>快速显示目录内的隐藏文件.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[svn中操作带有”@”符号的文件]]></title>
      <url>http://www.wulai.me/2016/11/14/svn%E4%B8%AD%E6%93%8D%E4%BD%9C%E5%B8%A6%E6%9C%89%E2%80%9D-%E2%80%9D%E7%AC%A6%E5%8F%B7%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>如果在命终端中用svn命令操作文件名中有“@”符号的文件（ios开发的朋友应该很清楚），会遇到：</p>
<pre><code>svn: E205000: Syntax error parsing peg revision ‘3x.png’</code></pre><p>或者：</p>
<pre><code>svn: E200009: ‘welcome1@3x.png&apos;: a peg revision is not allowed here</code></pre><p>类似的错误提示，原因是因为svn命令把文件名中的@识别成有其它含义的特殊字符，导致操作失败。</p>
<h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>在使用svn命令时在文件名尾部再添加一个<code>@</code>即可解决。<br>比如 要查看<a href="mailto:welcome1@3x.png" target="_blank" rel="noopener">welcome1@3x.png</a>文件信息：</p>
<pre><code>svn info welcome1@3x.png@</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[rsync进行网站异地镜像]]></title>
      <url>http://www.wulai.me/2016/10/27/rsync%E5%90%8C%E6%AD%A5%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>站点远程同步脚本，实现数据库本地镜像。</p>
<p><code>如果源文件删除，目标文件夹也会删除。因此该脚本只能够作为镜像，不能作为备份</code></p>
<h3 id="rsync-sh-执行脚本"><a href="#rsync-sh-执行脚本" class="headerlink" title="rsync.sh 执行脚本"></a>rsync.sh 执行脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">path=$1</span><br><span class="line"></span><br><span class="line">host=rsync@103.235.220.108</span><br><span class="line">port=2222</span><br><span class="line"></span><br><span class="line">dbuser=root</span><br><span class="line">dbpwd=111111</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#远程服务器运行dbdump.sh脚本dump数据库</span><br><span class="line">echo &quot;dump msyql&quot;</span><br><span class="line">ssh $host -p $port &quot;~/dbdump.sh&quot;</span><br><span class="line"></span><br><span class="line">src=$host:/home/wwwroot/html</span><br><span class="line">dst=/home/wwwroot/html</span><br><span class="line">exculude=/home/wwwroot/rsync_exclude.list</span><br><span class="line"></span><br><span class="line">echo &quot;源:&quot;$src/$path</span><br><span class="line">echo &quot;目标:&quot;$dst/$path</span><br><span class="line">rsync -avzO -e &quot;ssh -p $port&quot; --exclude-from=$exculude   --delete  $src/$path  $dst/$path</span><br><span class="line"></span><br><span class="line">echo &quot;&gt;&gt;&gt;更新数据库&quot;</span><br><span class="line">CurrentDate=$(date +%Y%m%d)</span><br><span class="line">mysql -u$dbuser -p$dbpwd test &lt; $dst/db/test.$&#123;CurrentDate&#125;.sql</span><br><span class="line"></span><br><span class="line">echo &quot;同步完成&quot;</span><br></pre></td></tr></table></figure>

<h3 id="rsync-exclude-list"><a href="#rsync-exclude-list" class="headerlink" title="rsync_exclude.list"></a>rsync_exclude.list</h3><p>忽略的文件,文件夹路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.svn/</span><br><span class="line">Upload/</span><br><span class="line">logs/</span><br></pre></td></tr></table></figure>

<h3 id="dbdump-sh"><a href="#dbdump-sh" class="headerlink" title="dbdump.sh"></a>dbdump.sh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">dbname=root</span><br><span class="line">dbpwd=111111</span><br><span class="line">CurrentDate=$(date +%Y%m%d)</span><br><span class="line">dirPath=/home/wwwroot/html/db</span><br><span class="line">mysqldump -u$dbname -pdbpwd test &gt; $dirPath/test.$&#123;CurrentDate&#125;.sql</span><br></pre></td></tr></table></figure>

<h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><p>同步test文件夹</p>
<p>./rsync.sh test</p>
<h3 id="显示进度条"><a href="#显示进度条" class="headerlink" title="显示进度条"></a>显示进度条</h3><p>添加参数<code>--progress</code></p>
<pre><code>rsync -av --progress  root@123.123.123.123:/root/mysql56.tar .</code></pre>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何成为一名数据科学家？]]></title>
      <url>http://www.wulai.me/2016/10/26/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%EF%BC%9F/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="1、作者：谢科"><a href="#1、作者：谢科" class="headerlink" title="1、作者：谢科"></a>1、作者：谢科</h1><p>链接：<a href="https://www.zhihu.com/question/21592677/answer/24663656" target="_blank" rel="noopener">https://www.zhihu.com/question/21592677/answer/24663656</a><br>来源：知乎<br>著作权归作者所有，转载请联系作者获得授权。</p>
<p>“Data Science = statistics who uses python and lives in San Francisco”</p>
<p>恰好我马上启程到Twitter的data science team，而且恰巧懂一点点统计和住在旧金山，所以冲动地没有邀请就厚脸回答了:D</p>
<p>我认为有几个大方面</p>
<p>1）学好python。<br>现在几乎所以公司的数据都可以api给你，而python的数据处理能力强大且方便。加之在machine learning的很多算法上，python也独俏一方。另外，它的简明方便迅速迭代开发，15分钟写完个算法就可以看效果了。</p>
<p>除此之外，py还有点酷酷的感觉。任何程序拿matlab和c++都是可以写的，不过我真没认识过哪个d愿意自己把自己扔那个不酷的框框里:D</p>
<p>对不规则输入的处理也给python一个巨大的优势。通常来说，在我现在日常的工作里，所有的数据都是以纯文本但是非格式的形式存储的（raw text, unstructured data)。问题在于，这些文本不可以直接当作各种算法的输入，你需要<br>分词，分句<br>提取特征<br>整理缺失数据<br>除掉异类（outlier）<br>在这些时候，python可谓是神器。这里做的1-4都可以直接在scikit-learn里面找到对应的工具，而且，即使是要自己写一个定制的算法处理某些特殊需求，也就是一百行代码的事情。</p>
<p>简而言之，对于数据科学面临的挑战，python可以让你短平快地解决手中的问题，而不是担心太多实现细节。</p>
<p>2）学好统计学习<br>略拗口。统计学习的概念就是“统计机器学习方法”。<br>统计和计算机科学前几十年互相平行着，互相造出了对方造出的一系列工具，算法。但是直到最近人们开始注意到，计算机科学家所谓的机器学习其实就是统计里面的prediction而已。因此这两个学科又开始重新融合。</p>
<p>为什么统计学习很重要？</p>
<p>因为，纯粹的机器学习讲究算法预测能力和实现，但是统计一直就强调“可解释性”。比如说，针对今天微博股票发行就上升20%，你把你的两个预测股票上涨还是下跌的model套在新浪的例子上，然后给你的上司看。<br>Model-1有99%的预测能力，也就是99%的情况下它预测对，但是Model-2有95%，不过它有例外的一个附加属性——可以告诉你为什么这个股票上涨或者下跌。</p>
<p>试问，你的上司会先哪个？问问你自己会选哪个？</p>
<p>显然是后者。因为前者虽然有很强的预测力（机器学习），但是没有解释能力（统计解释）。</p>
<p>而作为一个数据科学家，80%的时间你是需要跟客户，团队或者上司解释为什么A可行B不可行。如果你告诉他们，“我现在的神经网络就是能有那么好的预测力可是我根本就没法解释上来”，那么，没有人会愿意相信你。</p>
<p>具体一些，怎么样学习统计学习？<br>先学好基本的概率学。如果大学里的还给老师了（跟我一样），那么可以从MIT的概率论教材【1】入手。从第1章到第9章看完并做完所有的习题。（p.s.面试Twitter的时候被问到一个拿球后验概率的问题，从这本书上抓来的）。<br>了解基本的统计检验及它们的假设，什么时候可以用到它们。<br>快速了解统计学习有哪些术语，用来做什么目的，读这本【5】。<br>学习基本的统计思想。有frequentist的统计，也有bayesian的统计。前者的代表作有【2】，后者看【3】。前者是统计学习的圣书，偏frequentist，后者是pattern recognition的圣书，几乎从纯bayesian的角度来讲。注意，【2】有免费版，作者把它全放在了网上。而且有一个简易版，如果感觉力不从心直接看【2】，那么可以先从它的简易版开始看。简易版【4】是作者在coursera上开课用的大众教材，简单不少（不过仍然有很多闪光点，通俗易懂）。对于【3】，一开始很难直接啃下来，但是啃下来会受益匪浅。<br>注意，以上的书搜一下几乎全可以在网上搜到别人传的pdf。有条件的同学可以买一下纸制版来读，体验更好并且可以支持一下作者。所有的书我都买了纸制版，但是我知道在国内要买本书有多不方便（以及原版书多贵）。</p>
<p>读完以上的书是个长期过程。但是大概读了一遍之后，我个人觉得是非常值得的。如果你只是知道怎么用一些软件包，那么你一定成不了一个合格的data scientist。因为只要问题稍加变化，你就不知道怎么解决了。</p>
<p>如果你感觉自己是一个二吊子数据科学家（我也是）那么问一下下面几个问题，如果有2个答不上来，那么你就跟我一样，真的还是二吊子而已，继续学习吧。<br>为什么在神经网络里面feature需要standardize而不是直接扔进去<br>对Random Forest需要做Cross-Validatation来避免overfitting吗？<br>用naive-bayesian来做bagging，是不是一个不好的选择？为什么？<br>在用ensembe方法的时候，特别是Gradient Boosting Tree的时候，我需要把树的结构变得更复杂（high variance, low bias)还是更简单（low variance, high bias)呢？为什么？<br>如果你刚开始入门，没有关系，回答不出来这些问题很正常。如果你是一个二吊子，体会一下，为什么你跟一流的data scientist还有些差距——因为你不了解每个算法是怎么工作，当你想要把你的问题用那个算法解决的时候，面对无数的细节，你就无从下手了。</p>
<p>说个题外话，我很欣赏一个叫Jiro的寿司店，它的店长在（东京？）一个最不起眼的地铁站开了一家全世界最贵的餐馆，预订要提前3个月。怎么做到的？70年如一日练习如何做寿司。70年！除了丧娶之外的假期，店长每天必到，8个小时工作以外继续练习寿司做法。</p>
<p>其实学数据科学也一样，沉下心来，练习匠艺。</p>
<p>3）学习数据处理<br>这一步不必独立于2）来进行。显然，你在读这些书的时候会开始碰到各种算法，而且这里的书里也会提到各种数据。但是这个年代最不值钱的就是数据了（拜托，为什么还要用80年代的“加州房价数据”？），值钱的是数据分析过后提供给决策的价值。那么与其纠结在这么悲剧的80年代数据集上，为什么不自己搜集一些呢？</p>
<p>开始写一个小程序，用API爬下Twitter上随机的tweets（或者weibo吧。。。）<br>对这些tweets的text进行分词，处理噪音（比如广告）<br>用一些现成的label作为label，比如tweet里会有这条tweet被转发了几次<br>尝试写一个算法，来预测tweet会被转发几次<br>在未见的数据集上进行测试<br>如上的过程不是一日之功，尤其刚刚开始入门的时候。慢慢来，耐心大于进度。</p>
<p>4）变成全能工程师（full stack engineer）<br>在公司环境下，作为一个新入职的新手，你不可能有优待让你在需要写一个数据可视化的时候，找到一个同事来给你做。需要写把数据存到数据库的时候，找另一个同事来给你做。</p>
<p>况且即使你有这个条件，这样频繁切换上下文会浪费更多时间。比如你让同事早上给你塞一下数据到数据库，但是下午他才给你做好。或者你需要很长时间给他解释，逻辑是什么，存的方式是什么。</p>
<p>最好的变法，是把你自己武装成一个全能工作师。你不需要成为各方面的专家，但是你一定需要各方面都了解一点，查一下文档可以上手就用。</p>
<p>会使用NoSQL。尤其是MongoDB<br>学会基本的visualization，会用基础的html和javascript，知道d3【6】这个可视化库，以及highchart【7】<br>学习基本的算法和算法分析，知道如何分析算法复杂度。平均复杂度，最坏复杂度。每次写完一个程序，自己预计需要的时间（用算法分析来预测）。推荐普林斯顿的算法课【8】（注意，可以从算法1开始，它有两个版本）<br>写一个基础的服务器，用flask【9】的基本模板写一个可以让你做可视化分析的backbone。<br>学习使用一个顺手的IDE，VIM， pycharm都可以。</p>
<p>4）读，读，读！<br>除了闭门造车，你还需要知道其它数据科学家在做些啥。涌现的各种新的技术，新的想法和新的人，你都需要跟他们交流，扩大知识面，以便更好应对新的工作挑战。</p>
<p>通常，非常厉害的数据科学家都会把自己的blog放到网上供大家参观膜拜。我推荐一些我常看的。另外，学术圈里也有很多厉害的数据科学家，不必怕看论文，看了几篇之后，你就会觉得：哈！我也能想到这个！</p>
<p>读blog的一个好处是，如果你跟他们交流甚欢，甚至于你可以从他们那里要一个实习来做！</p>
<p>betaworks首席数据科学家，Gilad Lotan的博客，我从他这里要的intern :D Gilad Lotan<br>Ed Chi，六年本科硕士博士毕业的神人，google data science <a href="http://edchi.blogspot.com/" target="_blank" rel="noopener">http://edchi.blogspot.com/</a><br>Hilary Mason，bitly首席科学家，纽约地区人尽皆知的数据科学家：hilarymason.com</p>
<p>在它们这里看够了之后，你会发现还有很多值得看的blog（他们会在文章里面引用其它文章的内容），这样滚雪球似的，你可以有够多的东西早上上班的路上读了：）</p>
<p>5）要不要上个研究生课程？<br>先说我上的网络课程：<br>Coursera.org<br><a href="https://www.coursera.org/course/machlearning" target="_blank" rel="noopener">https://www.coursera.org/course/machlearning</a><br>前者就不说了，人人都知道。后者我则更喜欢，因为教得更广阔，上课的教授也是世界一流的机器学习学者，而且经常会有一些很妙的点出来，促进思考。</p>
<p>对于是不是非要去上个研究生（尤其要不要到美国上），我觉得不是特别有必要。如果你收到了几个著名大学数据科学方向的录取，那开开心心地来，你会学到不少东西。但是如果没有的话，也不必纠结。我曾有幸上过或者旁听过美国这里一些顶级名校的课程，我感觉它的作用仍然是把你领进门，以及给你一个能跟世界上最聪明的人一个交流机会（我指那些教授）。除此之外，修行都是回家在寝室进行的。然而现在世界上最好的课程都摆在你的面前，为什么还要舍近求远呢。</p>
<p>总结一下吧<br>我很幸运地跟一些最好的数据科学家交流共事过，从他们的经历看和做事风格来看，真正的共性是</p>
<p>他们都很聪明——你也可以<br>他们都很喜欢自己做的东西——如果你不喜欢应该也不会看这个问题<br>他们都很能静下心来学东西——如果足够努力你也可以</p>
<p>【1】Introduction to Probability and Statistics<br>【2】Hastie, Trevor, et al. The elements of statistical learning. Vol. 2. No. 1. New York: Springer, 2009. 免费版<br>【3】Bishop, Christopher M. Pattern recognition and machine learning. Vol. 1. New York: springer, 2006.<br>【4】Introduction to Statistical Learning 免费版<br>【5】Wasserman, Larry. All of statistics: a concise course in statistical inference. Springer, 2004.<br>【6】<a href="http://d3js.org/" target="_blank" rel="noopener">http://d3js.org/</a><br>【7】<a href="http://www.highcharts.com/" target="_blank" rel="noopener">http://www.highcharts.com/</a><br>【8】Coursera.org<br>【9】<a href="http://flask.pocoo.org/" target="_blank" rel="noopener">http://flask.pocoo.org/</a></p>
<h1 id="2、Han-Hsiao"><a href="#2、Han-Hsiao" class="headerlink" title="2、Han Hsiao"></a>2、<a href="https://www.zhihu.com/people/hanhsiao" target="_blank" rel="noopener">Han Hsiao</a></h1><p><a href="https://www.zhihu.com/people/hanhsiao#hilightbadge" target="_blank" rel="noopener">数据挖掘、数据分析话题优秀回答者</a>一颗透明的心灵…</p>
<p>收录于 编辑推荐</p>
<p>•<a href="https://www.zhihu.com/question/21592677#" target="_blank" rel="noopener">2017 人赞同</a></p>
<p><img src="https://pic4.zhimg.com/25d0cdcafeee8e2b332910b6aec61f27_200x112.jpg" alt><br>-版本更新，2014年5月14日更新一些内容。-如果展开讲，这个问题可以写一篇综述了。最近刚好有空，打算认真写写。 仅仅在几年前，数据科学家还不是一个正式确定的职业，然而一眨眼的工夫，这个职业就已经被誉为“今后十年IT行业最重要的人才”了。 <strong>一、数据…</strong></p>
<p><a href="https://www.zhihu.com/question/21592677/answer/24559554" target="_blank" rel="noopener">显示全部</a></p>
<p>-</p>
<p>版本更新，2014年5月14日更新一些内容。</p>
<p>-</p>
<p>如果展开讲，这个问题可以写一篇综述了。最近刚好有空，打算认真写写。<br>仅仅在几年前，数据科学家还不是一个正式确定的职业，然而一眨眼的工夫，这个职业就已经被誉为“今后十年IT行业最重要的人才”了。  </p>
<p><strong>一、数据科学家的起源</strong>  </p>
<p>“数据科学”（DataScience）起初叫”datalogy “。最初在1966年由<strong>Peter Naur</strong>提出，用来代替”计算机科学”（丹麦人，2005年图灵奖得主，丹麦的计算机学会的正式名称就叫Danish Society of Datalogy，他是这个学会的第一任主席。Algol 60是许多后来的程序设计语言，包括今天那些必不可少的软件工程工具的原型。图灵奖被认为是“计算科学界的诺贝尔奖”。）  </p>
<p>1996年，International Federation of Classification Societies (IFCS)国际会议召开。<strong>数据科学</strong>一词首次出现在会议（Data Science, classification, and related methods）标题里。  </p>
<p>1998年，C.F. Jeff Wu做出题为“统计学=数据科学吗？ 的演讲，建议统计改名数据的科学统计数据的科学家。 （吴教授于1987年获得COPSS奖，2000年在台湾被选为中研院院士，2004年作为第一位统计学者当选美国国家工程院院士，也是第一位华人统计学者获此殊荣。）  </p>
<p>2002年，国际科学理事会：数据委员会科学和技术（CODATA）开始出版数据科学杂志。  </p>
<p>2003年，美国哥伦比亚大学开始发布数据科学杂志，主要内容涵盖统计方法和定量研究中的应用。   </p>
<p>2005年，美国国家科学委员会发表了”Long-lived Digital Data Collections: Enabling Research and Education in the 21st Century”，其中给出数据科学家的定义：</p>
<blockquote>
<p>“the information and computer scientists, database and software and programmers, disciplinary experts, curators and expert annotators, librarians, archivists, and others, who are crucial to the successful management of a digital data collection”</p>
</blockquote>
<p>信息科学与计算机科学家，数据库和软件工程师，领域专家，策展人和标注专家，图书管理员，档案员等数字数据管理收集者都以可成为数据科学家。它们主要任务是：”进行富有创造性的查询和分析。”<br>2012年，O’Reilly媒体的创始人 <a href="https://link.zhihu.com/?target=http%3A//www.forbes.com/pictures/lmm45emkh/tim-oreilly-is-the-founder-of-oreily-media/" target="_blank" rel="noopener">Tim O’Reilly __</a>列出了世界上排名前7位的数据科学家。  </p>
<ul>
<li>Larry Page，谷歌CEO。  </li>
<li>Jeff Hammerbacher，Cloudera的首席科学家和DJ Patil，Greylock风险投资公司企业家。  </li>
<li>Sebastian Thrun，斯坦福大学教授和Peter Norvig，谷歌数据科学家。  </li>
<li>Elizabeth Warren，Massachusetts州美国参议院候选人。  </li>
<li>Todd Park，人类健康服务部门首席技术官。  </li>
<li>Sandy Pentland，麻省理工学院教授。  </li>
<li>Hod Lipson and Michael Schmidt，康奈尔大学计算机科学家。<br>具体有时间再补充，感兴趣的朋友可以<a href="https://link.zhihu.com/?target=http%3A//scholar.google.com/" target="_blank" rel="noopener">Google Scholar__</a>一下他们的文献。  </li>
</ul>
<p>关于数据科学家的更多讨论：<br>你能列出十个著名的女性数据科学家吗？<a href="https://link.zhihu.com/?target=http%3A//www.datasciencecentral.com/forum/topics/can-you-name-10-famous-data-scientist-women" target="_blank" rel="noopener">Can you name 10 famous data scientist women?__</a><br>谁是最富有的数据科学家？<a href="https://link.zhihu.com/?target=http%3A//www.datasciencecentral.com/forum/topics/who-are-the-wealthiest-data-scientists" target="_blank" rel="noopener">Who are the wealthiest data scientists?__</a><br>请列出对大数据最具有影响力的20个人？<a href="https://link.zhihu.com/?target=http%3A//www.analyticbridge.com/profiles/blogs/who-are-the-top-20-influencers-in-big-data-forbes" target="_blank" rel="noopener">Who Are The Top 20 Influencers in Big Data?__</a>  </p>
<p><strong>二、数据科学家的定义</strong></p>
<p>数据科学(Data Science)是从数据中提取知识的研究，关键是科学。数据科学集成了多种领域的不同元素，包括信号处理，数学，概率模型技术和理论，机器学习，计算机编程，统计学，数据工程，模式识别和学习，可视化，不确定性建模，数据仓库，以及从数据中析取规律和产品的高性能计算。数据科学并不局限于大数据，但是数据量的扩大诚然使得数据科学的地位越发重要。  </p>
<p>数据科学的从业者被称为数据科学家。数据科学家通过精深的专业知识在某些科学学科解决复杂的数据问题。不远的将来，数据科学家们需要精通一门、两门甚至多门学科，同时使用<strong>数学，统计学和计算机科学</strong>的生产要素展开工作。所以数据科学家就如同一个<strong>team。</strong>  </p>
<p>曾经投资过Facebook，LinkedIn的格雷洛克风险投资公司把数据科学家描述成<strong>“能够管理和洞察数据的人”</strong>。在IBM的网站上，数据科学家的角色被形容成<strong>“一半分析师，一半艺术家”</strong>。他们代表了商业或数据分析这个角色的一个进化。</p>
<blockquote>
<p>for example – a data scientist will most likely explore and examine data from multiple disparate sources. The data scientist will sift through all incoming data with the goal of discovering a previously hidden insight, which in turn can provide a competitive advantage or address a pressing business problem. A data scientist does not simply collect and report on data, but also looks at it from many angles, determines what it means, then recommends ways to apply the data.  </p>
</blockquote>
<ul>
<li><p><strong>Anjul Bhambhri，IBM的大数据产品副总裁。</strong>  数据科学家是一个好奇的，不断质疑现有假设，能盯着数据就能指出趋势的人。这就好像在文艺复兴时期，一个非常想为组织带来挑战并从挑战中学习的人一样。  </p>
</li>
<li><p><strong>Jonathan Goldman，LinkedIn数据科学家。</strong>  </p>
</li>
</ul>
<p>2006年的6月份进入商务社交网站LinkedIn，当时LinkedIn只有不到800万用户。高德曼在之后的研究中创造出新的模型，利用数据预测注册用户的人际网络。具体来讲，他以用户在LinkedIn的个人资料，来找到和这些信息最匹配的三个人，并以推荐的形式显示在用户的使用页面上——这也就是我们熟悉的”你可能认识的人（People you may know）”。这个小小的功能让LinkedIn增加了数百万的新的页面点击量(数据挖掘的应用典型之一推荐系统）。</p>
<ul>
<li><strong>John Rauser, 亚马逊大数据科学家。</strong>  </li>
</ul>
<p>数据科学家是工程师和统计学家的结合体。从事这个职位要求极强的驾驭和管理海量数据的能力；同时也需要有像统计学家一样萃取、分析数据价值的本事，二者缺一不可。  </p>
<ul>
<li><strong>Steven Hillion, EMC Greenplum数据分析副总裁。</strong>  </li>
</ul>
<p>数据科学家是具有极强分析能力和对统计和数学有很深研究的数据工程师。他们能从商业信息等其他复杂且海量的数据库中洞察新趋势。  </p>
<ul>
<li><strong>Monica Rogati, LinkedIn资深数据科学家。</strong>  </li>
</ul>
<p>所有的科学家都是数据学家，因为他们整天都在和海量数据打交道。在我眼中，数据学家是一半黑客加一半分析师。他们通过数据建立看待事物的新维度。数据学家必须能够用一只眼睛发现新世界，用另一只眼睛质疑自己的发现。  </p>
<ul>
<li><strong>Daniel Tunkelang，LinkedIn首席数据科学家。</strong>  </li>
</ul>
<p>我是bitly 首席科学家Hilary Mason的忠实崇拜者。关于这个新概念的定义我也想引用她的说法：数据科学家是能够利用各种信息获取方式、统计学原理和机器的学习能力对其掌握的数据进行收集、去噪、分析并解读的角色。  </p>
<ul>
<li><strong>Michael Rappa，北卡罗莱纳州立大学教授。</strong>  </li>
</ul>
<p>尽管数据科学家这个名称最近才开始在硅谷出现，但这个新职业的产生却是基于人类上百年对数据分析的不断积累和衍生。和数据科学家最接近的职业应该是统计学家，只不过统计学家是一个成熟的定义且服务领域基本局限于政府和学界。数据科学家把统计学的精髓带到了更多的行业和领域。  </p>
<ul>
<li><strong>林仕鼎，百度大数据首席架构师。</strong></li>
</ul>
<p>如果从广义的角度讲，从事数据处理、加工、分析等工作的数据科学家、数据架构师和数据工程师都可以笼统地称为数据科学家；而从狭义的角度讲，那些具有数据分析能力，精通各类算法，直接处理数据的人员才可以称为数据科学家。    </p>
<p>最后引用Thomas H. Davenport（埃森哲战略变革研究院主任） 和 D.J. Patil（美国科学促进会科学与技术政策研究员，为美国国防部服务）的话来总结数据科学家需要具备的能力：  </p>
<ul>
<li>数据科学家倾向于用探索数据的方式来看待周围的世界。<strong>（好奇心）</strong>  </li>
<li>把大量散乱的数据变成结构化的可供分析的数据，还要找出丰富的数据源，整合其他可能不完整的数据源，并清理成结果数据集。<strong>（问题分体整理能力）</strong>  </li>
<li>新的竞争环境中，挑战不断地变化，新数据不断地流入，数据科学家需要帮助决策者穿梭于各种分析，从临时数据分析到持续的数据交互分析。<strong>（快速学习能力）</strong>  </li>
<li>数据科学家会遇到技术瓶颈，但他们能够找到新颖的解决方案。<strong>（问题转化能力）</strong>  </li>
<li>当他们有所发现，便交流他们的发现，建议新的业务方向。<strong>（业务精通**</strong>）**  </li>
<li>他们很有创造力的展示视觉化的信息，也让找到的模式清晰而有说服力。<strong>（表现沟通能力）</strong>  </li>
<li>他们会把蕴含在数据中的规律建议给Boss，从而影响产品，流程和决策。<strong>（决策力）</strong>    </li>
</ul>
<p><strong>三、数据科学家所需硬件技能</strong></p>
<p>《数据之美 Beautiful Data》的作者Jeff Hammerbacher在书中提到，对于 Facebook 的数据科学家“我们发现传统的头衔如商业分析师、统计学家、工程师和研究科学家都不能确切地定义我们团队的角色。该角色的工作是变化多样的：  </p>
<p>在任意给定的一天，团队的一个成员可以用 Python 实现一个多阶段的处理管道流、设计假设检验、用工具R在数据样本上执行回归测试、在 Hadoop 上为数据密集型产品或服务设计和实现算法，或者把我们分析的结果以清晰简洁的方式展示给企业的其他成员。为了掌握完成这多方面任务需要的技术，我们创造了<strong>数据科学家</strong>这个角色。”  </p>
<p><strong>(1) 计算机科学</strong></p>
<p>一般来说，数据科学家大多要求具备编程、计算机科学相关的专业背景。简单来说，就是对处理大数据所必需的Hadoop、Mahout等大规模并行处理技术与机器学习相关的技能。</p>
<ul>
<li><a href="http://www.zhihu.com/question/19795366/answer/24524910" target="_blank" rel="noopener">零基础学习 Hadoop 该如何下手？</a>  </li>
<li><a href="http://www.zhihu.com/question/20176089" target="_blank" rel="noopener">想从事大数据、海量数据处理相关的工作，如何自学打基础？</a></li>
</ul>
<p><strong>(2) 数学、统计、数据挖掘等</strong></p>
<p>除了数学、统计方面的素养之外，还需要具备使用SPSS、SAS等主流统计分析软件的技能。其中，面向统计分析的开源编程语言及其运行环境“R”最近备受瞩目。R的强项不仅在于其包含了丰富的统计分析库，而且具备将结果进行可视化的高品质图表生成功能，并可以通过简单的命令来运行。此外，它还具备称为CRAN（The Comprehensive R Archive Network）的包扩展机制，通过导入扩展包就可以使用标准状态下所不支持的函数和数据集。R语言虽然功能强大，但是学习曲线较为陡峭，个人建议从python入手，拥有丰富的statistical libraries，<a href="https://link.zhihu.com/?target=http%3A//www.numpy.org/" target="_blank" rel="noopener">NumPy __</a>，<a href="https://link.zhihu.com/?target=http%3A//www.scipy.org/" target="_blank" rel="noopener">SciPy.org __</a>，<a href="https://link.zhihu.com/?target=http%3A//pandas.pydata.org/" target="_blank" rel="noopener">Python Data Analysis Library__</a>，<a href="https://link.zhihu.com/?target=http%3A//matplotlib.org/" target="_blank" rel="noopener">matplotlib: python plotting__</a>。</p>
<ul>
<li><a href="http://www.zhihu.com/question/20751219/answer/24345252" target="_blank" rel="noopener">如何系统地学习数据挖掘？</a>  </li>
<li><a href="http://www.zhihu.com/question/19640095/answer/24240031" target="_blank" rel="noopener">做数据分析不得不看的书有哪些？</a>  </li>
<li><a href="http://www.zhihu.com/question/21577951/answer/23797202" target="_blank" rel="noopener">怎么学习用R语言进行数据挖掘？</a>  </li>
</ul>
<p><strong>(3) 数据可视化（Visualization）</strong></p>
<p>信息的质量很大程度上依赖于其表达方式。对数字罗列所组成的数据中所包含的意义进行分析，开发Web原型，使用外部API将图表、地图、Dashboard等其他服务统一起来，从而使分析结果可视化，这是对于数据科学家来说十分重要的技能之一。</p>
<ul>
<li><a href="http://www.zhihu.com/question/19929609?rf=19660128" target="_blank" rel="noopener">有哪些值得推荐的数据可视化工具？</a>  </li>
</ul>
<p><strong>(4) 跨界为王</strong></p>
<p>麦肯锡认为未来需要更多的“translators”，能够在IT技术，数据分析和商业决策之间架起一座桥梁的复合型人才是最被人需要的。”translators“可以驱动整个数据分析战略的设计和执行，同时连接的IT ，数据分析和业务部门的团队。如果缺少“translators“，即使拥有高端的数据分析策略和工具方法也是于事无补的。</p>
<blockquote>
<p> The data strategists’combination of IT knowledge and experience making business decisions makes them well suited to define the data requirements for high-value business analytics. Data scientists combine deep analytics expertise with IT know-how to develop sophisticated models and algorithms. Analytic consultants combine practical business knowledge with analytics experience to zero in on high-impact opportunities for analytics.</p>
</blockquote>
<p>天才的”translators“非常罕见。但是大家可以各敬其职（三个臭皮匠臭死诸葛亮），数据战略家可以使用IT知识和经验来制定商业决策，数据科学家可以结合对专业知识的深入理解使用IT技术开发复杂的模型和算法，分析顾问可以结合实际的业务知识与分析经验聚焦下一个行业爆点。推荐关注：<a href="https://link.zhihu.com/?target=https%3A//www.facebook.com/data" target="_blank" rel="noopener">https://www.facebook.com/data__</a>  </p>
<p><strong>四、数据科学家的培养</strong></p>
<p>位于伊利诺伊州芝加哥郊外埃文斯顿市的美国名牌私立大学——西北大学（Northwestern University），就是其中之一。西北大学决定从2012年9月起在其工程学院下成立一个主攻大数据分析课程的分析学研究生院，并开始了招生工作。西北大学对于成立该研究生院是这样解释的：“虽然只要具备一些Hadoop和Cassandra的基本知识就很容易找到工作，但拥有深入知识的人才却是十分缺乏的。”</p>
<p>此外，该研究生院的课程计划以“传授和指导将业务引向成功的技能，培养能够领导项目团队的优秀分析师”为目标，授课内容在数学、统计学的基础上，融合了尖端计算机工程学和数据分析。课程预计将涵盖分析领域中主要的三种数据分析方法：预测分析、描述分析（商业智能和数据挖掘）和规范分析（优化和模拟），具体内容如下。</p>
<p><strong>(1) 秋学期</strong><br>* 数据挖掘相关的统计方法（多元Logistic回归分析、非线性回归分析、判别分析等）<br>* 定量方法（时间轴分析、概率模型、优化）<br>* 决策分析（多目的决策分析、决策树、影响图、敏感性分析）<br>* 树立竞争优势的分析（通过项目和成功案例学习基本的分析理念）</p>
<p><strong>(2) 冬学期</strong><br>*  数据库入门（数据模型、数据库设计）<br>*  预测分析（时间轴分析、主成分分析、非参数回归、统计流程控制）<br>*  数据管理（ETL（Extract、Transform、Load）、数据治理、管理责任、元数据）<br>*  优化与启发（整数计划法、非线性计划法、局部探索法、超启发（模拟退火、遗传算法））</p>
<p><strong>(3) 春学期</strong><br>*  大数据分析（非结构化数据概念的学习、MapReduce技术、大数据分析方法）<br>*  数据挖掘（聚类（k-means法、分割法）、关联性规则、因子分析、存活时间分析）<br>*  其他，以下任选两门（社交网络、文本分析、Web分析、财务分析、服务业中的分析、能源、健康医疗、供应链管理、综合营销沟通中的概率模型）</p>
<p><strong>(4) 秋学期</strong><br>*  风险分析与运营分析的计算机模拟<br>*  软件层面的分析学（组织层面的分析课题、IT与业务用户、变革管理、数据课题、结果的展现与传达方法）  </p>
<p><img src="https://pic4.zhimg.com/0d3bee73c313284a7fadd30493ff01c7_b.jpg" alt>（EMC的在线课程：<a href="https://link.zhihu.com/?target=https%3A//education.emc.com/guest/campaign/data_science.aspx" target="_blank" rel="noopener">Data Science and Big Data Analytics Training__</a>，收费T_T，大家可以了解下学习路径）  </p>
<p><strong>(5)分享一些免费的课程</strong><br>以下课程免费，讲师都是领域的专家，需要提前报名，请注意开班的时间。  </p>
<ul>
<li><p><a href="https://link.zhihu.com/?target=https%3A//www.coursera.org/course/introstats" target="_blank" rel="noopener">Coursera.org__</a>：统计学。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=https%3A//www.coursera.org/course/ml" target="_blank" rel="noopener">Coursera.org__</a>：机器学习。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=https%3A//www.coursera.org/course/compmethods" target="_blank" rel="noopener">Coursera.org__</a>：数据分析的计算方法。</p>
</li>
<li><p><a href="https://link.zhihu.com/?target=https%3A//www.coursera.org/course/bigdata" target="_blank" rel="noopener">Coursera.org__</a>：大数据。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=https%3A//www.coursera.org/course/datasci" target="_blank" rel="noopener">Coursera.org__</a>：数据科学导论。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=https%3A//www.coursera.org/course/dataanalysis" target="_blank" rel="noopener">Coursera.org__</a>：数据分析。  名校课程，需要一定的英语基础和计算机基础：  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=http%3A//ocw.mit.edu/courses/sloan-school-of-management/15-075j-statistical-thinking-and-data-analysis-fall-2011/index.htm" target="_blank" rel="noopener">Statistical Thinking and Data Analysis__</a>：麻省理工学院的统计思维与数据分析课。概率抽样，回归，常见分布等。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=http%3A//ocw.mit.edu/courses/sloan-school-of-management/15-062-data-mining-spring-2003/" target="_blank" rel="noopener">Data Mining | Sloan School of Management__</a>：麻省理工学院的数据挖掘课程，数据挖掘的知识以及机器学习算法。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=http%3A//had.co.nz/stat645/" target="_blank" rel="noopener">Rice University Data Visualization__</a>：莱斯大学的数据可视化，从统计学的角度分析信息可视化。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=http%3A//harvarddatascience.com/2013/02/20/introduction-to-computing-modeling-and-visualization-first-lectures-of-stat-221/" target="_blank" rel="noopener">Harvard University Introduction to Computing, Modeling, and Visualization__</a>: 哈佛大学，如何在数学计算与数据交互可视化之间架起桥梁。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=http%3A//vis.berkeley.edu/courses/cs294-10-sp11/wiki/index.php/CS294-10_Visualization" target="_blank" rel="noopener">UC Berkeley Visualization__</a>：加州大学伯克利分校数据可视化。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=http%3A//dataiap.github.io/dataiap/" target="_blank" rel="noopener">Data Literacy Course – IAP__</a>：两个MIT的数据研究生，如何分析处理可视化数据。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=http%3A//columbia-applied-data-science.github.io/" target="_blank" rel="noopener">Columbia University Applied Data Science__</a>：哥伦比亚大学，数据分析方法。需要一定的数据基础。  </p>
</li>
<li><p><a href="https://link.zhihu.com/?target=http%3A//alex.smola.org/teaching/berkeley2012/systems.html" target="_blank" rel="noopener">SML: Systems__</a>：加州大学伯克利分校，可扩展的机器学习方法。从硬件系统，并行化范式到MapReduce+Hadoop+BigTable，非常全面系统。  </p>
</li>
</ul>
<p><strong>五、数据科学家的前景</strong></p>
<p><img src="https://pic1.zhimg.com/5c5f759508c5e30954e8def2d79195c4_b.jpg" alt>（<a href="https://link.zhihu.com/?target=http%3A//www.emc.com/index.htm" target="_blank" rel="noopener">EMC - Leading Cloud Computing, Big Data, and Trusted IT Solutions__</a>，关于数据科学家的研究）<br><img src="https://pic4.zhimg.com/25d0cdcafeee8e2b332910b6aec61f27_b.jpg" alt>Like the physical universe, the digital universe is large – by 2020 containing nearly as many digital bits as there are stars in the universe. It is doubling in size every two years, and by 2020 the digital universe – the data we create and copy annually – will reach 44 zettabytes, or 44 trillion gigabytes.</p>
<p>EMC预测，按照目前的情况数字宇宙以每两年一番的速度倍增，在2020年将到达44ZB（1ZB=1.1805916207174113e+21B）。EMC做出了5点比较大胆的预测。</p>
<ul>
<li>In 2013, while about 40% of the information in the digital universe required some type of data protection, less than 20% of the digital universe actually had these protections.  </li>
<li>Data from embedded systems, the signals from which are a major component of the Internet of Things, will grow from 2% of the digital universe in 2013 to 10% in 2020.  </li>
<li>In 2013, less than 20% of the data in the digital universe is “touched” by the cloud, either stored, perhaps temporarily, or processed in some way. By 2020, that percentage will double to 40%.  </li>
<li>Most of the digital universe is transient – unsaved Netflix or Hulu movie streams, or Xbox One gamer interactions, temporary routing information in networks, sensor signals discarded when no alarms go off, etc. – and it is getting more so. This is a good thing, because the world’s amount of available storage capacity (i.e., unused bytes) across all media types is growing slower than the digital universe. In 2013, the available storage capacity could hold just 33% of the digital universe. By 2020, it will be able to store less than 15%.  </li>
<li>In 2014, the digital universe will equal 1.7 megabytes a minute for every person on Earth.<br><img src="https://pic4.zhimg.com/de762990c1a55f135e5a99efc271f203_b.jpg" alt>Between 2013 and 2020 the division of the digital universe between mature and emerging markets (e.g., China) will switch – from 60% accounted for by mature markets to 60% of the data in the digital universe coming from emerging markets.</li>
</ul>
<p>EMC预测在2017年左右新兴的市场将超越成熟市场，东亚国家是最具潜力的引爆点。（大家是不是有点小激动，前景一片光明）  </p>
<p><strong>六、结束语</strong>  </p>
<p>推荐网站：  </p>
<p><a href="https://link.zhihu.com/?target=http%3A//www.datasciencecentral.com/" target="_blank" rel="noopener">Data Science Central__</a> （数据科学中心，大牛云集，资源丰富，讨论者热情，各种课程）  </p>
<p><strong>祝每一个DMer都挖掘到金矿和快乐：）</strong>  </p>
<p>参考文献：  </p>
<p><em>[1].<a href="https://link.zhihu.com/?target=http%3A//www.forbes.com/sites/gilpress/2012/09/27/data-scientists-the-definition-of-sexy/" target="_blank" rel="noopener">Data Scientists: The Definition of Sexy__</a></em></p>
<p><em>[2].《大数据的冲击》. 城田真琴.  野村综合研究所创新开发部高级研究员、IT分析师，日本政府“智能云计算研究会”智囊团成员</em></p>
<p><em>[3].麦肯锡. <a href="https://link.zhihu.com/?target=http%3A//www.mckinsey.com/insights/business_technology/big_data_the_next_frontier_for_innovation" target="_blank" rel="noopener">Big data: The next frontier for innovation, competition, and productivity__</a></em></p>
<p><em>[4].EMC. <a href="https://link.zhihu.com/?target=http%3A//china.emc.com/leadership/digital-universe/2014iview/executive-summary.htm" target="_blank" rel="noopener">Executive Summary: Data Growth, Business Opportunities, and the IT Imperatives__</a></em></p>
<p><em>[5].<a href="https://link.zhihu.com/?target=http%3A//www.forbes.com/sites/danwoods/2011/10/11/emc-greenplums-steven-hillion-on-what-is-a-data-scientist/" target="_blank" rel="noopener">EMC Greenplum’s Steven Hillion on What Is a Data Scientist?__</a></em></p>
<p><em>[6].<a href="https://link.zhihu.com/?target=http%3A//www.forbes.com/sites/danwoods/2011/11/27/linkedins-monica-rogati-on-what-is-a-data-scientist/" target="_blank" rel="noopener">LinkedIn’s Monica Rogati On “What Is A Data Scientist?”__</a></em>  </p>
<p><em>[7].<a href="https://link.zhihu.com/?target=http%3A//www-01.ibm.com/software/data/infosphere/data-scientist/" target="_blank" rel="noopener">IBM  - What is a Data Scientist?__</a></em></p>
<p><em>[8].</em><a href="https://link.zhihu.com/?target=http%3A//cacm.acm.org/magazines/2013/12/169933-data-science-and-prediction/fulltext" target="_blank" rel="noopener">Data Science and Prediction__</a>  </p>
<p><em>[9].<a href="https://link.zhihu.com/?target=http%3A//simplystatistics.org/2013/12/12/the-key-word-in-data-science-is-not-data-it-is-science/" target="_blank" rel="noopener">The key word in “Data Science” is not Data, it is Science__</a></em></p>
<p><em>[10].<a href="https://link.zhihu.com/?target=https%3A//www.quora.com/Data-Science/How-do-I-become-a-data-scientist" target="_blank" rel="noopener">Data Science: How do I become a data scientist?__</a></em></p>
<p><em>[11].<a href="https://link.zhihu.com/?target=http%3A//www.zipfianacademy.com/blog/post/46864003608/a-practical-intro-to-data-science" target="_blank" rel="noopener">A Practical Intro to Data Science__</a></em></p>
<p><em>[12].<a href="https://link.zhihu.com/?target=http%3A//content.businessvalue.com.cn/post/6829.html" target="_blank" rel="noopener">解码数据科学家__</a></em></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何通过自学，成为数据挖掘“高手”？]]></title>
      <url>http://www.wulai.me/2016/10/26/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E8%87%AA%E5%AD%A6%EF%BC%8C%E6%88%90%E4%B8%BA%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E2%80%9C%E9%AB%98%E6%89%8B%E2%80%9D%EF%BC%9F/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1、基础篇："><a href="#1、基础篇：" class="headerlink" title="1、基础篇："></a>1、基础篇：</h2><ol>
<li><p>读书《Introduction to Data Mining》，这本书很浅显易懂，没有复杂高深的公式，很合适入门的人。另外可以用这本书做参考《Data Mining : Concepts and Techniques》。第二本比较厚，也多了一些数据仓库方面的知识。如果对算法比较喜欢，可以再阅读《Introduction to Machine Learning》。</p>
</li>
<li><p>实现经典算法。有几个部分：<br>a. 关联规则挖掘 (Apriori, FPTree, etc.)<br>b. 分类 (C4.5, KNN, Logistic Regression, SVM, etc.)<br>c. 聚类 (Kmeans, DBScan, Spectral Clustering, etc.)<br>d. 降维 (PCA, LDA, etc.)<br>e. 推荐系统 (基于内容的推荐，协同过滤，如矩阵分解等)<br>然后在公开数据集上测试，看实现的效果。可以在下面的网站找到大量的公开数据集：<a href="http://archive.ics.uci.edu/ml/" target="_blank" rel="noopener">http://archive.ics.uci.edu/ml/</a></p>
</li>
<li><p>熟悉几个开源的工具: Weka (用于上手); LibSVM, scikit-learn, Shogun</p>
</li>
<li><p>到 <a href="https://www.kaggle.com/" target="_blank" rel="noopener">https://www.kaggle.com/</a> 上参加几个101的比赛，学会如何将一个问题抽象成模型，并从原始数据中构建有效的特征 (Feature Engineering).</p>
</li>
</ol>
<p>到这一步的话基本几个国内的大公司都会给你面试的机会。</p>
<h2 id="2、进阶篇："><a href="#2、进阶篇：" class="headerlink" title="2、进阶篇："></a>2、进阶篇：</h2><ol>
<li><p>读书，下面几部都是大部头，但学完进步非常大。<br>a.《Pattern Recognition and Machine Learning》<br>b.《The Elements of Statistical Learning》<br>c.《Machine Learning: A Probabilistic Perspective》<br>第一本比较偏Bayesian；第二本比较偏Frequentist；第三本在两者之间，但我觉得跟第一本差不多，不过加了不少新内容。当然除了这几本大而全的，还有很多介绍不同领域的书，例如《Boosting Foundations and Algorithms》，《Probabilistic Graphical Models Principles and Techniques》；以及理论一些的《Foundations of Machine Learning》，《Optimization for Machine Learning》等等。这些书的课后习题也非常有用，做了才会在自己写Paper的时候推公式。</p>
</li>
<li><p>读论文。包括几个相关会议：KDD，ICML，NIPS，IJCAI，AAAI，WWW，SIGIR，ICDM；以及几个相关的期刊：TKDD，TKDE，JMLR，PAMI等。跟踪新技术跟新的热点问题。当然，如果做相关research，这一步是必须的。例如我们组的风格就是上半年读Paper，暑假找问题，秋天做实验，春节左右写/投论文。</p>
</li>
<li><p>跟踪热点问题。例如最近几年的Recommendation System，Social Network，Behavior Targeting等等，很多公司的业务都会涉及这些方面。以及一些热点技术，例如现在很火的Deep Learning。</p>
</li>
<li><p>学习大规模并行计算的技术，例如MapReduce、MPI，GPU Computing。基本每个大公司都会用到这些技术，因为现实的数据量非常大，基本都是在计算集群上实现的。</p>
</li>
<li><p>参加实际的数据挖掘的竞赛，例如KDDCUP，或 <a href="https://www.kaggle.com/" target="_blank" rel="noopener">https://www.kaggle.com/</a> 上面的竞赛。这个过程会训练你如何在一个短的时间内解决一个实际的问题，并熟悉整个数据挖掘项目的全过程。</p>
</li>
<li><p>参与一个开源项目，如上面提到的Shogun或scikit-learn还有Apache的Mahout，或为一些流行算法提供更加有效快速的实现，例如实现一个Map/Reduce平台下的SVM。这也是锻炼Coding的能力。</p>
</li>
</ol>
<p>到这一步国内的大公司基本是想哪去哪，而且待遇也不差；如果英语好，去US那边的公司难度也不大了。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL 主主复制 + LVS + Keepalived 实现 MySQL 高可用性]]></title>
      <url>http://www.wulai.me/2016/10/13/MySQL-%E4%B8%BB%E4%B8%BB%E5%A4%8D%E5%88%B6-LVS-Keepalived-%E5%AE%9E%E7%8E%B0-MySQL-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>MySQL复制能够保证数据的冗余的同时可以做读写分离来分担系统压力，如果是主主复制还可以很好的避免主节点的单点故障。但是MySQL主主复制存在一些问题无法满足我们的实际需要：未提供统一访问入口来实现负载均衡，如果其中master宕掉的话需要手动切换到另外一个master，而不能自动进行切换。</p>
<p>这篇文章下面要介绍如何通过LVS+Keepalived的方式来是实现MySQL的高可用性，同时解决以上问题。</p>
<h2 id="Keepalived和LVS介绍"><a href="#Keepalived和LVS介绍" class="headerlink" title="Keepalived和LVS介绍"></a>Keepalived和LVS介绍</h2><p>Keepalived是一个基于VRRP（虚拟路由冗余协议）可用来实现服务高可用性的软件方案，避免出现单点故障。Keepalived一般用来实现轻量级高可用性，且不需要共享存储，一般用于两个节点之间，常见有LVS+Keepalived、Nginx+Keepalived组合。</p>
<p>LVS(Linux Virtual Server)是一个高可用性虚拟的服务器集群系统。本项目在1998年5月由章文嵩博士成立，是中国国内最早出现的自由软件项目之一。</p>
<p>LVS主要用于多服务器的负载均衡，作用于网络层。LVS构建的服务器集群系统中，前端的负载均衡层被称为Director Server；后端提供服务的服务器组层被称为Real Server。通过下图可以大致了解LVS的基础架构。</p>
<img title="图片" alt="lvs结构" src="http://res.hillock.com.cn/wulai/images/mysql_lvs/lvs.jpg">

<p>LVS有三种工作模式，分别是DR（Direct Routing 直接路由）、TUN(Tunneling IP隧道）、NAT（Network Address Translation 网络地址转换）。其中TUN模式能够支持更多的Real Server，但需要所有服务器支持IP隧道协议；DR也可以支持相当的Real Server，但需要保证Director Server虚拟网卡与物理网卡在同一网段；NAT扩展性有限，无法支持更多的Real Server，因为所有的请求包和应答包都需要Director Server进行解析再生，影响效率。 同时，LVS负载均衡有10中调度算法，分别是rr、wrr、lc、wlc、lblc、lblcr、dh、sh、sed、nq</p>
<p>本文中将利用LVS实现MySQL的读写负载均衡，Keepalived避免节点出现单点故障。</p>
<h2 id="LVS-Keepalived配置"><a href="#LVS-Keepalived配置" class="headerlink" title="LVS+Keepalived配置"></a>LVS+Keepalived配置</h2><p>环境准备</p>
<blockquote>
<p>LVS1：192.168.1.2<br>LVS2：192.168.1.11<br>MySQL Server1：192.168.1.5<br>MySQL Server2：192.168.1.6<br>VIP：192.168.1.100<br>OS: CentOS 6.4</p>
</blockquote>
<h3 id="Keepalive安装"><a href="#Keepalive安装" class="headerlink" title="Keepalive安装"></a>Keepalive安装</h3><p>需要安装以下软件包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install -y kernel-devel openssl openssl-devel</span><br></pre></td></tr></table></figure>

<p>解压keepalived到/usr/local/并进入目录执行配置编译</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># ./configure --prefix=/usr/local/keepalived --with-kernel-dir=/usr/src/kernels/2.6.32-431.5.1.el6.x86_64/</span><br><span class="line">Keepalived configuration</span><br><span class="line">------------------------</span><br><span class="line">Keepalived version       : 1.2.13</span><br><span class="line">Compiler                 : gcc</span><br><span class="line">Compiler flags           : -g -O2</span><br><span class="line">Extra Lib                : -lssl -lcrypto -lcrypt</span><br><span class="line">Use IPVS Framework       : Yes</span><br><span class="line">IPVS sync daemon support : Yes</span><br><span class="line">IPVS use libnl           : No</span><br><span class="line">fwmark socket support    : Yes</span><br><span class="line">Use VRRP Framework       : Yes</span><br><span class="line">Use VRRP VMAC            : Yes</span><br><span class="line">SNMP support             : No</span><br><span class="line">SHA1 support             : No</span><br><span class="line">Use Debug flags          : No</span><br><span class="line"></span><br><span class="line"># make</span><br></pre></td></tr></table></figure>

<p>默认情况下keepalived启动时会去/etc/keepalived目录下找配置文件，将需要的配置文件拷贝到指定位置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># cp /usr/local/keepalived/etc/rc.d/init.d/keepalived /etc/rc.d/init.d/</span><br><span class="line"># cp /usr/local/keepalived/etc/sysconfig/keepalived /etc/sysconfig/</span><br><span class="line"># cp /usr/local/keepalived/etc/keepalived/keepalived.conf /etc/keepalived/</span><br><span class="line"># cp /usr/local/keepalived/sbin/keepalived /usr/sbin/</span><br><span class="line"># chkconfig mysqld on</span><br><span class="line"># chkconfig keepalived on</span><br></pre></td></tr></table></figure>

<h3 id="LVS安装"><a href="#LVS安装" class="headerlink" title="LVS安装"></a>LVS安装</h3><p>需要安装以下软件包</p>
<pre><code># yum install -y libnl* popt*</code></pre><p>查看是否加载lvs模块</p>
<pre><code># modprobe -l |grep ipvs</code></pre><p>解压安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ln -s /usr/src/kernels/2.6.32-431.5.1.el6.x86_64/ /usr/src/linux</span><br><span class="line"># tar -zxvf ipvsadm-1.26.tar.gz</span><br><span class="line"># make</span><br></pre></td></tr></table></figure>

<p>LVS安装完成，查看当前LVS集群</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># ipvsadm -L -n</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">-&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br></pre></td></tr></table></figure>

<h2 id="LVS-Keepalived配置-1"><a href="#LVS-Keepalived配置-1" class="headerlink" title="LVS+Keepalived配置"></a>LVS+Keepalived配置</h2><p>** 搭建MySQL主主复制 **</p>
<p>这里不再赘述，请参考MySQL复制</p>
<p>** 配置Keepalived **</p>
<p>下面是LVS1节点（Keepalived主节点）上的Keepalived配置，LVS2类似</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/keepalived/keepalived.conf    </span><br><span class="line"></span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER #指定instance初始状态，实际根据优先级决定.backup节点不一样</span><br><span class="line">    interface eth0 #虚拟IP所在网</span><br><span class="line">    virtual_router_id 51 #VRID，相同VRID为一个组，决定多播MAC地址</span><br><span class="line">    priority 100 #优先级，另一台改为90.backup节点不一样</span><br><span class="line">    advert_int 1  #检查间隔</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS  #认证方式，可以是pass或ha</span><br><span class="line">        auth_pass 1111  #认证密码</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.100  #VIP</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 192.168.1.100 3306 &#123;</span><br><span class="line">    delay_loop 6  #服务轮询的时间间隔</span><br><span class="line">    lb_algo wrr  #加权轮询调度，LVS调度算法 rr|wrr|lc|wlc|lblc|sh|sh</span><br><span class="line">    lb_kind DR   #LVS集群模式 NAT|DR|TUN，其中DR模式要求负载均衡器网卡必须有一块与物理网卡在同一个网段</span><br><span class="line">    #nat_mask 255.255.255.0</span><br><span class="line">    persistence_timeout 50  #会话保持时间</span><br><span class="line">    protocol TCP  #健康检查协议</span><br><span class="line"></span><br><span class="line">     ## Real Server设置，3306就是MySQL连接端口</span><br><span class="line">    real_server 192.168.1.5 3306 &#123;</span><br><span class="line">        weight 3  ##权重</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">            connect_port 3306</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 192.168.1.6 3306 &#123;</span><br><span class="line">        weight 3</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">            connect_port 3306</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="配置LVS"><a href="#配置LVS" class="headerlink" title="配置LVS"></a>配置LVS</h3><p>编写LVS启动脚本<code>/etc/init.d/realserver</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">VIP=192.168.1.100</span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line"># 禁用本地的ARP请求、绑定本地回环地址</span><br><span class="line">start)</span><br><span class="line">    /sbin/ifconfig lo down</span><br><span class="line">    /sbin/ifconfig lo up</span><br><span class="line">    echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">    /sbin/sysctl -p &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    /sbin/ifconfig lo:0 $VIP netmask 255.255.255.255 up #在回环地址上绑定VIP，设定掩码，与Direct Server（自身）上的IP保持通信</span><br><span class="line">    /sbin/route add -host $VIP dev lo:0</span><br><span class="line">    echo &quot;LVS-DR real server starts successfully.n&quot;</span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    /sbin/ifconfig lo:0 down</span><br><span class="line">    /sbin/route del $VIP &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line">    echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">    echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line">    echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line">echo &quot;LVS-DR real server stopped.n&quot;</span><br><span class="line">    ;;</span><br><span class="line">status)</span><br><span class="line">    isLoOn=`/sbin/ifconfig lo:0 | grep &quot;$VIP&quot;`</span><br><span class="line">    isRoOn=`/bin/netstat -rn | grep &quot;$VIP&quot;`</span><br><span class="line">    if [ &quot;$isLoON&quot; == &quot;&quot; -a &quot;$isRoOn&quot; == &quot;&quot; ]; then</span><br><span class="line">        echo &quot;LVS-DR real server has run yet.&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;LVS-DR real server is running.&quot;</span><br><span class="line">    fi</span><br><span class="line">    exit 3</span><br><span class="line">    ;;</span><br><span class="line">*)</span><br><span class="line">    echo &quot;Usage: $0 &#123;start|stop|status&#125;&quot;</span><br><span class="line">    exit 1</span><br><span class="line">esac</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>

<p>将lvs脚本加入开机自启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># chmod +x /etc/init.d/realserver</span><br><span class="line"># echo &quot;/etc/init.d/realserver&quot; &gt;&gt; /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure>

<p>分别启动LVS和keepalived</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># service realserver start</span><br><span class="line"># service keepalived start</span><br></pre></td></tr></table></figure>

<p>注意此时网卡的变化，可以看到虚拟网卡已经分配到了realserver上。</p>
<p>此时查看LVS集群状态，可以看到集群下有两个Real Server，调度算法，权重等信息。ActiveConn代表当前Real Server的活跃连接数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># ipvsadm -ln</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  192.168.1.100:3306 wrr persistent 50</span><br><span class="line">  -&gt; 192.168.1.5:3306             Route   3      4          1         </span><br><span class="line">  -&gt; 192.168.1.6:3306             Route   3      0          2</span><br></pre></td></tr></table></figure>

<p>此时LVS+Keepalived+MySQL主主复制已经搭建完成。</p>
<h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><p>** 功能性验证 **</p>
<p>关闭MySQL Server2</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># service mysqld stop</span><br></pre></td></tr></table></figure>

<p>在LVS1查看/var/log/messages中关于keepalived日志，LVS1检测到了MySQL Server2宕机，同时LVS集群自动剔除了故障节点</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sep  9 13:50:53 192.168.1.2 Keepalived_healthcheckers[18797]: TCP connection to [192.168.1.6]:3306 failed !!!</span><br><span class="line">Sep  9 13:50:53 192.168.1.2 Keepalived_healthcheckers[18797]: Removing service [192.168.1.6]:3306 from VS [192.168.1.100]:3306</span><br></pre></td></tr></table></figure>

<p>从新启动MySQL Server2后自动将故障节点自动加入LVS集群</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sep  9 13:51:41 192.168.1.2 Keepalived_healthcheckers[18797]: TCP connection to [192.168.1.6]:3306 success.</span><br><span class="line">Sep  9 13:51:41 192.168.1.2 Keepalived_healthcheckers[18797]: Adding service [192.168.1.6]:3306 to VS [192.168.1.100]:3306</span><br></pre></td></tr></table></figure>

<p>关闭LVS1上的Keepalived（模拟宕机操作），查看LVS1上的日志，可以看到Keepalived移出了LVS1上的VIP</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Sep  9 14:01:27 192.168.1.2 Keepalived[18796]: Stopping Keepalived v1.2.13 (09/09,2014)</span><br><span class="line">Sep  9 14:01:27 192.168.1.2 Keepalived_healthcheckers[18797]: Removing service [192.168.1.5]:3306 from VS [192.168.1.100]:3306</span><br><span class="line">Sep  9 14:01:27 192.168.1.2 Keepalived_healthcheckers[18797]: Removing service [192.168.1.6]:3306 from VS [192.168.1.100]:3306</span><br><span class="line">Sep  9 14:01:27 192.168.1.2 Keepalived_vrrp[18799]: VRRP_Instance(VI_1) sending 0 priority</span><br><span class="line">Sep  9 14:01:27 192.168.1.2 Keepalived_vrrp[18799]: VRRP_Instance(VI_1) removing protocol VIPs.</span><br></pre></td></tr></table></figure>

<p>同时查看LVS2上日志，可以看到LVS2成为了Master，并接管了VIP</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sep  9 14:11:24 192.168.1.11 Keepalived_vrrp[7457]: VRRP_Instance(VI_1) Transition to MASTER STATE</span><br><span class="line">Sep  9 14:11:25 192.168.1.11 Keepalived_vrrp[7457]: VRRP_Instance(VI_1) Entering MASTER STATE</span><br><span class="line">Sep  9 14:11:25 192.168.1.11 Keepalived_vrrp[7457]: VRRP_Instance(VI_1) setting protocol VIPs.</span><br><span class="line">Sep  9 14:11:25 192.168.1.11 Keepalived_vrrp[7457]: VRRP_Instance(VI_1) Sending gratuitous ARPs on eth0 for 192.168.1.100</span><br><span class="line">Sep  9 14:11:25 192.168.1.11 Keepalived_healthcheckers[7456]: Netlink reflector reports IP 192.168.1.100 added</span><br><span class="line">Sep  9 14:11:25 192.168.1.11 avahi-daemon[1407]: Registering new address record for 192.168.1.100 on eth0.IPv4.</span><br><span class="line">Sep  9 14:11:30 192.168.1.11 Keepalived_vrrp[7457]: VRRP_Instance(VI_1) Sending gratuitous ARPs on eth0 for 192.168.1.100</span><br></pre></td></tr></table></figure>

<p>在LVS2上查看LVS集群状态，一切正常。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># ipvsadm -ln</span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  192.168.1.100:3306 wrr persistent 50</span><br><span class="line">  -&gt; 192.168.1.5:3306             Route   3      2          0         </span><br><span class="line">  -&gt; 192.168.1.6:3306             Route   3      1          0</span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>MySQL主主复制是集群的基础，组成Server Array，其中每个节点作为Real Server。</p>
<p>LVS服务器提供了负载均衡的作用，将用户请求分发到Real Server，一台Real Server故障并不会影响整个集群。</p>
<p>Keepalived搭建主备LVS服务器，避免了LVS服务器的单点故障，出现故障时可以自动切换到正常的节点。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【完整版】如果看了此文你还不懂傅里叶变换，那就过来掐死我吧]]></title>
      <url>http://www.wulai.me/2016/10/04/%E3%80%90%E5%AE%8C%E6%95%B4%E7%89%88%E3%80%91%E5%A6%82%E6%9E%9C%E7%9C%8B%E4%BA%86%E6%AD%A4%E6%96%87%E4%BD%A0%E8%BF%98%E4%B8%8D%E6%87%82%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2%EF%BC%8C%E9%82%A3%E5%B0%B1%E8%BF%87%E6%9D%A5%E6%8E%90%E6%AD%BB%E6%88%91%E5%90%A7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><img title="傅里叶变换" alt="首图" src="http://res.hillock.com.cn/wulai/images/Fourier/ftfs.jpg">

<p>作 者：韩 昊<br>知 乎：Heinrich<br>微 博：@花生油工人<br>知乎专栏：与时间无关的故事</p>
<p>谨以此文献给大连海事大学的吴楠老师，柳晓鸣老师，王新年老师以及张晶泊老师。</p>
<p>转载的同学请保留上面这句话，谢谢。如果还能保留文章来源就更感激不尽了。</p>
<p>——更新于2014.6.6，想直接看更新的同学可以直接跳到第四章————</p>
<p>我保证这篇文章和你以前看过的所有文章都不同，这是 12 年还在果壳的时候写的，但是当时没有来得及写完就出国了……于是拖了两年，嗯，我是拖延症患者……<br>　　这篇文章的核心思想就是：</p>
<p>　　<strong>要让读者在不看任何数学公式的情况下理解傅里叶分析。</strong></p>
<p>　　傅里叶分析不仅仅是一个数学工具，更是一种可以彻底颠覆一个人以前世界观的思维模式。但不幸的是，傅里叶分析的公式看起来太复杂了，所以很多大一新生上来就懵圈并从此对它深恶痛绝。老实说，这么有意思的东西居然成了大学里的杀手课程，不得不归咎于编教材的人实在是太严肃了。（您把教材写得好玩一点会死吗？会死吗？）所以我一直想写一个有意思的文章来解释傅里叶分析，有可能的话高中生都能看懂的那种。所以，不管读到这里的您从事何种工作，我保证您都能看懂，并且一定将体会到通过傅里叶分析看到世界另一个样子时的快感。至于对于已经有一定基础的朋友，也希望不要看到会的地方就急忙往后翻，仔细读一定会有新的发现。</p>
<p>　　————以上是定场诗————</p>
<p>下面进入正题：</p>
<p>　　抱歉，还是要啰嗦一句：其实学习本来就不是易事，我写这篇文章的初衷也是希望大家学习起来更加轻松，充满乐趣。但是千万！千万不要把这篇文章收藏起来，或是存下地址，心里想着：以后有时间再看。这样的例子太多了，也许几年后你都没有再打开这个页面。无论如何，耐下心，读下去。这篇文章要比读课本要轻松、开心得多……</p>
<p>　　p.s.本文无论是 cos 还是 sin，都统一用“正弦波”（Sine Wave）一词来代表简谐波。</p>
<h2 id="一、什么是频域"><a href="#一、什么是频域" class="headerlink" title="一、什么是频域"></a>一、什么是频域</h2><p>　　从我们出生，我们看到的世界都以时间贯穿，股票的走势、人的身高、汽车的轨迹都会随着时间发生改变。这种以时间作为参照来观察动态世界的方法我们称其为时域分析。而我们也想当然的认为，世间万物都在随着时间不停的改变，并且永远不会静止下来。但如果我告诉你，用另一种方法来观察世界的话，你会发现世界是永恒不变的，你会不会觉得我疯了？我没有疯，这个静止的世界就叫做频域。</p>
<p>　　先举一个公式上并非很恰当，但意义上再贴切不过的例子：</p>
<p>　　在你的理解中，一段音乐是什么呢？</p>
<img title="音乐" alt="音乐" src="http://res.hillock.com.cn/wulai/images/Fourier/audio.jpg">

<p>　这是我们对音乐最普遍的理解，一个随着时间变化的震动。但我相信对于乐器小能手们来说，音乐更直观的理解是这样的：</p>
<img title="五线谱" alt="五线谱" src="http://res.hillock.com.cn/wulai/images/Fourier/MusicalNotation.jpg">

<p>好的！下课，同学们再见。</p>
<p>　　是的，其实这一段写到这里已经可以结束了。上图是音乐在时域的样子，而下图则是音乐在频域的样子。所以频域这一概念对大家都从不陌生，只是从来没意识到而已。<br>　现在我们可以回过头来重新看看一开始那句痴人说梦般的话：世界是永恒的。<br>将以上两图简化：</p>
<p>　　时域：</p>
<img title="时域" alt="时域" src="http://res.hillock.com.cn/wulai/images/Fourier/timearea.jpg">

<p>  频率</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/frequencyarea.jpg">

<p>在时域，我们观察到钢琴的琴弦一会上一会下的摆动，就如同一支股票的走势；而在频域，只有那一个永恒的音符。</p>
<p>　　所以</p>
<p>　　你眼中看似落叶纷飞变化无常的世界，实际只是躺在上帝怀中一份早已谱好的乐章。</p>
<p>　　抱歉，这不是一句鸡汤文，而是黑板上确凿的公式：傅里叶同学告诉我们，任何周期函数，都可以看作是不同振幅，不同相位正弦波的叠加。在第一个例子里我们可以理解为，利用对不同琴键不同力度，不同时间点的敲击，可以组合出任何一首乐曲。</p>
<p>　　而贯穿时域与频域的方法之一，就是传中说的傅里叶分析。傅里叶分析可分为傅里叶级数（Fourier Serie）和傅里叶变换(Fourier Transformation)，我们从简单的开始谈起。</p>
<h2 id="二、傅里叶级数-Fourier-Series-的频谱"><a href="#二、傅里叶级数-Fourier-Series-的频谱" class="headerlink" title="二、傅里叶级数(Fourier Series)的频谱"></a>二、傅里叶级数(Fourier Series)的频谱</h2><p>还是举个栗子并且有图有真相才好理解。</p>
<p>　　如果我说我能用前面说的正弦曲线波叠加出一个带 90 度角的矩形波来，你会相信吗？你不会，就像当年的我一样。但是看看下图：</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/sin.jpg">

<p>第一幅图是一个郁闷的正弦波 cos（x）</p>
<p>　　第二幅图是 2 个卖萌的正弦波的叠加 cos (x) +a.cos (3x)</p>
<p>　　第三幅图是 4 个发春的正弦波的叠加</p>
<p>　　第四幅图是 10 个便秘的正弦波的叠加</p>
<p>　　随着正弦波数量逐渐的增长，他们最终会叠加成一个标准的矩形，大家从中体会到了什么道理？<br>（只要努力，弯的都能掰直！）</p>
<p>　　随着叠加的递增，所有正弦波中上升的部分逐渐让原本缓慢增加的曲线不断变陡，而所有正弦波中下降的部分又抵消了上升到最高处时继续上升的部分使其变为水平线。一个矩形就这么叠加而成了。但是要多少个正弦波叠加起来才能形成一个标准 90 度角的矩形波呢？不幸的告诉大家，答案是无穷多个。（上帝：我能让你们猜着我？）</p>
<p>　　不仅仅是矩形，你能想到的任何波形都是可以如此方法用正弦波叠加起来的。这是没</p>
<p>　　有接触过傅里叶分析的人在直觉上的第一个难点，但是一旦接受了这样的设定，游戏就开始有意思起来了。<br>　还是上图的正弦波累加成矩形波，我们换一个角度来看看：</p>
<img title="频域2" alt="频域2" src="http://res.hillock.com.cn/wulai/images/Fourier/sin2.jpg">
<p>在这几幅图中，最前面黑色的线就是所有正弦波叠加而成的总和，也就是越来越接近矩形波的那个图形。而后面依不同颜色排列而成的正弦波就是组合为矩形波的各个分量。这些正弦波按照频率从低到高从前向后排列开来，而每一个波的振幅都是不同的。一定有细心的读者发现了，每两个正弦波之间都还有一条直线，那并不是分割线，而是振幅为 0 的正弦波！也就是说，为了组成特殊的曲线，有些正弦波成分是不需要的。</p>
<p>　　这里，不同频率的正弦波我们成为频率分量。</p>
<p>　　好了，关键的地方来了！！</p>
<p>　　如果我们把第一个频率最低的频率分量看作“1”，我们就有了构建频域的最基本单元。</p>
<p>　　对于我们最常见的有理数轴，数字“1”就是有理数轴的基本单元。</p>
<p>　　时域的基本单元就是“1 秒”，如果我们将一个角频率为的正弦波 cos（t）看作基础，那么频域的基本单元就是<br>。</p>
<p>　　有了“1”，还要有“0”才能构成世界，那么频域的“0”是什么呢？cos（0t）就是一个周期无限长的正弦波，也就是一条直线！所以在频域，0 频率也被称为直流分量，在傅里叶级数的叠加中，它仅仅影响全部波形相对于数轴整体向上或是向下而不改变波的形状。</p>
<p>　　接下来，让我们回到初中，回忆一下已经死去的八戒，啊不，已经死去的老师是怎么定义正弦波的吧。</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/sin3.gif">

<p>正弦波就是一个圆周运动在一条直线上的投影。所以频域的基本单元也可以理解为一个始终在旋转的圆</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/sin4.gif">
<p>想看动图的同学请戳这里：</p>
<p>　　File:Fourier series square wave circles animation.gif</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/sin5.gif">
<p>以及这里：</p>
<p>　　File:Fourier series sawtooth wave circles animation.gif</p>
<p>　　点出去的朋友不要被 wiki 拐跑了，wiki 写的哪有这里的文章这么没节操是不是。</p>
<p>　　介绍完了频域的基本组成单元，我们就可以看一看一个矩形波，在频域里的另一个模样了：</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs2.jpg">

<p>这是什么奇怪的东西？</p>
<p>　　这就是矩形波在频域的样子，是不是完全认不出来了？教科书一般就给到这里然后留给了读者无穷的遐想，以及无穷的吐槽，其实教科书只要补一张图就足够了：频域图像，也就是俗称的频谱，就是——</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs3.jpg">

<p>　再清楚一点：</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs4.jpg">

<p>可以发现，在频谱中，偶数项的振幅都是0，也就对应了图中的彩色直线。振幅为 0 的正弦波。</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/sf5.gif">

<p>动图请戳：</p>
<p>　　File:Fourier series and transform.gif</p>
<p>　　老实说，在我学傅里叶变换时，维基的这个图还没有出现，那时我就想到了这种表达方法，而且，后面还会加入维基没有表示出来的另一个谱——相位谱。</p>
<p>　　但是在讲相位谱之前，我们先回顾一下刚刚的这个例子究竟意味着什么。记得前面说过的那句“世界是静止的”吗？估计好多人对这句话都已经吐槽半天了。想象一下，世界上每一个看似混乱的表象，实际都是一条时间轴上不规则的曲线，但实际这些曲线都是由这些无穷无尽的正弦波组成。我们看似不规律的事情反而是规律的正弦波在时域上的投影，而正弦波又是一个旋转的圆在直线上的投影。那么你的脑海中会产生一个什么画面呢？</p>
<p>　　我们眼中的世界就像皮影戏的大幕布，幕布的后面有无数的齿轮，大齿轮带动小齿轮，小齿轮再带动更小的。在最外面的小齿轮上有一个小人——那就是我们自己。我们只看到这个小人毫无规律的在幕布前表演，却无法预测他下一步会去哪。而幕布后面的齿轮却永远一直那样不停的旋转，永不停歇。这样说来有些宿命论的感觉。说实话，这种对人生的描绘是我一个朋友在我们都是高中生的时候感叹的，当时想想似懂非懂，直到有一天我学到了傅里叶级数……</p>
<h2 id="三、傅里叶级数（Fourier-Series）的相位谱"><a href="#三、傅里叶级数（Fourier-Series）的相位谱" class="headerlink" title="三、傅里叶级数（Fourier Series）的相位谱"></a>三、傅里叶级数（Fourier Series）的相位谱</h2><p>上一章的关键词是：从侧面看。这一章的关键词是：从下面看。</p>
<p>　　在这一章最开始，我想先回答很多人的一个问题：傅里叶分析究竟是干什么用的？这段相对比较枯燥，已经知道了的同学可以直接跳到下一个分割线。</p>
<p>　　先说一个最直接的用途。无论听广播还是看电视，我们一定对一个词不陌生——频道。频道频道，就是频率的通道，不同的频道就是将不同的频率作为一个通道来进行信息传输。下面大家尝试一件事：</p>
<p>　　先在纸上画一个 sin（x），不一定标准，意思差不多就行。不是很难吧。</p>
<p>　　好，接下去画一个 sin（3x）+sin（5x）的图形。</p>
<p>　　别说标准不标准了，曲线什么时候上升什么时候下降你都不一定画的对吧？</p>
<p>　　好，画不出来不要紧，我把 sin（3x）+sin（5x）的曲线给你，但是前提是你不知道这个曲线的方程式，现在需要你把 sin（5x）给我从图里拿出去，看看剩下的是什么。这基本是不可能做到的。</p>
<p>　　但是在频域呢？则简单的很，无非就是几条竖线而已。</p>
<p>　　所以很多在时域看似不可能做到的数学操作，在频域相反很容易。这就是需要傅里叶变换的地方。尤其是从某条曲线中去除一些特定的频率成分，这在工程上称为滤波，是信号处理最重要的概念之一，只有在频域才能轻松的做到。</p>
<p>　　再说一个更重要，但是稍微复杂一点的用途——求解微分方程。（这段有点难度，看不懂的可以直接跳过这段）微分方程的重要性不用我过多介绍了。各行各业都用的到。但是求解微分方程却是一件相当麻烦的事情。因为除了要计算加减乘除，还要计算微分积分。而傅里叶变换则可以让微分和积分在频域中变为乘法和除法，大学数学瞬间变小学算术有没有。</p>
<p>　　傅里叶分析当然还有其他更重要的用途，我们随着讲随着提。</p>
<p>　　————————————————————————————————————</p>
<p>下面我们继续说相位谱：</p>
<p>　　通过时域到频域的变换，我们得到了一个从侧面看的频谱，但是这个频谱并没有包含时域中全部的信息。因为频谱只代表每一个对应的正弦波的振幅是多少，而没有提到相位。基础的正弦波A.sin (wt+θ)中，振幅，频率，相位缺一不可，不同相位决定了波的位置，所以对于频域分析，仅仅有频谱（振幅谱）是不够的，我们还需要一个相位谱。那么这个相位谱在哪呢？我们看下图，这次为了避免图片太混论，我们用 7 个波叠加的图。</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs7.jpg">

<p>鉴于正弦波是周期的，我们需要设定一个用来标记正弦波位置的东西。在图中就是那些小红点。小红点是距离频率轴最近的波峰，而这个波峰所处的位置离频率轴有多远呢？为了看的更清楚，我们将红色的点投影到下平面，投影点我们用粉色点来表示。当然，这些粉色的点只标注了波峰距离频率轴的距离，并不是相位。</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs8.jpg">

<p>这里需要纠正一个概念：时间差并不是相位差。如果将全部周期看作 2Pi 或者 360 度的话，相位差则是时间差在一个周期中所占的比例。我们将时间差除周期再乘 2Pi，就得到了相位差。</p>
<p>　　在完整的立体图中，我们将投影得到的时间差依次除以所在频率的周期，就得到了最下面的相位谱。所以，频谱是从侧面看，相位谱是从下面看。下次偷看女生裙底被发现的话，可以告诉她：“对不起，我只是想看看你的相位谱。”</p>
<p>　　注意到，相位谱中的相位除了0，就是 Pi。因为 cos（t+Pi）=-cos（t），所以实际上相位为 Pi 的波只是上下翻转了而已。对于周期方波的傅里叶级数，这样的相位谱已经是很简单的了。另外值得注意的是，由于 cos（t+2Pi）=cos（t），所以相位差是周期的，pi 和 3pi，5pi，7pi 都是相同的相位。人为定义相位谱的值域为(-pi，pi]，所以图中的相位差均为 Pi。</p>
<p>　　最后来一张大集合：</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs9.jpg">

<h2 id="四、傅里叶变换（Fourier-Tranformation）"><a href="#四、傅里叶变换（Fourier-Tranformation）" class="headerlink" title="四、傅里叶变换（Fourier Tranformation）"></a>四、傅里叶变换（Fourier Tranformation）</h2><p>相信通过前面三章，大家对频域以及傅里叶级数都有了一个全新的认识。但是文章在一开始关于钢琴琴谱的例子我曾说过，这个栗子是一个公式错误，但是概念典型的例子。所谓的公式错误在哪里呢？</p>
<p>　　傅里叶级数的本质是将一个周期的信号分解成无限多分开的（离散的）正弦波，但是宇宙似乎并不是周期的。曾经在学数字信号处理的时候写过一首打油诗：</p>
<p>　　<strong>往昔连续非周期，</strong></p>
<p>　　<strong>回忆周期不连续，</strong></p>
<p>　　<strong>任你 ZT、DFT，</strong></p>
<p>　　** 还原不回去。**</p>
<p>　　（请无视我渣一样的文学水平……）<br>在这个世界上，有的事情一期一会，永不再来，并且时间始终不曾停息地将那些刻骨铭心的往昔连续的标记在时间点上。但是这些事情往往又成为了我们格外宝贵的回忆，在我们大脑里隔一段时间就会周期性的蹦出来一下，可惜这些回忆都是零散的片段，往往只有最幸福的回忆，而平淡的回忆则逐渐被我们忘却。因为，往昔是一个连续的非周期信号，而回忆是一个周期离散信号。</p>
<p>　　是否有一种数学工具将连续非周期信号变换为周期离散信号呢？抱歉，真没有。</p>
<p>　　比如傅里叶级数，在时域是一个周期且连续的函数，而在频域是一个非周期离散的函数。这句话比较绕嘴，实在看着费事可以干脆回忆第一章的图片。</p>
<p>　　而在我们接下去要讲的傅里叶变换，则是将一个时域非周期的连续信号，转换为一个在频域非周期的连续信号。</p>
<p>　　算了，还是上一张图方便大家理解吧：</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs10.jpg">

<p>或者我们也可以换一个角度理解：傅里叶变换实际上是对一个周期无限大的函数进行傅里叶变换。</p>
<p>　　所以说，钢琴谱其实并非一个连续的频谱，而是很多在时间上离散的频率，但是这样的一个贴切的比喻真的是很难找出第二个来了。</p>
<p>　　因此在傅里叶变换在频域上就从离散谱变成了连续谱。那么连续谱是什么样子呢？</p>
<p>　　<strong>你见过大海么？</strong></p>
<p>　　为了方便大家对比，我们这次从另一个角度来看频谱，还是傅里叶级数中用到最多的那幅图，我们从频率较高的方向看。</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs11.jpg">
<p>以上是离散谱，那么连续谱是什么样子呢？</p>
<p>　　尽情的发挥你的想象，想象这些离散的正弦波离得越来越近，逐渐变得连续……</p>
<p>　　直到变得像波涛起伏的大海：</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/fs12.jpg">

<p>很抱歉，为了能让这些波浪更清晰的看到，我没有选用正确的计算参数，而是选择了一些让图片更美观的参数，不然这图看起来就像屎一样了。</p>
<p>　　不过通过这样两幅图去比较，大家应该可以理解如何从离散谱变成了连续谱的了吧？原来离散谱的叠加，变成了连续谱的累积。所以在计算上也从求和符号变成了积分符号。</p>
<p>　　不过，这个故事还没有讲完，接下去，我保证让你看到一幅比上图更美丽壮观的图片，但是这里需要介绍到一个数学工具才能然故事继续，这个工具就是——</p>
<h2 id="五、宇宙耍帅第一公式：欧拉公式"><a href="#五、宇宙耍帅第一公式：欧拉公式" class="headerlink" title="　五、宇宙耍帅第一公式：欧拉公式"></a>　五、宇宙耍帅第一公式：欧拉公式</h2><p>虚数i这个概念大家在高中就接触过，但那时我们只知道它是-1 的平方根，可是它真正的意义是什么呢?</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f1.jpg">

<p>这里有一条数轴，在数轴上有一个红色的线段，它的长度是1。当它乘以 3 的时候，它的长度发生了变化，变成了蓝色的线段，而当它乘以-1 的时候，就变成了绿色的线段，或者说线段在数轴上围绕原点旋转了 180 度。</p>
<p>我们知道乘-1 其实就是乘了两次 i 使线段旋转了 180 度，那么乘一次 i 呢——答案很简单——旋转了 90 度。</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f2.jpg">

<p>同时，我们获得了一个垂直的虚数轴。实数轴与虚数轴共同构成了一个复数的平面，也称复平面。这样我们就了解到，乘虚数i的一个功能——旋转。</p>
<p>　　现在，就有请宇宙第一耍帅公式欧拉公式隆重登场——</p>
<img title="公式" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f3.jpg">


<p>这个公式在数学领域的意义要远大于傅里叶分析，但是乘它为宇宙第一耍帅公式是因为它的特殊形式——当x等于 Pi 的时候。</p>
<img title="公式" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f4.jpg">


<p>经常有理工科的学生为了跟妹子表现自己的学术功底，用这个公式来给妹子解释数学之美：”石榴姐你看，这个公式里既有自然底数e，自然数 1 和0，虚数i还有圆周率 pi，它是这么简洁，这么美丽啊！“但是姑娘们心里往往只有一句话：”臭屌丝……“</p>
<p>　　这个公式关键的作用，是将正弦波统一成了简单的指数形式。我们来看看图像上的涵义：</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f5.jpg">

<p>欧拉公式所描绘的，是一个随着时间变化，在复平面上做圆周运动的点，随着时间的改变，在时间轴上就成了一条螺旋线。如果只看它的实数部分，也就是螺旋线在左侧的投影，就是一个最基础的余弦函数。而右侧的投影则是一个正弦函数。</p>
<p>　　关于复数更深的理解，大家可以参考：</p>
<p>　　复数的物理意义是什么？</p>
<p>　　这里不需要讲的太复杂，足够让大家理解后面的内容就可以了。</p>
<h2 id="六、指数形式的傅里叶变换"><a href="#六、指数形式的傅里叶变换" class="headerlink" title="六、指数形式的傅里叶变换"></a>六、指数形式的傅里叶变换</h2><p>有了欧拉公式的帮助，我们便知道：正弦波的叠加，也可以理解为螺旋线的叠加在实数空间的投影。而螺旋线的叠加如果用一个形象的栗子来理解是什么呢？</p>
<h3 id="光波"><a href="#光波" class="headerlink" title="光波"></a>光波</h3><p>　　高中时我们就学过，自然光是由不同颜色的光叠加而成的，而最著名的实验就是牛顿师傅的三棱镜实验：</p>
<img title="频域" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f6.jpg">

<p>所以其实我们在很早就接触到了光的频谱，只是并没有了解频谱更重要的意义。</p>
<p>　　但不同的是，傅里叶变换出来的频谱不仅仅是可见光这样频率范围有限的叠加，而是频率从 0 到无穷所有频率的组合。</p>
<p>　　这里，我们可以用两种方法来理解正弦波：</p>
<p>　　第一种前面已经讲过了，就是螺旋线在实轴的投影。</p>
<p>　　另一种需要借助欧拉公式的另一种形式去理解：</p>
<img title="公式" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f7.jpg">

<p>将以上两式相加再除2，得到：</p>
<img title="公式" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f8.jpg">
<p>这个式子可以怎么理解呢？</p>
<p>　　我们刚才讲过，e^(it)可以理解为一条逆时针旋转的螺旋线，那么e^(-it)则可以理解为一条顺时针旋转的螺旋线。而 cos (t)则是这两条旋转方向不同的螺旋线叠加的一半，因为这两条螺旋线的虚数部分相互抵消掉了！</p>
<p>　　举个例子的话，就是极化方向不同的两束光波，磁场抵消，电场加倍。</p>
<p>　　这里，逆时针旋转的我们称为正频率，而顺时针旋转的我们称为负频率（注意不是复频率）。</p>
<p>　　好了，刚才我们已经看到了大海——连续的傅里叶变换频谱，现在想一想，连续的螺旋线会是什么样子：</p>
<p>　　想象一下再往下翻：</p>
<img title="公式" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f9.jpg">

<p>是不是很漂亮？</p>
<p>　　你猜猜，这个图形在时域是什么样子？</p>
<img title="公式" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f10.jpg">

<p>哈哈，是不是觉得被狠狠扇了一个耳光。数学就是这么一个把简单的问题搞得很复杂的东西。</p>
<p>　　顺便说一句，那个像大海螺一样的图，为了方便观看，我仅仅展示了其中正频率的部分，负频率的部分没有显示出来。</p>
<p>　　如果你认真去看，海螺图上的每一条螺旋线都是可以清楚的看到的，每一条螺旋线都有着不同的振幅（旋转半径），频率（旋转周期）以及相位。而将所有螺旋线连成平面，就是这幅海螺图了。</p>
<p>　　好了，讲到这里，相信大家对傅里叶变换以及傅里叶级数都有了一个形象的理解了，我们最后用一张图来总结一下：</p>
<img title="公式" alt="频域" src="http://res.hillock.com.cn/wulai/images/Fourier/f11.jpg">

<p>好了，傅里叶的故事终于讲完了，下面来讲讲我的故事：</p>
<p>　　这篇文章第一次被卸下来的地方你们绝对猜不到在哪，是在一张高数考试的卷子上。当时为了刷分，我重修了高数（上），但是后来时间紧压根没复习，所以我就抱着裸考的心态去了考场。但是到了考场我突然意识到，无论如何我都不会比上次考的更好了，所以干脆写一些自己对于数学的想法吧。于是用了一个小时左右的时间在试卷上洋洋洒洒写了本文的第一草稿。</p>
<p>　　你们猜我的了多少分？</p>
<p>6 分</p>
<p>　　没错，就是这个数字。而这 6 分的成绩是因为最后我实在无聊，把选择题全部填上了C，应该是中了两道，得到了这宝贵的 6 分。说真的，我很希望那张卷子还在，但是应该不太可能了。</p>
<p>　　那么你们猜猜我第一次信号与系统考了多少分呢？</p>
<p>　　45 分</p>
<p>　　没错，刚刚够参加补考的。但是我心一横没去考，决定重修。因为那个学期在忙其他事情，学习真的就抛在脑后了。但是我知道这是一门很重要的课，无论如何我要吃透它。说真的，信号与系统这门课几乎是大部分工科课程的基础，尤其是通信专业。</p>
<p>　　在重修的过程中，我仔细分析了每一个公式，试图给这个公式以一个直观的理解。虽然我知道对于研究数学的人来说，这样的学习方法完全没有前途可言，因为随着概念愈加抽象，维度越来越高，这种图像或者模型理解法将完全丧失作用。但是对于一个工科生来说，足够了。</p>
<p>　　后来来了德国，这边学校要求我重修信号与系统时，我彻底无语了。但是没办法，德国人有时对中国人就是有种藐视，觉得你的教育不靠谱。所以没办法，再来一遍吧。</p>
<p>　　这次，我考了满分，而及格率只有一半。</p>
<p>　　老实说，数学工具对于工科生和对于理科生来说，意义是完全不同的。工科生只要理解了，会用，会查，就足够了。但是很多高校却将这些重要的数学课程教给数学系的老师去教。这样就出现一个问题，数学老师讲得天花乱坠，又是推理又是证明，但是学生心里就只有一句话：学这货到底干嘛用的？</p>
<p>　　缺少了目标的教育是彻底的失败。</p>
<p>　　在开始学习一门数学工具的时候，学生完全不知道这个工具的作用，现实涵义。而教材上有只有晦涩难懂，定语就二十几个字的概念以及看了就眼晕的公式。能学出兴趣来就怪了！</p>
<p>　　好在我很幸运，遇到了大连海事大学的吴楠老师。他的课全程来看是两条线索，一条从上而下，一条从下而上。先将本门课程的意义，然后指出这门课程中会遇到哪样的问题，让学生知道自己学习的某种知识在现实中扮演的角色。然后再从基础讲起，梳理知识树，直到延伸到另一条线索中提出的问题，完美的衔接在一起！</p>
<p>　　这样的教学模式，我想才是大学里应该出现的。</p>
<p>　　最后，写给所有给我点赞并留言的同学。真的谢谢大家的支持，也很抱歉不能一一回复。因为知乎专栏的留言要逐次加载，为了看到最后一条要点很多次加载。当然我都坚持看完了，只是没办法一一回复。</p>
<p>　　本文只是介绍了一种对傅里叶分析新颖的理解方法，对于求学，还是要踏踏实实弄清楚公式和概念，学习，真的没有捷径。但至少通过本文，我希望可以让这条漫长的路变得有意思一些。</p>
<p>　　最后，祝大家都能在学习中找到乐趣。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[this is incompatible with sql_mode=only_full_group_by]]></title>
      <url>http://www.wulai.me/2016/09/24/this-is-incompatible-with-sql-mode-only-full-group-by/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>I was working on a legacy project recently and needed to import some data from MySQL 5.5. All the queries in the code worked perfectly in MySQL 5.5, so I assumed an upgrade to 5.7 would be seamless. Not so.</p>
<p>First I got errors due to DateTime columns being populated with zeros during import, then when running this query:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">select *</span><br><span class="line">  from ebay_order_items</span><br><span class="line">  where</span><br><span class="line">    z_shipmentno is null</span><br><span class="line">    and ExternalTransactionID is not null</span><br><span class="line">    and orderstatus = &apos;Completed&apos;</span><br><span class="line">    and timestamp &gt; &apos;2015-02-25&apos;</span><br><span class="line">  group by ExternalTransactionID</span><br><span class="line">  order by timestamp desc</span><br></pre></td></tr></table></figure>

<p>I got this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Expression #1 of SELECT list is not in GROUP BY</span><br><span class="line">clause and contains nonaggregated column</span><br><span class="line">&apos;1066export.ebay_order_items.TransactionID&apos; which</span><br><span class="line">is not functionally dependent on columns in GROUP BY</span><br><span class="line">clause; this is incompatible with sql_mode=only_full_group_by</span><br></pre></td></tr></table></figure>

<p>It turned out that the only_full_group_by mode was made default in version 5.7.5., which breaks many of such naïve queries. In fact, see here for more info.</p>
<p>I could rewrite all queries to be 5.7 compatible (hat tip to George Fekete for the solution) and do something as atrocious as this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">select extf.* from (</span><br><span class="line">	select ExternalTransactionID</span><br><span class="line">	from ebay_order_items</span><br><span class="line">	where ExternalTransactionID is not null</span><br><span class="line">	group by ExternalTransactionID</span><br><span class="line">) extf JOIN ebay_order_items eoi</span><br><span class="line">ON (eoi.ExternalTransactionID = extf.ExternalTransactionID)</span><br><span class="line">where eoi.z_shipmentno is null</span><br><span class="line">and eoi.orderstatus = &apos;Completed&apos;</span><br><span class="line">and eoi.timestamp &gt; &apos;2015-02-25&apos;</span><br><span class="line">order by eoi.timestamp desc</span><br></pre></td></tr></table></figure>

<p>… but this would make the already complex refactoring much more difficult. It would be much better to temporarily disable these checks and force MySQL to act like it did in 5.6.</p>
<h2 id="Permanently-changing-SQL-mode"><a href="#Permanently-changing-SQL-mode" class="headerlink" title="Permanently changing SQL mode"></a>Permanently changing SQL mode</h2><p>First, we find out which configuration file our MySQL installation prefers. For that, we need the binary’s location:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ which mysqld</span><br><span class="line">/usr/sbin/mysqld</span><br></pre></td></tr></table></figure>

<p>Then, we use this path to execute the lookup:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/sbin/mysqld --verbose --help | grep -A 1 &quot;Default options&quot;</span><br><span class="line"></span><br><span class="line">Default options are read from the following files in the given order:</span><br><span class="line">/etc/my.cnf /etc/mysql/my.cnf ~/.my.cnf</span><br></pre></td></tr></table></figure>

<p>We can see that the first favored configuration file is one in the root of the etc folder. That file, however, did not exist on my system so I opted for the second one.</p>
<p>First, we find out the current sql mode:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql -u homestead -psecret -e &quot;select @@sql_mode&quot;</span><br><span class="line"></span><br><span class="line">+-------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| @@sql_mode                                                                                                                                |</span><br><span class="line">+-------------------------------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+-------------------------------------------------------------------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>

<p>Then, we copy the current string this query produced and remove everything we don’t like. In my case, I needed to get rid of NO_ZERO_IN_DATE, NO_ZERO_DATE and of course ONLY_FULL_GROUP_BY. The newly formed string then looks like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure>

<p>We open the configuration file we decided on before (/etc/mysql/my.cnf) and add the following line into the [mysqld] section:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># ... other stuff will probably be here</span><br><span class="line">sql_mode = &quot;STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;</span><br></pre></td></tr></table></figure>

<p>Save, exit, and restart MySQL:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure>

<p>Voilà, the SQL mode is permanently changed and I can continue developing the legacy project until I need some additional strictness.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[多个网站使用不同的SSH密钥登陆]]></title>
      <url>http://www.wulai.me/2016/09/24/%E5%A4%9A%E4%B8%AA%E7%BD%91%E7%AB%99%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%90%8C%E7%9A%84SSH%E5%AF%86%E9%92%A5%E7%99%BB%E9%99%86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1.创建不同的SSH密钥， -t指定加密方法，RSA或DSA；-C注释；-f指定文件名</p>
<pre><code>ssh-keygen -t dsa -C &quot;email.xxx&quot; -f ~/.ssh/xxx</code></pre><p>以上命令在~/.ssh/下生成xxx密钥对</p>
<p>2.编辑 ~/.ssh/config  文件，配置格式示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host github.com www.github.com</span><br><span class="line">   IdentityFile ~/.ssh/code_github</span><br><span class="line">Host bitbucket.org www.bitbucket.org</span><br><span class="line">   IdentityFile ~/.ssh/code_bitbucket</span><br></pre></td></tr></table></figure>

<p>查看 <code>man ssh_config</code> 有更多参数说明</p>
<p>3.把xxx.pub公钥文件的内容加入到要自动登陆服务器指定用户下的<code>~/.ssh/authorized_keys</code> 文件中</p>
<p>4.使用ssh登陆网站时会自动判断使用哪一对密钥认证</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何用十条命令在一分钟内检查Linux服务器性能]]></title>
      <url>http://www.wulai.me/2016/09/23/%E5%A6%82%E4%BD%95%E7%94%A8%E5%8D%81%E6%9D%A1%E5%91%BD%E4%BB%A4%E5%9C%A8%E4%B8%80%E5%88%86%E9%92%9F%E5%86%85%E6%A3%80%E6%9F%A5Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通过执行以下命令，可以在1分钟内对系统资源使用情况有个大致的了解。</p>
<ul>
<li>uptime</li>
<li>dmesg | tail</li>
<li>vmstat 1</li>
<li>mpstat -P ALL 1</li>
<li>pidstat 1</li>
<li>iostat -xz 1</li>
<li>free -m</li>
<li>sar -n DEV 1</li>
<li>sar -n TCP,ETCP 1</li>
<li>top</li>
</ul>
<p>其中一些命令需要安装sysstat包，有一些由procps包提供。这些命令的输出，有助于快速定位性能瓶颈，检查出所有资源（CPU、内存、磁盘IO等）的利用率（utilization）、饱和度（saturation）和错误（error）度量，也就是所谓的USE方法。</p>
<p>下面我们来逐一介绍下这些命令，有关这些命令更多的参数和说明，请参照命令的手册。</p>
<h2 id="uptime"><a href="#uptime" class="headerlink" title="uptime"></a>uptime</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ uptime</span><br><span class="line"></span><br><span class="line">23:51:26 up 21:31,  1 user,  load average: 30.02, 26.43, 19.02</span><br></pre></td></tr></table></figure>

<p>这个命令可以快速查看机器的负载情况。在Linux系统中，这些数据表示等待CPU资源的进程和阻塞在不可中断IO进程（进程状态为D）的数量。这些数据可以让我们对系统资源使用有一个宏观的了解。</p>
<p>命令的输出分别表示1分钟、5分钟、15分钟的平均负载情况。通过这三个数据，可以了解服务器负载是在趋于紧张还是趋于缓解。如果1分钟平均负载很高，而15分钟平均负载很低，说明服务器正在命令高负载情况，需要进一步排查CPU资源都消耗在了哪里。反之，如果15分钟平均负载很高，1分钟平均负载较低，则有可能是CPU资源紧张时刻已经过去。</p>
<p>上面例子中的输出，可以看见最近1分钟的平均负载非常高，且远高于最近15分钟负载，因此我们需要继续排查当前系统中有什么进程消耗了大量的资源。可以通过下文将会介绍的vmstat、mpstat等命令进一步排查。</p>
<h2 id="dmesg丨tail"><a href="#dmesg丨tail" class="headerlink" title="dmesg丨tail"></a>dmesg丨tail</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ dmesg | tail</span><br><span class="line"></span><br><span class="line">[1880957.563150] perl invoked oom-killer: gfp_mask=0x280da, order=0, oom_score_adj=0</span><br><span class="line"></span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line">[1880957.563400] Out of memory: Kill process 18694 (perl) score 246 or sacrifice child</span><br><span class="line"></span><br><span class="line">[1880957.563408] Killed process 18694 (perl) total-vm:1972392kB, anon-rss:1953348kB, file-rss:0kB</span><br><span class="line"></span><br><span class="line">[2320864.954447] TCP: Possible SYN flooding on port 7001. Dropping</span><br><span class="line"></span><br><span class="line">request.  Check SNMP counters.</span><br></pre></td></tr></table></figure>

<p>该命令会输出系统日志的最后10行。示例中的输出，可以看见一次内核的oom kill和一次TCP丢包。这些日志可以帮助排查性能问题。千万不要忘了这一步。</p>
<h2 id="vmstat-1"><a href="#vmstat-1" class="headerlink" title="vmstat 1"></a>vmstat 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ vmstat 1</span><br><span class="line"></span><br><span class="line">procs ---------memory---------- ---swap-- -----io---- -system-- ------cpu-----</span><br><span class="line"></span><br><span class="line"> r  b swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st</span><br><span class="line"></span><br><span class="line">34  0    0 200889792  73708 591828    0    0     0     5    6   10 96  1  3  0  0</span><br><span class="line"></span><br><span class="line">32  0    0 200889920  73708 591860    0    0     0   592 13284 4282 98  1  1  0  0</span><br><span class="line"></span><br><span class="line">32  0    0 200890112  73708 591860    0    0     0     0 9501 2154 99  1  0  0  0</span><br><span class="line"></span><br><span class="line">32  0    0 200889568  73712 591856    0    0     0    48 11900 2459 99  0  0  0  0</span><br><span class="line"></span><br><span class="line">32  0    0 200890208  73712 591860    0    0     0     0 15898 4840 98  1  1  0  0</span><br><span class="line"></span><br><span class="line">^C</span><br></pre></td></tr></table></figure>

<p>vmstat(8) 命令，每行会输出一些系统核心指标，这些指标可以让我们更详细的了解系统状态。后面跟的参数1，表示每秒输出一次统计信息，表头提示了每一列的含义，这几介绍一些和性能调优相关的列：</p>
<ul>
<li><p>r：等待在CPU资源的进程数。这个数据比平均负载更加能够体现CPU负载情况，数据中不包含等待IO的进程。如果这个数值大于机器CPU核数，那么机器的CPU资源已经饱和。</p>
</li>
<li><p>free：系统可用内存数（以千字节为单位），如果剩余内存不足，也会导致系统性能问题。下文介绍到的free命令，可以更详细的了解系统内存的使用情况。</p>
</li>
<li><p>si，so：交换区写入和读取的数量。如果这个数据不为0，说明系统已经在使用交换区（swap），机器物理内存已经不足。</p>
</li>
<li><p>us, sy, id, wa, st：这些都代表了CPU时间的消耗，它们分别表示用户时间（user）、系统（内核）时间（sys）、空闲时间（idle）、IO等待时间（wait）和被偷走的时间（stolen，一般被其他虚拟机消耗）。</p>
</li>
</ul>
<p>上述这些CPU时间，可以让我们很快了解CPU是否出于繁忙状态。一般情况下，如果用户时间和系统时间相加非常大，CPU出于忙于执行指令。如果IO等待时间很长，那么系统的瓶颈可能在磁盘IO。</p>
<p>示例命令的输出可以看见，大量CPU时间消耗在用户态，也就是用户应用程序消耗了CPU时间。这不一定是性能问题，需要结合r队列，一起分析。</p>
<h2 id="mpstat-P-ALL-1"><a href="#mpstat-P-ALL-1" class="headerlink" title="mpstat-P ALL 1"></a>mpstat-P ALL 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ mpstat -P ALL 1</span><br><span class="line"></span><br><span class="line">Linux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015  _x86_64_ (32 CPU)</span><br><span class="line"></span><br><span class="line">07:38:49 PM  CPU   %usr  %nice   %sys %iowait   %irq  %soft  %steal  %guest  %gnice  %idle</span><br><span class="line"></span><br><span class="line">07:38:50 PM  all  98.47   0.00   0.75    0.00   0.00   0.00    0.00    0.00    0.00   0.78</span><br><span class="line"></span><br><span class="line">07:38:50 PM    0  96.04   0.00   2.97    0.00   0.00   0.00    0.00    0.00    0.00   0.99</span><br><span class="line"></span><br><span class="line">07:38:50 PM    1  97.00   0.00   1.00    0.00   0.00   0.00    0.00    0.00    0.00   2.00</span><br><span class="line"></span><br><span class="line">07:38:50 PM    2  98.00   0.00   1.00    0.00   0.00   0.00    0.00    0.00    0.00   1.00</span><br><span class="line"></span><br><span class="line">07:38:50 PM    3  96.97   0.00   0.00    0.00   0.00   0.00    0.00    0.00    0.00   3.03</span><br><span class="line"></span><br><span class="line">[...]</span><br></pre></td></tr></table></figure>

<p>该命令可以显示每个CPU的占用情况，如果有一个CPU占用率特别高，那么有可能是一个单线程应用程序引起的。</p>
<h2 id="pidstat-1"><a href="#pidstat-1" class="headerlink" title="pidstat 1"></a>pidstat 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ pidstat 1</span><br><span class="line"></span><br><span class="line">Linux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015    _x86_64_    (32 CPU)</span><br><span class="line"></span><br><span class="line">07:41:02 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</span><br><span class="line"></span><br><span class="line">07:41:03 PM     0         9    0.00    0.94    0.00    0.94     1  rcuos/0</span><br><span class="line"></span><br><span class="line">07:41:03 PM     0      4214    5.66    5.66    0.00   11.32    15  mesos-slave</span><br><span class="line"></span><br><span class="line">07:41:03 PM     0      4354    0.94    0.94    0.00    1.89     8  java</span><br><span class="line"></span><br><span class="line">07:41:03 PM     0      6521 1596.23    1.89    0.00 1598.11    27  java</span><br><span class="line"></span><br><span class="line">07:41:03 PM     0      6564 1571.70    7.55    0.00 1579.25    28  java</span><br><span class="line"></span><br><span class="line">07:41:03 PM 60004     60154    0.94    4.72    0.00    5.66     9  pidstat</span><br><span class="line"></span><br><span class="line">07:41:03 PM   UID       PID    %usr %system  %guest    %CPU   CPU  Command</span><br><span class="line"></span><br><span class="line">07:41:04 PM     0      4214    6.00    2.00    0.00    8.00    15  mesos-slave</span><br><span class="line"></span><br><span class="line">07:41:04 PM     0      6521 1590.00    1.00    0.00 1591.00    27  java07:41:04 PM     0      6564 1573.00   10.00    0.00 1583.00    28  java</span><br><span class="line"></span><br><span class="line">07:41:04 PM   108      6718    1.00    0.00    0.00    1.00     0  snmp-pass</span><br><span class="line"></span><br><span class="line">07:41:04 PM 60004     60154    1.00    4.00    0.00    5.00     9  pidstat</span><br><span class="line"></span><br><span class="line">^C</span><br></pre></td></tr></table></figure>

<p>pidstat命令输出进程的CPU占用率，该命令会持续输出，并且不会覆盖之前的数据，可以方便观察系统动态。如上的输出，可以看见两个JAVA进程占用了将近1600%的CPU时间，既消耗了大约16个CPU核心的运算资源。</p>
<h2 id="iostat-xz-1"><a href="#iostat-xz-1" class="headerlink" title="iostat-xz 1"></a>iostat-xz 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ iostat -xz 1</span><br><span class="line"></span><br><span class="line">Linux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015  _x86_64_ (32 CPU)</span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %nice %system %iowait  %steal   %idle</span><br><span class="line"></span><br><span class="line">          73.96    0.00    3.73    0.03    0.06   22.21</span><br><span class="line"></span><br><span class="line">Device:   rrqm/s   wrqm/s     r/s     w/s    rkB/s    wkB/s avgrq-sz avgqu-sz   await r_await w_await  svctm  %util</span><br><span class="line"></span><br><span class="line">xvda        0.00     0.23    0.21    0.18     4.52     2.08    34.37     0.00    9.98   13.80    5.42   2.44   0.09</span><br><span class="line"></span><br><span class="line">xvdb        0.01     0.00    1.02    8.94   127.97   598.53   145.79     0.00    0.43    1.78    0.28   0.25   0.25</span><br><span class="line"></span><br><span class="line">xvdc        0.01     0.00    1.02    8.86   127.79   595.94   146.50     0.00    0.45    1.82    0.30   0.27   0.26</span><br><span class="line"></span><br><span class="line">dm-0        0.00     0.00    0.69    2.32    10.47    31.69    28.01     0.01    3.23    0.71    3.98   0.13   0.04</span><br><span class="line"></span><br><span class="line">dm-1        0.00     0.00    0.00    0.94     0.01     3.78     8.00     0.33  345.84    0.04  346.81   0.01   0.00</span><br><span class="line"></span><br><span class="line">dm-2        0.00     0.00    0.09    0.07     1.35     0.36    22.50     0.00    2.55    0.23    5.62   1.78   0.03</span><br><span class="line"></span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line">^C</span><br></pre></td></tr></table></figure>

<p>iostat命令主要用于查看机器磁盘IO情况。该命令输出的列，主要含义是：</p>
<ul>
<li><p>r/s, w/s, rkB/s, wkB/s：分别表示每秒读写次数和每秒读写数据量（千字节）。读写量过大，可能会引起性能问题。</p>
</li>
<li><p>await：IO操作的平均等待时间，单位是毫秒。这是应用程序在和磁盘交互时，需要消耗的时间，包括IO等待和实际操作的耗时。如果这个数值过大，可能是硬件设备遇到了瓶颈或者出现故障。</p>
</li>
<li><p>avgqu-sz：向设备发出的请求平均数量。如果这个数值大于1，可能是硬件设备已经饱和（部分前端硬件设备支持并行写入）。</p>
</li>
<li><p>%util：设备利用率。这个数值表示设备的繁忙程度，经验值是如果超过60，可能会影响IO性能（可以参照IO操作平均等待时间）。如果到达100%，说明硬件设备已经饱和。</p>
</li>
</ul>
<p>如果显示的是逻辑设备的数据，那么设备利用率不代表后端实际的硬件设备已经饱和。值得注意的是，即使IO性能不理想，也不一定意味这应用程序性能会不好，可以利用诸如预读取、写缓存等策略提升应用性能。</p>
<h2 id="free-m"><a href="#free-m" class="headerlink" title="free -m"></a>free -m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ free -m</span><br><span class="line"></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line"></span><br><span class="line">Mem:        245998      24545     221453         83         59        541</span><br><span class="line"></span><br><span class="line">-/+ buffers/cache:      23944     222053</span><br><span class="line"></span><br><span class="line">Swap:            0          0          0</span><br></pre></td></tr></table></figure>

<p>free命令可以查看系统内存的使用情况，-m参数表示按照兆字节展示。最后两列分别表示用于IO缓存的内存数，和用于文件系统页缓存的内存数。需要注意的是，第二行-/+ buffers/cache，看上去缓存占用了大量内存空间。</p>
<p>这是Linux系统的内存使用策略，尽可能的利用内存，如果应用程序需要内存，这部分内存会立即被回收并分配给应用程序。因此，这部分内存一般也被当成是可用内存。</p>
<p>如果可用内存非常少，系统可能会动用交换区（如果配置了的话），这样会增加IO开销（可以在iostat命令中提现），降低系统性能。</p>
<h2 id="sar-n-DEV-1"><a href="#sar-n-DEV-1" class="headerlink" title="sar -n DEV 1"></a>sar -n DEV 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ sar -n DEV 1</span><br><span class="line"></span><br><span class="line">Linux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015     _x86_64_    (32 CPU)</span><br><span class="line"></span><br><span class="line">12:16:48 AM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line"></span><br><span class="line">12:16:49 AM      eth0  18763.00   5032.00  20686.42    478.30      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">12:16:49 AM        lo     14.00     14.00      1.36      1.36      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">12:16:49 AM   docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">12:16:49 AM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil</span><br><span class="line"></span><br><span class="line">12:16:50 AM      eth0  19763.00   5101.00  21999.10    482.56      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">12:16:50 AM        lo     20.00     20.00      3.25      3.25      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">12:16:50 AM   docker0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">^C</span><br></pre></td></tr></table></figure>

<p>sar命令在这里可以查看网络设备的吞吐率。在排查性能问题时，可以通过网络设备的吞吐量，判断网络设备是否已经饱和。如示例输出中，eth0网卡设备，吞吐率大概在22 Mbytes/s，既176 Mbits/sec，没有达到1Gbit/sec的硬件上限。</p>
<h2 id="sar-n-TCP-ETCP-1"><a href="#sar-n-TCP-ETCP-1" class="headerlink" title="sar -n TCP,ETCP 1"></a>sar -n TCP,ETCP 1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ sar -n TCP,ETCP 1</span><br><span class="line"></span><br><span class="line">Linux 3.13.0-49-generic (titanclusters-xxxxx)  07/14/2015    _x86_64_    (32 CPU)</span><br><span class="line"></span><br><span class="line">12:17:19 AM  active/s passive/s    iseg/s    oseg/s</span><br><span class="line"></span><br><span class="line">12:17:20 AM      1.00      0.00  10233.00  18846.00</span><br><span class="line"></span><br><span class="line">12:17:19 AM  atmptf/s  estres/s retrans/s isegerr/s   orsts/s</span><br><span class="line"></span><br><span class="line">12:17:20 AM      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">12:17:20 AM  active/s passive/s    iseg/s    oseg/s</span><br><span class="line"></span><br><span class="line">12:17:21 AM      1.00      0.00   8359.00   6039.00</span><br><span class="line"></span><br><span class="line">12:17:20 AM  atmptf/s  estres/s retrans/s isegerr/s   orsts/s</span><br><span class="line"></span><br><span class="line">12:17:21 AM      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">^C</span><br></pre></td></tr></table></figure>

<p>sar命令在这里用于查看TCP连接状态，其中包括：</p>
<ul>
<li><p>active/s：每秒本地发起的TCP连接数，既通过connect调用创建的TCP连接；</p>
</li>
<li><p>passive/s：每秒远程发起的TCP连接数，即通过accept调用创建的TCP连接；</p>
</li>
<li><p>retrans/s：每秒TCP重传数量；</p>
</li>
</ul>
<p>TCP连接数可以用来判断性能问题是否由于建立了过多的连接，进一步可以判断是主动发起的连接，还是被动接受的连接。TCP重传可能是因为网络环境恶劣，或者服务器压力过大导致丢包。</p>
<h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ top</span><br><span class="line"></span><br><span class="line">top - 00:15:40 up 21:56,  1 user,  load average: 31.09, 29.87, 29.92</span><br><span class="line"></span><br><span class="line">Tasks: 871 total,   1 running, 868 sleeping,   0 stopped,   2 zombie</span><br><span class="line"></span><br><span class="line">%Cpu(s): 96.8 us,  0.4 sy,  0.0 ni,  2.7 id,  0.1 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line"></span><br><span class="line">KiB Mem:  25190241+total, 24921688 used, 22698073+free,    60448 buffers</span><br><span class="line"></span><br><span class="line">KiB Swap:        0 total,        0 used,        0 free.   554208 cached Mem</span><br><span class="line"></span><br><span class="line">   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"></span><br><span class="line"> 20248 root      20   0  0.227t 0.012t  18748 S  3090  5.2  29812:58 java</span><br><span class="line"></span><br><span class="line">  4213 root      20   0 2722544  64640  44232 S  23.5  0.0 233:35.37 mesos-slave</span><br><span class="line"></span><br><span class="line"> 66128 titancl+  20   0   24344   2332   1172 R   1.0  0.0   0:00.07 top</span><br><span class="line"></span><br><span class="line">  5235 root      20   0 38.227g 547004  49996 S   0.7  0.2   2:02.74 java</span><br><span class="line"></span><br><span class="line">  4299 root      20   0 20.015g 2.682g  16836 S   0.3  1.1  33:14.42 java     1 root      20   0   33620   2920   1496 S   0.0  0.0   0:03.82 init</span><br><span class="line"></span><br><span class="line">     2 root      20   0       0      0      0 S   0.0  0.0   0:00.02 kthreadd</span><br><span class="line"></span><br><span class="line">     3 root      20   0       0      0      0 S   0.0  0.0   0:05.35 ksoftirqd/0</span><br><span class="line"></span><br><span class="line">     5 root       0 -20       0      0      0 S   0.0  0.0   0:00.00 kworker/0:0H</span><br><span class="line"></span><br><span class="line">     6 root      20   0       0      0      0 S   0.0  0.0   0:06.94 kworker/u256:0</span><br><span class="line"></span><br><span class="line">     8 root      20   0       0      0      0 S   0.0  0.0   2:38.05 rcu_sched</span><br></pre></td></tr></table></figure>

<p>top命令包含了前面好几个命令的检查的内容。比如系统负载情况（uptime）、系统内存使用情况（free）、系统CPU使用情况（vmstat）等。因此通过这个命令，可以相对全面的查看系统负载的来源。同时，top命令支持排序，可以按照不同的列排序，方便查找出诸如内存占用最多的进程、CPU占用率最高的进程等。</p>
<p>但是，top命令相对于前面一些命令，输出是一个瞬间值，如果不持续盯着，可能会错过一些线索。这时可能需要暂停top命令刷新，来记录和比对数据。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>排查Linux服务器性能问题还有很多工具，上面介绍的一些命令，可以帮助我们快速的定位问题。例如前面的示例输出，多个证据证明有JAVA进程占用了大量CPU资源，之后的性能调优就可以针对应用程序进行。</p>
<p>原文链接：<br><a href="http://techblog.netflix.com/2015/11/linux-performance-analysis-in-60s.html" target="_blank" rel="noopener">http://techblog.netflix.com/2015/11/linux-performance-analysis-in-60s.html</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[运算符，；的优先级]]></title>
      <url>http://www.wulai.me/2016/09/18/%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%8C%EF%BC%9B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>今天看一段anguarjs的代码发现，有一段for语句后面没有｛｝，后面跟着3个表达式，中间用<code>,</code>分割.但是觉得很奇怪，写段代码测试一下，发觉用<code>,</code>分割语句会连续执行。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b=1;</span><br><span class="line">for(i=0;i&lt;5;i++)a=1,b++;</span><br><span class="line">console.log(b);</span><br></pre></td></tr></table></figure>

<p>返回值<code>6</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b=1;</span><br><span class="line">for(i=0;i&lt;5;i++)a=1;b++;</span><br><span class="line">console.log(b);</span><br></pre></td></tr></table></figure>

<p>返回值<code>2</code></p>
<p>后来查找了一下<code>,</code>从左到右依次运算。属于表达式</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker client is newer than server]]></title>
      <url>http://www.wulai.me/2016/09/12/Docker-client-is-newer-than-server/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>###Docker client is newer than server<br>执行<code>docker pull voduytuan/jenkins-php-docker</code>时出错</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Using default tag: latest</span><br><span class="line">Warning: failed to get default registry endpoint from daemon (Error response from daemon: client is newer than server (client API version: 1.24, server API version: 1.23)). Using system default: https://index.docker.io/v1/</span><br><span class="line">Error response from daemon: client is newer than server (client API version: 1.24, server API version: 1.23)</span><br></pre></td></tr></table></figure>

<p>执行命令<br><code>export DOCKER_API_VERSION=1.23</code> solved my problem. </p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx/php-fpm 访问php文件直接下载而不运行]]></title>
      <url>http://www.wulai.me/2016/09/10/nginx-php-fpm-%E8%AE%BF%E9%97%AEphp%E6%96%87%E4%BB%B6%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E8%80%8C%E4%B8%8D%E8%BF%90%E8%A1%8C/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>一般都是由于nginx的配置文件引起的。注意一下部分<code>fastcgi_param</code>,默认为<code>/script$fastcgi_script_name</code>,修改为<code>$document_root$fastcgi_script_name</code>可以解决</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">           root          /data/nginx/www.123.com;</span><br><span class="line">           fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">           fastcgi_index  index.php;</span><br><span class="line">           fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">           include        fastcgi_params;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[svn externals]]></title>
      <url>http://www.wulai.me/2016/09/09/svn-externals/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="Externals-Definitions"><a href="#Externals-Definitions" class="headerlink" title="Externals Definitions"></a>Externals Definitions</h1><p>Sometimes it is useful to construct a working copy that is made out of a number of different checkouts. For example, you may want different subdirectories to come from different locations in a repository, or perhaps from different repositories altogether. You could certainly setup such a scenario by hand—using <code>svn checkout</code> to create the sort of nested working copy structure you are trying to achieve. But if this layout is important for everyone who uses your repository, every other user will need to perform the same checkout operations that you did.</p>
<p>Fortunately, Subversion provides support for externals definitions. An externals definition is a mapping of a local directory to the URL—and possibly a particular revision—of a versioned resource. In Subversion, you declare externals definitions in groups using the <code>svn:externals</code> property. You can create or modify this property using <code>svn propset</code> or <code>svn propedit</code> (see <a href="http://svnbook.red-bean.com/en/1.0/ch07s02.html#svn-ch-7-sect-2.1" target="_blank" rel="noopener">the section called “Why Properties?”</a>). It can be set on any versioned directory, and its value is a multi-line table of subdirectories (relative to the versioned directory on which the property is set) and fully qualified, absolute Subversion repository URLs.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ svn propget svn:externals calc</span><br><span class="line">third-party/sounds             http://sounds.red-bean.com/repos</span><br><span class="line">third-party/skins              http://skins.red-bean.com/repositories/skinproj</span><br><span class="line">third-party/skins/toolkit -r21 http://svn.red-bean.com/repos/skin-maker</span><br></pre></td></tr></table></figure>

<p>he convenience of the svn:externals property is that once it is set on a versioned directory, everyone who checks out a working copy with that directory also gets the benefit of the externals definition. In other words, once one person has made the effort to define those nested working copy checkouts, no one else has to bother—Subversion will, upon checkout of the original working copy, also checkout the external working copies.</p>
<p>Note the previous externals definition example. When someone checks out a working copy of the calc directory, Subversion also continues to checkout the items found in its externals definition.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ svn checkout http://svn.example.com/repos/calc</span><br><span class="line">A  calc</span><br><span class="line">A  calc/Makefile</span><br><span class="line">A  calc/integer.c</span><br><span class="line">A  calc/button.c</span><br><span class="line">Checked out revision 148.</span><br><span class="line"></span><br><span class="line">Fetching external item into calc/third-party/sounds</span><br><span class="line">A  calc/third-party/sounds/ding.ogg</span><br><span class="line">A  calc/third-party/sounds/dong.ogg</span><br><span class="line">A  calc/third-party/sounds/clang.ogg</span><br><span class="line">…</span><br><span class="line">A  calc/third-party/sounds/bang.ogg</span><br><span class="line">A  calc/third-party/sounds/twang.ogg</span><br><span class="line">Checked out revision 14.</span><br><span class="line"></span><br><span class="line">Fetching external item into calc/third-party/skins</span><br><span class="line">…</span><br></pre></td></tr></table></figure>

<p>If you need to change the externals definition, you can do so using the regular property modification subcommands. When you commit a change to the <code>svn:externals</code> property, Subversion will synchronize the checked-out items against the changed externals definition when you next run <code>svn update</code>. The same thing will happen when others update their working copies and receive your changes to the externals definition.</p>
<p>The <code>svn status</code> command also recognizes externals definitions, displaying a status code of X for the disjoint subdirectories into which externals are checked out, and then recursing into those subdirectories to display the status of the external items themselves.</p>
<p>The support that exists for externals definitions in Subversion today can be a little misleading, though. First, an externals definition can only point to directories, not files. Second, the externals definition cannot point to relative paths (paths like ../../skins/myskin). Third, the working copies created via the externals definition support are still disconnected from the primary working copy (on whose versioned directories the <code>svn:externals</code> property was actually set). And Subversion still only truly operates on non-disjoint working copies. So, for example, if you want to commit changes that you’ve made in one or more of those external working copies, you must run <code>svn commit</code> explicitly on those working copies—committing on the primary working copy will not recurse into any external ones.</p>
<p>Also, since the definitions themselves use absolute URLs, moving or copying a directory to which they are attached will not affect what gets checked out as an external (though the relative local target subdirectory will, of course, move with renamed directory). This can be confusing—even frustrating—in certain situations. For example, if you use externals definitions on a directory in your /trunk development line which point to other areas of that same line, and then you use <code>svn copy</code> to branch that line to some new location /branches/my-branch, the externals definitions on items in your new branch will still refer to versioned resources in /trunk. Also, be aware that if you need to re-parent your working copy (using svn switch –relocate), externals definitions will not also be re-parented.</p>
<h1 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn propdel -R svn:externals</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn propdel PROPNAME</span><br></pre></td></tr></table></figure>

]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[linux 如何显示一个文件的某几行(中间几行)]]></title>
      <url>http://www.wulai.me/2016/07/06/linux-e5-a6-82-e4-bd-95-e6-98-be-e7-a4-ba-e4-b8-80-e4-b8-aa-e6-96-87-e4-bb-b6-e7-9a-84-e6-9f-90-e5-87-a0-e8-a1-8c-e4-b8-ad-e9-97-b4-e5-87-a0-e8-a1-8c/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="1、从第3000行开始，显示1000行。即显示3000-3999行"><a href="#1、从第3000行开始，显示1000行。即显示3000-3999行" class="headerlink" title="1、从第3000行开始，显示1000行。即显示3000~3999行"></a>1、从第3000行开始，显示1000行。即显示3000~3999行</h3><pre><code>cat filename | tail -n +3000 | head -n 1000</code></pre><h3 id="2、显示1000行到3000行"><a href="#2、显示1000行到3000行" class="headerlink" title="2、显示1000行到3000行"></a>2、显示1000行到3000行</h3><pre><code>cat filename| head -n 3000 | tail -n +1000</code></pre><p><code>*注意两种方法的顺序</code></p>
<blockquote>
<p>分解：<br>       tail -n 1000：显示最后1000行<br>       tail -n +1000：从1000行开始显示，显示1000行以后的<br>       head -n 1000：显示前面1000行</p>
</blockquote>
<h2 id="3、用sed命令"><a href="#3、用sed命令" class="headerlink" title="3、用sed命令"></a>3、用sed命令</h2><pre><code>sed -n &apos;5,10p&apos; filename</code></pre><p>这样你就可以只查看文件的第5行到第10行。</p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker - dial tcp: lookup index.docker.io: no such host - Solution]]></title>
      <url>http://www.wulai.me/2016/06/28/docker-dial-tcp-lookup-index-docker-io-no-such-host-solution/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1-Symptoms"><a href="#1-Symptoms" class="headerlink" title="1. Symptoms"></a>1. Symptoms</h2><p>While using Docker a user is unable to perform tasks such as pull new image or search for new images while the following error message appears:</p>
<pre><code># docker pull debian:8
Pulling repository debian
FATA[0053] Get https://index.docker.io/v1/repositories/library/debian/images: dial tcp: lookup index.docker.io: no such host</code></pre><h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>While this is a randomly occurring error it is frequently linked to a DNS resolution query by docker services. First, make sure you are running up to date docker installation. If this does not resolve your issue then try to resolve this error by restarting your docker service:</p>
<pre><code># service docker restart
Redirecting to /bin/systemctl restart  docker.service</code></pre><p>In case that you are unable to restart your docker service at a present time you my try to temporarily resolve this issue by including the IP address of the host in question eg. <code>index.docker.io</code> to your <code>/etc/hosts</code> file. Resolve the IP address:</p>
<pre><code># dig index.docker.io +noall +answer +nocomments

; &lt;&lt;&gt;&gt; DiG 9.9.4-P2-RedHat-9.9.4-18.P2.fc20 &lt;&lt;&gt;&gt; index.docker.io +noall +answer +nocomments
;; global options: +cmd
index.docker.io.        30      IN      A       162.242.195.84</code></pre><p>Next, include the IP address to your system’s <code>/etc/hosts</code> file:</p>
<pre><code># echo &apos;162.242.195.84 index.docker.io&apos; &gt;&gt; /etc/hosts</code></pre>]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[svn local obstruction, incoming add upon merge]]></title>
      <url>http://www.wulai.me/2016/05/24/svn-local-obstruction-incoming-add-upon-merge/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>If you’ve found this entry, you probably ran into your first SVN Tree conflict. This is also called an ‘evil twin conflict’ in some other revision control systems.</p>
<p>The message generated by svn merge or later svn stat operations will look something like this:</p>
<pre><code>A     C web-app/images/widget.png
      &gt;   local obstruction, incoming add upon merge
...
Summary of conflicts:
  Tree conflicts: 1</code></pre><h2 id="The-Cause"><a href="#The-Cause" class="headerlink" title="The Cause"></a>The Cause</h2><pre><code>This special conflict message is created when the same file has been added to both the place your merging from as well as the place your merging to since the last merge. Since these evil twins both have completely different histories and no common state (as would exist if the image had been added before you branched), svn is totally unable to provide you advice. This is why you will see no `merge-left` or `merge-right` files.</code></pre><h2 id="The-Solution"><a href="#The-Solution" class="headerlink" title="The Solution"></a>The Solution</h2><pre><code>In the example above the same binary file has been added to both a branch and a trunk. Since the image is identical, the solution was simply to pick one. I picked the working copy.

    svn resolve --accept working ./web-app/images/widget.png


Another possible case is that two totally different files have been checked in with the same name and path. In this case, you’re going to need to rename one version and refactor the rest of your code to accommodate that name change. SVN has no easy way to do this so you’ll need to do it manually.

The last case is that the same file has been created but you need a super set of the functionality provided by both versions. Again, SVN does not offer any speedy tools for this so you’ll simply need to do a manual merger.</code></pre><h3 id="一次修复所有的错误信息"><a href="#一次修复所有的错误信息" class="headerlink" title="一次修复所有的错误信息"></a>一次修复所有的错误信息</h3><pre><code>svn st | awk &apos;{if ( $1 == &quot;C&quot;) { print $2}}&apos; | xargs svn resolve --accept working</code></pre>]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[查找大文件夹]]></title>
      <url>http://www.wulai.me/2016/05/20/e6-9f-a5-e6-89-be-e5-a4-a7-e6-96-87-e4-bb-b6-e5-a4-b9/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code>cd \
du -h --max-depth=1|grep G|sort -n</code></pre><p>找到最大的那个目录后进入该目录</p>
<p>再运行<br>    du -h –max-depth=1|grep G|-n</p>
<p>如果没有结果可以运行<br>    du -h –max-depth=1|grep M|sort -n</p>
<p>找出来以后看是否有用的文件</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git常用命令备忘]]></title>
      <url>http://www.wulai.me/2016/05/19/git-e5-b8-b8-e7-94-a8-e5-91-bd-e4-bb-a4-e5-a4-87-e5-bf-98/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><pre><code>git config --global user.name &quot;robbin&quot;   
git config --global user.email &quot;fankai@gmail.com&quot;
git config --global color.ui true
git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.br branch
git config --global core.editor &quot;mate -w&quot;    # 设置Editor使用textmate
git config -l  # 列举所有配置</code></pre><p>用户的git配置文件<code>~/.gitconfig</code></p>
<h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><p>查看、添加、提交、删除、找回，重置修改文件</p>
<pre><code>git help &lt;command&gt;  # 显示command的help
git show            # 显示某次提交的内容
git show $id

git co  -- &lt;file&gt;   # 抛弃工作区修改
git co  .           # 抛弃工作区修改

git add &lt;file&gt;      # 将工作文件修改提交到本地暂存区
git add .           # 将所有修改过的工作文件提交暂存区

git rm &lt;file&gt;       # 从版本库中删除文件
git rm &lt;file&gt; --cached  # 从版本库中删除文件，但不删除文件

git reset &lt;file&gt;    # 从暂存区恢复到工作文件
git reset -- .      # 从暂存区恢复到工作文件
git reset --hard    # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改

git ci &lt;file&gt;
git ci .
git ci -a           # 将git add, git rm和git ci等操作都合并在一起做
git ci -am &quot;some comments&quot;
git ci --amend      # 修改最后一次提交记录

git revert &lt;$id&gt;    # 恢复某次提交的状态，恢复动作本身也创建了一次提交对象
git revert HEAD     # 恢复最后一次提交的状态</code></pre><h2 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h2><pre><code>git diff &lt;file&gt;     # 比较当前文件和暂存区文件差异
git diff
git diff &lt;$id1&gt; &lt;$id2&gt;   # 比较两次提交之间的差异
git diff &lt;branch1&gt;..&lt;branch2&gt; # 在两个分支之间比较
git diff --staged   # 比较暂存区和版本库差异
git diff --cached   # 比较暂存区和版本库差异
git diff --stat     # 仅仅比较统计信息</code></pre><h2 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h2><pre><code>git log
git log &lt;file&gt;      # 查看该文件每次提交记录
git log -p &lt;file&gt;   # 查看每次详细修改内容的diff
git log -p -2       # 查看最近两次详细修改内容的diff
git log --stat      # 查看提交统计信息</code></pre><h2 id="tig"><a href="#tig" class="headerlink" title="tig"></a>tig</h2><pre><code>Mac上可以使用tig代替diff和log， `brew install tig`</code></pre><h2 id="Git-本地分支管理"><a href="#Git-本地分支管理" class="headerlink" title="Git 本地分支管理"></a>Git 本地分支管理</h2><p>查看、切换、创建和删除分支</p>
<pre><code>git br -r           # 查看远程分支
git br &lt;new_branch&gt; # 创建新的分支
git br -v           # 查看各个分支最后提交信息
git br --merged     # 查看已经被合并到当前分支的分支
git br --no-merged  # 查看尚未被合并到当前分支的分支

git co &lt;branch&gt;     # 切换到某个分支
git co -b &lt;new_branch&gt; # 创建新的分支，并且切换过去
git co -b &lt;new_branch&gt; &lt;branch&gt;  # 基于branch创建新的new_branch

git co $id          # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除
git co $id -b &lt;new_branch&gt;  # 把某次历史提交记录checkout出来，创建成一个分支

git br -d &lt;branch&gt;  # 删除某个分支
git br -D &lt;branch&gt;  # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</code></pre><h2 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h2><pre><code>git merge &lt;branch&gt;               # 将branch分支合并到当前分支
git merge origin/master --no-ff  # 不要Fast-Foward合并，这样可以生成merge提交

git rebase master &lt;branch&gt;       # 将master rebase到branch，相当于：
git co &lt;branch&gt; &amp;amp;&amp;amp; git rebase master &amp;amp;&amp;amp; git co master &amp;amp;&amp;amp; git merge &lt;branch&gt;</code></pre><h2 id="Git补丁管理-方便在多台机器上开发同步时用"><a href="#Git补丁管理-方便在多台机器上开发同步时用" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h2><pre><code>git merge &lt;branch&gt;               # 将branch分支合并到当前分支
git merge origin/master --no-ff  # 不要Fast-Foward合并，这样可以生成merge提交

git rebase master &lt;branch&gt;       # 将master rebase到branch，相当于：
git co &lt;branch&gt; &amp;amp;&amp;amp; git rebase master &amp;amp;&amp;amp; git co master &amp;amp;&amp;amp; git merge &lt;branch&gt;</code></pre><h2 id="Git补丁管理-方便在多台机器上开发同步时用-1"><a href="#Git补丁管理-方便在多台机器上开发同步时用-1" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h2><pre><code>git diff &gt; ../sync.patch         # 生成补丁
git apply ../sync.patch          # 打补丁
git apply --check ../sync.patch  # 测试补丁能否成功</code></pre><h2 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h2><pre><code>git stash                        # 暂存
git stash list                   # 列所有stash
git stash apply                  # 恢复暂存的内容
git stash drop                   # 删除暂存区</code></pre><h2 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h2><pre><code>git pull                         # 抓取远程仓库所有分支更新并合并到本地
git pull --no-ff                 # 抓取远程仓库所有分支更新并合并到本地，不要快进合并
git fetch origin                 # 抓取远程仓库更新
git merge origin/master          # 将远程主分支合并到本地当前分支
git co --track origin/branch     # 跟踪某个远程分支创建相应的本地分支
git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;  # 基于远程分支创建本地分支，功能同上

git push                         # push所有分支
git push origin master           # 将本地主分支推到远程主分支
git push -u origin master        # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)
git push origin &lt;local_branch&gt;   # 创建远程分支， origin是远程仓库名
git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;  # 创建远程分支
git push origin :&lt;remote_branch&gt;  #先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</code></pre><h2 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h2><pre><code>git remote -v                    # 查看远程服务器地址和仓库名称
git remote show origin           # 查看远程服务器仓库状态
git remote add origin git@github:robbin/robbin_site.git         # 添加远程仓库地址
git remote set-url origin git@github.com:robbin/robbin_site.git # 设置远程仓库地址(用于修改远程仓库地址)
git remote rm &lt;repository&gt;       # 删除远程仓库</code></pre><h2 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h2><pre><code>git clone --bare robbin_site robbin_site.git  # 用带版本的项目创建纯版本仓库
scp -r my_project.git git@git.csdn.net:~      # 将纯仓库上传到服务器上

mkdir robbin_site.git &amp;amp;&amp;amp; cd robbin_site.git &amp;amp;&amp;amp; git --bare init # 在服务器创建纯仓库
git remote add origin git@github.com:robbin/robbin_site.git    # 设置远程仓库地址
git push -u origin master                                      # 客户端首次提交
git push -u origin develop  # 首次将本地develop分支提交到远程develop分支，并且track

git remote set-head origin master   # 设置远程仓库的HEAD指向master分支</code></pre><p>也可以命令设置跟踪远程库和本地库</p>
<pre><code>git branch --set-upstream master origin/master
git branch --set-upstream develop origin/develop</code></pre>]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[traceroute 输出说明]]></title>
      <url>http://www.wulai.me/2016/05/19/traceroute-e8-be-93-e5-87-ba-e8-af-b4-e6-98-8e/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>In Cisco routers, the codes for a traceroute command reply are:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">! -- success</span><br><span class="line">* -- time out</span><br><span class="line">N -- network unreachable</span><br><span class="line">H -- host unreachable</span><br><span class="line">P -- protocol unreachable</span><br><span class="line">A -- admin denied</span><br><span class="line">Q -- source quench received (congestion)</span><br><span class="line">? -- unknown (any other ICMP message)</span><br></pre></td></tr></table></figure>

]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何调试PHP的Core之获取基本信息]]></title>
      <url>http://www.wulai.me/2016/05/14/e5-a6-82-e4-bd-95-e8-b0-83-e8-af-95php-e7-9a-84core-e4-b9-8b-e8-8e-b7-e5-8f-96-e5-9f-ba-e6-9c-ac-e4-bf-a1-e6-81-af/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>作者: Laruence(   )<br>本文地址: <a href="http://www.laruence.com/2011/06/23/2057.html" target="_blank" rel="noopener">http://www.laruence.com/2011/06/23/2057.html</a><br>转载请注明出处</p>
<p>其实一直想写这个系列, 但是一想到这个话题的宽泛性, 我就有点感觉无法组织.</p>
<p>今天我也不打算全部讲如何调试一个PHP的Core文件, 也不会介绍什么是Coredump, 选择一个相对比较简单的方向来介绍, 那就是如何从PHP的Core文件中获取一些对我们重演这个Core有帮助的信息.</p>
<p>在这个过程中, 会涉及到对PHP的函数调用, PHP的传参, PHP的一些全局变量的知识, 这些知识在我之前的文章中都有过涉及, 大家可以翻阅: 深入理解PHP原理之函数 深入理解PHP原理之变量作用域等等.</p>
<p>首先, 让我们生成一个供我们举例子的Core文件:</p>
<pre><code>&lt;?php
function recurse($num) {
      recurse(++$num);
}

recurse(0);</code></pre><p>运行这个PHP文件:</p>
<pre><code>$ php test.php
Segmentation fault (core dumped)</code></pre><p>这个PHP因为无线递归, 会导致爆栈, 从而造成 segment fault而在PHP的当前工作目录产生Coredump文件(如果你的系统没有产生Coredump文件, 那请查询ulimit的相关设置).</p>
<pre><code>$ ulimit -c unlimited
$ php test.php</code></pre><p>好, 现在, 让我们删除掉这个test.php, 忘掉上面的代码, 我们现在仅有的是这个Core文件, 任务是, 找出这个Core产生的原因, 以及发生时候的状态.</p>
<p>首先, 让我们用gdb打开这个core文件:</p>
<pre><code>$ gdb php -c core.31656</code></pre><p>会看到很多的信息, 首先让我们注意这段:</p>
<pre><code>Core was generated by `php test.php&apos;.
Program terminated with signal 11, Segmentation fault.</code></pre><p>他告诉我们Core发生的原因:”Segmentation fault”.</p>
<p>一般来说, 这种Core是最常见的, 解引用空指针, double free, 以及爆栈等等, 都会触发SIGSEGV, 继而默认的产生Coredump.</p>
<p>现在让我们看看Core发生时刻的堆栈:</p>
<pre><code>#0  execute (op_array=0xdc9a70) at /home/laruence/package/php-5.2.14/Zend/zend_vm_execute.h:53
53          memset(EX(CVs), 0, sizeof(zval**) * op_array-&gt;last_var);
(gdb) bt
#0  execute (op_array=0xdc9a70) at /home/laruence/package/php-5.2.14/Zend/zend_vm_execute.h:53
#1  0x00000000006ea263 in zend_do_fcall_common_helper_SPEC (execute_data=0x7fbf400210) at /home/laruence/package/php-5.2.14/Zend/zend_vm_execute.h:234
#2  0x00000000006e9f61 in execute (op_array=0xdc9a70) at /home/laruence/package/php-5.2.14/Zend/zend_vm_execute.h:92
#3  0x00000000006ea263 in zend_do_fcall_common_helper_SPEC (execute_data=0x7fbf400440) at /home/laruence/package/php-5.2.14/Zend/zend_vm_execute.h:234
#4  0x00000000006e9f61 in execute (op_array=0xdc9a70) at /home/laruence/package/php-5.2.14/Zend/zend_vm_execute.h:92
#5  0x00000000006ea263 in zend_do_fcall_common_helper_SPEC (execute_data=0x7fbf400670) at /home/laruence/package/php-5.2.14/Zend/zend_vm_execute.h:234
.....</code></pre><p>不停的按回车, 可以看到堆栈很深, 不停的是zend_do_fcall_common_helper_SPEC和execute的重复, 那么这基本就能断定是因为产生了无穷大的递归(不能一定说是无穷递归, 比如我之前文章中介绍深悉正则(pcre)最大回溯/递归限制). 从而造成爆栈产生的Core.</p>
<p>Ok, 那么现在让我们看看, Core发生在PHP的什么函数中, 在PHP中, 对于FCALL_* Opcode的handler来说, execute_data代表了当前函数调用的一个State, 这个State中包含了信息:</p>
<pre><code>(gdb)f 1
#1  0x00000000006ea263 in zend_do_fcall_common_helper_SPEC (execute_data=0x7fbf400210) at /home/laruence/package/php-5.2.14/Zend/zend_vm_execute.h:234
234               zend_execute(EG(active_op_array) TSRMLS_CC);
(gdb) p execute_data-&gt;function_state.function-&gt;common-&gt;function_name
$3 = 0x2a95b65a78 &quot;recurse&quot;
(gdb) p execute_data-&gt;function_state.function-&gt;op_array-&gt;filename
$4 = 0x2a95b632a0 &quot;/home/laruence/test.php&quot;
(gdb) p execute_data-&gt;function_state.function-&gt;op_array-&gt;line_start
$5 = 2</code></pre><p>现在我们得到, 在调用的PHP函数是recurse, 这个函数定义在/home/laruence/test.php的第二行</p>
<p>经过重复验证几个frame, 我们可以看出, 一直是在重复调用这个PHP函数.</p>
<p>要注意的是, 为了介绍查看执行信息的原理, 我才采用原生的gdb的print来查看, 其实我们还可以使用PHP源代码中提供的.gdbinit(gdb命令编写脚本), 来简单的获取到上面的信息:</p>
<pre><code>(gdb) source /home/laruence/package/php-5.2.14/.gdbinit
(gdb) zbacktrace
[0xbf400210] recurse() /home/laruence/test.php:3
[0xbf400440] recurse() /home/laruence/test.php:3
[0xbf400670] recurse() /home/laruence/test.php:3
[0xbf4008a0] recurse() /home/laruence/test.php:3
[0xbf400ad0] recurse() /home/laruence/test.php:3
[0xbf400d00] recurse() /home/laruence/test.php:3
[0xbf400f30] recurse() /home/laruence/test.php:3
[0xbf401160] recurse() /home/laruence/test.php:3
.....</code></pre><p>关于.gdbinit, 是一段小小的脚本文件, 定义了一些方便我们去调试PHP的Core, 大家也可以用文本编辑器打开, 看看里面定义的一些快捷的命令, 一般来说, 我常用的有:</p>
<pre><code>zbacktrace
print_ht**系列
zmemcheck</code></pre><p>OK, 回归正题, 我们现在知道, 问题发生在/home/laruence/test.php的recurse函数的递归调用上了.</p>
<p>现在, 让我们来看看, 在调用这个函数的时候的参数是什么?</p>
<p>PHP的参数传递是依靠一个全局Stack来完成的, 也就是EG(argument_stack), EG在非多线程情况下就是executor_globals, 它保持了很多执行状态. 而argument_statck就是参数的传递栈, 保存着对应PHP函数调用层数相当的调用参数.</p>
<p>要注意的是, 这个PHP函数调用堆栈(层数)不和gdb所看到的backtrace简单的一一对应, 所以参数也不能直接和gdb的backtrace对应起来, 需要单独分析:</p>
<pre><code>//先看看, 最后一次函数调用的参数数目是多少
(gdb) p (int )*(executor_globals-&gt;argument_stack-&gt;top_element - 2)
$13 = 1

//再看看, 最后一次函数调用的参数是什么
(gdb)  p **(zval **)(executor_globals-&gt;argument_stack-&gt;top_element - 3)
$2 = {value = {lval = 22445, dval = 1.1089303420906779e-319, str = {val = 0x57ad &lt;Address 0x57ad out of bounds&gt;, len = 7}, ht = 0x57ad, obj = {handle = 22445, handlers = 0x7}},
  refcount = 2, type = 1 &apos;\001&apos;, is_ref = 0 &apos;\0&apos;}</code></pre><p>好, 我们现在得到, 最后一次调用的参数是一个整数, 数值是22445</p>
<p>到了这一步, 我们就得到了这个Core发生的时刻的PHP层面的相关信息, 接下来, 就可以交给对应的PHP开发工程师来排查, 这个参数下, 可能造成的无穷大递归的原因, 从而修复这个问题..</p>
<p>后记: 调试PHP的Core是一个需要丰富经验的过程, 也许我今天介绍的这个例子太简单, 但是只要经常去挑战, 在遇到不懂的相关的知识的时候, 勇于去追根究底, 我相信大家终都可以成PHP Core杀手..</p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[知道这20个正则表达式，能让你少写1,000行代码]]></title>
      <url>http://www.wulai.me/2016/04/27/e7-9f-a5-e9-81-93-e8-bf-9920-e4-b8-aa-e6-ad-a3-e5-88-99-e8-a1-a8-e8-be-be-e5-bc-8f-ef-bc-8c-e8-83-bd-e8-ae-a9-e4-bd-a0-e5-b0-91-e5-86-991000-e8-a1-8c-e4-bb-a3-e7-a0-81/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>正则表达式，一个十分古老而又强大的文本处理工具，仅仅用一段非常简短的表达式语句，便能够快速实现一个非常复杂的业务逻辑。熟练地掌握正则表达式的话，能够使你的开发效率得到极大的提升。</p>
<p>正则表达式经常被用于字段或任意字符串的校验，如下面这段校验基本日期格式的JavaScript代码：</p>
<pre><code>var reg = /^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2})$/; 
var r = fieldValue.match(reg);             
if(r==null)alert(&apos;Date format error!&apos;);


下面是技匠整理的，在前端开发中经常使用到的20个正则表达式。</code></pre><ul>
<li><p>1、校验密码强度    密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间。</p>
<p>^(?=.<em>\d)(?=.</em>[a-z])(?=.*[A-Z]).{8,10}$</p>
</li>
</ul>
<ul>
<li><p>2、校验中文    字符串仅能是中文。</p>
<p>^[\u4e00-\u9fa5]{0,}$</p>
</li>
</ul>
<ul>
<li><p>3、由数字、26个英文字母或下划线组成的字符串</p>
<p>^\w+$</p>
</li>
</ul>
<ul>
<li><p>4、校验E-Mail 地址    同密码一样，下面是E-mail地址合规性的正则检查语句。</p>
<p>[\w!#$%&amp;’<em>+/=?^_`{|}~-]+(?:\.[\w!#$%&amp;’</em>+/=?^_`{|}~-]+)<em>@(?:[\w](?:[\w-]</em>[\w])?\.)+<a href="?:[\w-]*[\w]">\w</a>?</p>
</li>
</ul>
<ul>
<li><p>5、校验身份证号码</p>
<p>下面是身份证号码的正则校验。15 或 18位。</p>
<p>15位：</p>
<p>^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$</p>
</li>
</ul>
<pre><code>18位：

^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$</code></pre><ul>
<li><p>6、校验日期    “yyyy-mm-dd“ 格式的日期校验，已考虑平闰年。</p>
<p>^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$</p>
</li>
</ul>
<ul>
<li><p>7、校验金额    金额校验，精确到2位小数。</p>
<p>^[0-9]+(.[0-9]{2})?$</p>
</li>
</ul>
<ul>
<li><p>8、校验手机号    下面是国内 13、15、18开头的手机号正则表达式。</p>
<p>^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$</p>
</li>
</ul>
<ul>
<li><p>9、判断IE的版本    IE目前还没被完全取代，很多页面还是需要做版本兼容，下面是IE版本检查的表达式。</p>
<p>^.<em>MSIE <a href="?:\.[0-9]+">5-8</a>?(?!.*Trident\/[5-9]\.0).</em>$</p>
</li>
</ul>
<ul>
<li><p>10、校验IP-v4地址    IP4 正则语句。</p>
<p>\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b</p>
</li>
</ul>
<ul>
<li><p>11、校验IP-v6地址    IP6 正则语句。</p>
<p>(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))</p>
</li>
</ul>
<ul>
<li><p>12、检查URL的前缀    应用开发中很多时候需要区分请求是HTTPS还是HTTP，通过下面的表达式可以取出一个url的前缀然后再逻辑判断。</p>
<p>if (!s.match(/^[a-zA-Z]+:\/\//))<br>{</p>
<pre><code>s = &apos;http://&apos; + s;</code></pre><p>}</p>
</li>
</ul>
<ul>
<li><p>13、提取URL链接    下面的这个表达式可以筛选出一段文本中的URL。<br>^(f|ht){1}(tp|tps):&#92;/&#92;/([&#92;w-]+&#92;.)+[&#92;w-]+(&#92;/[&#92;w- ./?%&amp;=]*)?</p><p></p>
</li>
<li><p>14、文件路径及扩展名校验    验证文件路径和扩展名</p>
<p>^([a-zA-Z]\:|\\)\\([^\\]+\\)<em>[^\/:</em>?”&lt;&gt;|]+\.txt(l)?$</p>
</li>
</ul>
<ul>
<li><p>15、提取Color Hex Codes    有时需要抽取网页中的颜色代码，可以使用下面的表达式。</p>
<pre><code>\\#([a-fA-F]|[0-9]){3,6}</code></pre></li>
</ul>
<ul>
<li><p>16、提取网页图片    假若你想提取网页中所有图片信息，可以利用下面的表达式。</p>
<pre><code>\\&lt; *[img][^\\&gt;]*[src] *= *[\\&quot;\\&apos;]{0,1}([^\\&quot;\\&apos;\\ &gt;]*)</code></pre></li>
</ul>
<ul>
<li><p>17、提取页面超链接    提取html中的超链接。</p>
<pre><code>(&lt;a\\s*(?!.*\\brel=)[^&gt;]*)(href=&quot;https?://)((?!(?:(?:www\\.)?&apos;.implode(&apos;|(?:www\\.)?&apos;, $follow_list).&apos;))[^&quot;]+)&quot;((?!.*\\brel=)[^&gt;]*)(?:[^&gt;]*)&gt;</code></pre></li>
</ul>
<ul>
<li><p>18、精炼CSS    通过下面的表达式，可以搜索相同属性值的CSS，从而达到精炼代码的目的。</p>
<pre><code>^\\s*[a-zA-Z\\-]+\\s*[:]{1}\\s[a-zA-Z0-9\\s.#]+[;]{1}</code></pre></li>
</ul>
<ul>
<li><p>19、抽取注释    如果你需要移除HMTL中的注释，可以使用如下的表达式。</p>
 <!--(.*?)-->


</li>
</ul>
<ul>
<li><p>20、匹配HTML标签    通过下面的表达式可以匹配出HTML中的标签。</p>
<p>&lt;/?\w+((\s+\w+(\s<em>=\s</em>(?:”.<em>?”|’.</em>?’|[\^’”&gt;\s]+))?)+\s<em>|\s</em>)/?&gt;</p>
</li>
</ul>
<h2 id="正则表达式的相关语法"><a href="#正则表达式的相关语法" class="headerlink" title="正则表达式的相关语法"></a>正则表达式的相关语法</h2><p>下面是我找到的一张非常不错的正则表达式 Cheat Sheet，可以用来快速查找相关语法。
![正则表达图](http://res.hillock.com.cn/web/reg1)

</p><h2 id="学习正则表达式"><a href="#学习正则表达式" class="headerlink" title="学习正则表达式"></a>学习正则表达式</h2><p>我在网上看到了一篇相当不错的正则表达式快速学习指南，有兴趣继续深入学习的同学可以参考。<br><img src="http://res.hillock.com.cn/web/reg2" alt="图像"></p>
<h2 id="正则表达式在线测试工具"><a href="#正则表达式在线测试工具" class="headerlink" title="正则表达式在线测试工具"></a>正则表达式在线测试工具</h2><p>regex101是一个非常不错的正则表达式在线测试工具，你可以直接在线测试你的正则表达式哦。</p>
<p><img src="http://res.hillock.com.cn/web/reg3" alt="学习正则表达"></p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[linux ll命令列出文件制定的属性]]></title>
      <url>http://www.wulai.me/2016/04/25/linux-ll-e5-91-bd-e4-bb-a4-e5-88-97-e5-87-ba-e6-96-87-e4-bb-b6-e5-88-b6-e5-ae-9a-e7-9a-84-e5-b1-9e-e6-80-a7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><code>ll -Sh *.mp4 | grep ^[^d] | awk &#39;{print $5,$9;}&#39;</code></p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[［转］应用数据静态化架构高性能单页Web应用]]></title>
      <url>http://www.wulai.me/2016/04/12/ef-bc-bb-e8-bd-ac-ef-bc-bd-e5-ba-94-e7-94-a8-e6-95-b0-e6-8d-ae-e9-9d-99-e6-80-81-e5-8c-96-e6-9e-b6-e6-9e-84-e9-ab-98-e6-80-a7-e8-83-bd-e5-8d-95-e9-a1-b5web-e5-ba-94-e7-94-a8/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>在电商网站中，单页Web是非常常见的一种形式，比如首页、频道页、广告页等都属于单页应用。而这种页面是由模板+数据组成。传统的构建方式一般通过静态化实现。而这种方式的灵活性并不是很好，比如页面模板部分变更了需要重新全部生成。因此最好能有一种实现方式是可以实时动态渲染，以支持模板的多变性。另外也要考虑好如下几个问题：</p>
<li>
1、动态化模板渲染支持；
2、数据和模板的多版本化：生产版本、灰度版本和预发布版本；
3、版本回滚问题，假设当前发布的生产版本出问题了如何快速的回滚到上一个版本；
4、异常问题，假设渲染模板时遇到了异常情况（比如获取Redis出问题了），如何处理；
5、灰度发布问题，比如切20%量给灰度版本；
6、预发布问题，目的是在正式环境测试数据和模板的正确性。
 </li>

<p><strong>整体架构</strong></p>
<p>静态化页面的方案如下图所示：<br><img src="http://res.hillock.com.cn/web/640" alt="［转］应用数据静态化架构高性能单页Web应用" title="［转］应用数据静态化架构高性能单页Web应用"></p>
<p>直接将生成的静态页推送到相关服务器即可。使用这种方式要考虑文件操作的原子化问题（即从老版本切换到新版本如何做到文件操作原子化）。</p>
<p>而动态化方案的整体架构如下图所示，分为三大系统：CMS系统、控制系统和前端展示系统。<br><img src="http://res.hillock.com.cn/web/6402" alt="［转］应用数据静态化架构高性能单页Web应用" title="［转］应用数据静态化架构高性能单页Web应用"></p>
<p>###CMS系统<br>1、在CMS系统可以配置页面的模板和数据；<br>1.1、模板动态在CMS系统中维护，即模板不是一个静态文件，而是存储在CMS中的一条数据，最终发布到“发布数据存储Redis”中，前端展示系统从Redis中获取该模板进行渲染，从而前端展示系统更换了模板也不需要重启，纯动态维护模板数据；<br>2、原始数据存储到“元数据存储Mysql”中即可，比如频道页一般需要：前端访问的URL、分类、轮播图、商品楼层数据等；这些数据按照相应的维度存储在CMS系统中；<br>3、提供发布到“发布数据存储Redis”的控制，将CMS系统中的原始数据和模板数据组装成聚合数据（JSON存储）同步到“发布数据存储Redis”，以便前端展示系统获取进行展示；此处提供三个发布按钮：正式版本、灰度版本和预发布版本。</p>
<p>目前存在如下几个问题：<br>1、用户如访问<a href="http://channel.jd.com/fashion.html怎么定位到对应的聚合数据呢？" target="_blank" rel="noopener">http://channel.jd.com/fashion.html怎么定位到对应的聚合数据呢？</a> 我们可以在CMS元数据中定义URL作为KEY，如果没有URL，则使用ID作为KEY，或者自动生成一个URL。<br>2、多版本如何存储呢？ 使用Redis的Hash结构存储即可，KEY为URL（比如<a href="http://channel.jd.com/fashion.html），字段按照维度存储：正式版本使用当前时间戳存储（这样前端系统可以根据时间戳排序然后获取最新的版本）、预发布版本使用“predeploy”作为字段，灰度版本使用“abVersion”作为字段即可，这样就区分开了多版本。" target="_blank" rel="noopener">http://channel.jd.com/fashion.html），字段按照维度存储：正式版本使用当前时间戳存储（这样前端系统可以根据时间戳排序然后获取最新的版本）、预发布版本使用“predeploy”作为字段，灰度版本使用“abVersion”作为字段即可，这样就区分开了多版本。</a><br>3、灰度版本如何控制呢？这个通过控制系统的开关来控制如何灰度；<br>4、如何访问预发布版本呢？比如在URL参数总带上predeploy=true，另外可以限定只有内网可以访问或者访问时带上访问密码，比如pwd=absdfedwqdqw。<br>5、模板变更的历史数据校验问题？比如模板变更了，但是使用历史数据渲染该模板会出现问题，即模板要兼容历史数据的；此处的方案不存在这个问题，因为每次存储时是当时的模板快照，即数据快照和模板快照推送到“发布数据存储Redis”中。</p>
<p><strong>前端展示系统</strong><br>1、获取当前URL，使用URL作为KEY首先从本机“发布数据存储Redis”获取数据；<br>2、如果没有数据或者异常则从主“发布数据存储Redis”获取；<br>3、如果主“发布数据存储Redis”也发生了异常，那么会直接调用CMS系统暴露的API直接从元数据存储Mysql中获取数据进行处理。</p>
<p>展示系统的伪代码</p>
<pre><code>Java代码  
--1、加载Lua模块库  
local template = require(&quot;resty.template&quot;)  
template.load = function(s) return s end  

--2、动态获取模板  
local myTemplate = &quot;&lt;html&gt;{* title *}&lt;/html&gt;&quot;  
--3、动态获取数据  
local data = {title = &quot;iphone6s&quot;}  

--4、渲染模板  
local func = template.compile(myTemplate)  
local content = func(data)  

--5、通过ngx API输出内容  
ngx.say(content)  
即模板和数据都是动态获取的，然后使用动态获取的模板和数据进行渲染。</code></pre><p>此处假设最新版本的模板或数据有问题怎么办？这个可以从流程上避免：1、首先进行预发布版本发布，测试人员验证没问题后；2、接着发布灰度版本，在灰度时自动去掉CDN功能（即不设置页面的缓存时间），发布验证OK；3、发布正式版本即可；正式版本发布的5分钟内是不设置页面缓存的，这样就可以防止发版时遇到问题，但是问题版本已经在CDN上给全部用户造成问题。当然这个流程很麻烦，可以按照自己的场景进行简化。</p>
<p>控制系统<br>控制系统用于版本降级和灰度发布的，当然可以把这个功能放在CMS系统中实现。<br>版本降级：假设当前线上的版本遇到问题了，想要快速切换回上一个版本，可以使用控制系统实现，选中其中一个历史版本然后通知给前端展示系统即可，使用URL和当前版本的字段即可，这样前端展示系统就可以自动切换到选中的那个版本；当问题修复后，再删除该降级配置即切换回最新版本。<br>灰度发布：在控制系统控制哪些URL需要灰度发布和灰度发布的比例，同版本降级类似将相关的数据推送到前端展示系统即可，当不想灰度发布时删除相关数据即可。</p>
<p>数据和模板动态化</p>
<p>我们将数据和模板都进行动态化存储，这样可以在CMS进行数据和模板的变更；实现了前端和后端开发人员的分离；前端开发人员进行CMS数据配置和模板开发，而后端开发人员只进行系统的维护。另外因为模板的动态化存储，每次发布新的模板不需要老重启前端展示系统，后端开发人员更好地得到了解放。</p>
<p>模板和数据可以是一对多的关系，即一个模板可以被多个数据使用。假设模板发生变更后，我们可以批量推送模板关联的数据，首先进行预发布版本的发布，测试人员进行验证，验证没问题即可发布正式版本。</p>
<p>多版本机制</p>
<p>我们将数据和模板分为多版本后，可以实现：<br>预发布版本：更容易让测试人员在实际环境进行验证；<br>灰度版本：只需要简单的开关控制，就可以进行A/B测试；<br>正式版本：存储多个历史正式版本，假设最新的正式版本出现问题，可以非常快速的切换回之前的版本。</p>
<p>异常问题</p>
<p>其中一个担心就是本机从“发布数据存储Redis”和主“发布数据存储Redis”都挂了，那么我们直接调用CMS系统暴露的HTTP服务直接从元数据存储Mysql获取数据。</p>
<p>另外一个担心是数据和模板获取到了，但是渲染模板出错了，比如遇到500、503；解决方案是：使用上一个版本的数据进行渲染。</p>
<p>另外还一种问题是数据和模板都没问题，但是因为一些疏忽，渲染出来的页面错乱了或者有些区域出现了空白；对于这种问题没有很好的解决方案；可以根据自己的场景定义异常扫描库，扫描当前版本有异常就发警告给相关人员，并自动降级到上一个版本。</p>
<p>来源：开涛的博客</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS下将MySQL 5.1升级到MySQL 5.5]]></title>
      <url>http://www.wulai.me/2016/04/01/centos-e4-b8-8b-e5-b0-86mysql-5-1-e5-8d-87-e7-ba-a7-e5-88-b0mysql-5-5/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>mysql 5.5已经出来有一段时间，性能有明显提升，特别是对多核CPU的支持与TPS性能的提升。上周博主介绍了linux下编译安装mysql 5.5的步骤，安装不出意外基本没有问题。不过可能很多朋友和我一样一直用的是mysql 5.1，现在想把数据库升级成5.5了。博主根据实际操作，记录这次升级操作。</p>
<p>mysql基础信息</p>
<p>1、安装目录<br><code>[root@vm-199~]# /usr/local/mysql</code><br>2、配置文件<br><code>[root@vm-199~]# /etc/my.cnf</code><br>3、数据目录<br><code>[root@vm-199~]# /data/mysql</code><br>4、启动脚本<br><code>[root@vm-199~]# /etc/init.d/mysql</code></p>
<p>备份数据和安装、配置文件</p>
<p><code>[root@vm-199~]# mysqldump -uroot -p –all-databases &lt;/root/zhangnq/mysql5.1/mysql_dbk_20140217.sql
[root@vm-199~]# tar czvf mysql_5.1.60_full.tar.gz /usr/local/mysql
[root@vm-199~]# tar czvf mysql_5.1.60_data_full.tar.gz /data/mysql
[root@vm-199~]# cp /etc/my.cnf  ./</code></p>
<p>数据备份好后关闭mysql数据库，<code>/etc/init.d/mysql stop</code>，删除/usr/local/mysql文件。</p>
<p>安装mysql 5.5</p>
<p>具体可以参考这篇文章《Linux下编译安装Mysql-5.5的简单步骤》（<a href="http://www.sijitao.net/1563.html），安装目录、数据目录和5.1的一样，都是/usr/local/mysql" target="_blank" rel="noopener">http://www.sijitao.net/1563.html），安装目录、数据目录和5.1的一样，都是/usr/local/mysql</a> 。</p>
<p>更新配置文件</p>
<p><code>[root@vm-199 mysql-5.5.35]# cp support-files/my-huge.cnf /etc/my.cnf</code></p>
<p>在配置文件中添加数据目录，datadir = /data/mysql 。</p>
<p>启动mysql 5.5，执行更新程序并重启mysql</p>
<p><code>[root@vm-199 mysql-5.5.35]# /etc/init.d/mysql start
[root@vm-199 mysql-5.5.35]# /usr/local/mysql/bin/mysql_upgrade
Looking for &#39;mysql&#39; as: /usr/local/mysql/bin/mysql
Looking for &#39;mysqlcheck&#39; as: /usr/local/mysql/bin/mysqlcheck
Running &#39;mysqlcheck&#39; with connection arguments: &#39;--port=3306&#39; &#39;--socket=/tmp/mysqld.sock&#39;
Running &#39;mysqlcheck&#39; with connection arguments: &#39;--port=3306&#39; &#39;--socket=/tmp/mysqld.sock&#39;
mydb.t1 OK
mydb.t2 OK
mysql.columns_priv OK
mysql.db OK
mysql.event OK
mysql.func OK
mysql.general_log OK
mysql.help_category OK
mysql.help_keyword OK
mysql.help_relation OK
mysql.help_topic OK
mysql.host OK
mysql.ndb_binlog_index OK
mysql.plugin OK
mysql.proc OK
mysql.procs_priv OK
mysql.proxies_priv OK
mysql.servers OK
mysql.slow_log OK
mysql.tables_priv OK
mysql.time_zone OK
mysql.time_zone_leap_second OK
mysql.time_zone_name OK
mysql.time_zone_transition OK
mysql.time_zone_transition_type OK
mysql.user OK
Running &#39;mysql_fix_privilege_tables&#39;...
OK</code><br>至此mysql已经更新好了。登陆mysql，检查数据是否和原来一样。</p>
<p>这个mysql升级其实不复杂，其实就是重新安装一遍，然后把数据目录文件覆盖一下。不过数据库升级，主要还是得注意数据备份，防止数据和意外丢失。</p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[svn: file is scheduled for addition, but is missing]]></title>
      <url>http://www.wulai.me/2016/03/16/svn-file-is-scheduled-for-addition-but-is-missing/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>svn提交错误file is scheduled for addition, but is missing</p>
<p><code>svn delete</code></p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[查找目录下的所有文件中是否含有某个字符串]]></title>
      <url>http://www.wulai.me/2016/03/01/e6-9f-a5-e6-89-be-e7-9b-ae-e5-bd-95-e4-b8-8b-e7-9a-84-e6-89-80-e6-9c-89-e6-96-87-e4-bb-b6-e4-b8-ad-e6-98-af-e5-90-a6-e5-90-ab-e6-9c-89-e6-9f-90-e4-b8-aa-e5-ad-97-e7-ac-a6-e4-b8-b2/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ul>
<li><p>查找目录下的所有文件中是否含有某个字符串<br><code>find .|xargs grep -ri &quot;IBM&quot;</code></p>
</li>
<li><p>查找目录下的所有文件中是否含有某个字符串,并且只打印出文件名<br><code>find .|xargs grep -ri &quot;IBM&quot; -l</code></p>
</li>
<li><p>仅查找文件<br><code>find . -type f|xargs grep -ri &quot;IBM&quot; -l</code></p>
</li>
<li><p>查找文件为0，包括空格处理<br><code>find . -type f -size 0c -print0 |xargs -0 ls -l {}</code></p>
</li>
<li><p>删除为0的文件<br><code>find . -type f -size 0c -print0 |xargs -0 ls -l {}</code></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何批量或者全部删除Linux的系统邮件？]]></title>
      <url>http://www.wulai.me/2016/01/21/e5-a6-82-e4-bd-95-e6-89-b9-e9-87-8f-e6-88-96-e8-80-85-e5-85-a8-e9-83-a8-e5-88-a0-e9-99-a4linux-e7-9a-84-e7-b3-bb-e7-bb-9f-e9-82-ae-e4-bb-b6-ef-bc-9f/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>CentOS Linux Server 会将许多系统运行的状态发邮件给管理员root用户，系统邮件存放在 /var/spool/mail/root 目录中，可以通过使用 mail 命令来查看邮件，但是时间长了，也会造成邮件过多，如何使用 Shell 命令来批量删除或者全部删除呢？</p>
<p>　　方法一：使用mail命令，然后在 &amp; 提示符下使用 d 命令（Delete），批量删除邮件，例如删除1~53邮件：</p>
<p>　　# mail<br>　　&amp; d 1-53</p>
<p>　　方法二：删除全部系统邮件</p>
<p>　　# &gt; /var/spool/mail/root    or  cat /dev/null &gt; /var/spool/mail/root</p>
<p>　　或者</p>
<p>　　# echo “d *” |mail -N</p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux 刪除 Delete all root mail]]></title>
      <url>http://www.wulai.me/2016/01/21/linux-e5-88-aa-e9-99-a4-delete-all-root-mail/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>有時候系統會提示收到郵件，通常是一些系統錯誤的通知，看完確認沒問題就可以刪了。</p>
<p>通知長得像這樣：<br>You have new mail in /var/spool/mail/root<br>刪除的方法很簡單，用以下兩種指令擇一即可。</p>
<p>cp /dev/null /var/spool/mail/root</p>
<blockquote>
<p>/var/spool/mail/root<br>  這樣就會清空root的mail。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[SSH免密码登录]]></title>
      <url>http://www.wulai.me/2016/01/17/ssh-e5-85-8d-e5-af-86-e7-a0-81-e7-99-bb-e5-bd-95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>在配置Hadoop集群分布时，要使用SSH免密码登录，假设现在有两台机器hadoop@wang-PC(192.168.10.100)，作为A机，hadoop@chen-PC(192.168.10.107)，作为B机。现想hadoop@wang-PC通过ssh免密码登录到hadoop@chen-PC。</p>
<h3 id="1-在A机下生成公钥-私钥对。"><a href="#1-在A机下生成公钥-私钥对。" class="headerlink" title="1.在A机下生成公钥/私钥对。"></a>1.在A机下生成公钥/私钥对。</h3><pre><code>[hadoop@wang-PC ~]$ ssh-keygen -t rsa -P &apos;&apos;</code></pre><p>敲击回车键即可，<br>它在/home/hadoop下生成.ssh目录，.ssh下有id_rsa和id_rsa.pub。</p>
<h3 id="2-把A机器下的id-rsa-pub复制到B机器下的-ssh-authorized-keys文件里。"><a href="#2-把A机器下的id-rsa-pub复制到B机器下的-ssh-authorized-keys文件里。" class="headerlink" title="2.把A机器下的id_rsa.pub复制到B机器下的.ssh/authorized_keys文件里。"></a>2.把A机器下的id_rsa.pub复制到B机器下的.ssh/authorized_keys文件里。</h3><pre><code>[hadoop@wang-PC ~]$ scp .ssh/id_rsa.pub hadoop@192.168.10.107:/home/hadoop/id_rsa.pub.hadoop_wang
hadoop@192.168.10.107&apos;s password:</code></pre><p>由于还没有免密码登录的，所以要输入密码。</p>
<h3 id="3-B机把从A机复制的id-rsa-pub-hadoop-wang添加到-ssh-authorzied-keys文件里。"><a href="#3-B机把从A机复制的id-rsa-pub-hadoop-wang添加到-ssh-authorzied-keys文件里。" class="headerlink" title="3.B机把从A机复制的id_rsa.pub.hadoop_wang添加到.ssh/authorzied_keys文件里。"></a>3.B机把从A机复制的id_rsa.pub.hadoop_wang添加到.ssh/authorzied_keys文件里。</h3><pre><code>[hadoop@chen-PC ~]$ cat id_rsa.pub.hadoop_wang &gt;&gt; .ssh/authorized_keys
  [hadoop@chen-PC ~]$ chmod 600 .ssh/authorized_keys</code></pre><p>authorized_keys的权限要是600。</p>
<p>4.A机登录B机。<br>    [hadoop@wang-PC ~]$ ssh 192.168.10.107<br>第一次登录是时要你输入yes。<br>现在A机可以无密码登录B机了。</p>
<p>小结：登录的机子可有私钥，被登录的机子要有登录机子的公钥。这个公钥/私钥对一般在私钥宿主机产生。上面是用rsa算法的公钥/私钥对，当然也可以用dsa(对应的文件是id_dsa，id_dsa.pub)<br>想让A，B机无密码互登录，那B机以上面同样的方式配置即可,把B的公钥复制过去添加到authorized_keys的末尾就行了。<br>至此完毕。</p>
<blockquote>
<blockquote>
<p>补充<br>    配置本地ssh config文件。执行：<br>    vi ~/.ssh/config<br>    加入以下内容：<br>    Host cssor_server  #别名，域名缩写<br>       HostName cssor.com  #完整的域名<br>       User cssor  #登录该域名使用的账号名<br>       PreferredAuthentications publickey  #有些情况或许需要加入此句，优先验证类型ssh<br>       IdentityFile ~/.ssh/id_rsa #私钥文件的路径</p>
</blockquote>
</blockquote>
<h3 id="4-采用-ssh-copy-ids"><a href="#4-采用-ssh-copy-ids" class="headerlink" title="4 采用 ssh-copy-idß"></a>4 采用 ssh-copy-idß</h3><pre><code>[hadoop@wang-PC ~]$  ssh-copy-id -i ~/.ssh/id_rsa.pub remote-host</code></pre>]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[json解析错误]]></title>
      <url>http://www.wulai.me/2016/01/05/json-e8-a7-a3-e6-9e-90-e9-94-99-e8-af-af/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code>switch (json_last_error()) {
    case JSON_ERROR_NONE:
        echo &apos; - No errors&apos;;
        break;
    case JSON_ERROR_DEPTH:
        echo &apos; - Maximum stack depth exceeded&apos;;
        break;
    case JSON_ERROR_STATE_MISMATCH:
        echo &apos; - Underflow or the modes mismatch&apos;;
        break;
    case JSON_ERROR_CTRL_CHAR:
        echo &apos; - Unexpected control character found&apos;;
        break;
    case JSON_ERROR_SYNTAX:
        echo &apos; - Syntax error, malformed JSON&apos;;
        break;
    case JSON_ERROR_UTF8:
        echo &apos; - Malformed UTF-8 characters, possibly incorrectly encoded&apos;;
        break;
    default:
        echo &apos; - Unknown error&apos;;
        break;
}</code></pre><h2 id="我碰到的错误"><a href="#我碰到的错误" class="headerlink" title="我碰到的错误"></a>我碰到的错误</h2><pre><code>echo mb_detect_encoding($passengers);
$json = str_replace(&apos;&amp;amp;quot;&apos;, &apos;&quot;&apos;, $passengers);</code></pre>]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[商业模式]]></title>
      <url>http://www.wulai.me/2016/01/03/e5-95-86-e4-b8-9a-e6-a8-a1-e5-bc-8f/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>不能够形成一个生态的商业模式都是危险的。可能就是庞氏骗局或者传销</p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[版本管理，外部定义]]></title>
      <url>http://www.wulai.me/2015/12/08/e7-89-88-e6-9c-ac-e7-ae-a1-e7-90-86-ef-bc-8c-e5-a4-96-e9-83-a8-e5-ae-9a-e4-b9-89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><ul>
<li>git我用git submodule，</li>
<li>svn我用externals</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[删除数据库下所有表]]></title>
      <url>http://www.wulai.me/2015/11/26/e5-88-a0-e9-99-a4-e6-95-b0-e6-8d-ae-e5-ba-93-e4-b8-8b-e6-89-80-e6-9c-89-e8-a1-a8/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code>use information_schema;
select concat(&apos;drop table &apos;,table_name,&apos;;&apos;) from TABLES where table_schema=&apos;tt365&apos;;</code></pre>]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[删除指定时间之后的文章]]></title>
      <url>http://www.wulai.me/2015/11/23/e5-88-a0-e9-99-a4-e6-8c-87-e5-ae-9a-e6-97-b6-e9-97-b4-e4-b9-8b-e5-90-8e-e7-9a-84-e6-96-87-e7-ab-a0/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>find . -cmin -50 -type f |xargs rm -rf</p>
<pre><code># find /tmp -mtime +30 -type f -name *.sh[ab] -exec rm -f {} ;</code></pre><p>/tmp –设置查找的目录；</p>
<p>-mtime +30 –设置时间为30天前；</p>
<p>-type f –设置查找的类型为文件；</p>
<p>-name *.sh[ab] –设置文件名称中包含sha或者shb；</p>
<p>-exec rm -f –查找完毕后执行删除操作；</p>
<p><code>提示</code>：将此命令写入crontab后即可自动完成查找并删除的工作 另外的方法大同小异：</p>
<pre><code># find /tmp -mtime +30 -type f | xargs rm -rf</code></pre><h1 id="另外一个操作方法："><a href="#另外一个操作方法：" class="headerlink" title="另外一个操作方法："></a>另外一个操作方法：</h1><pre><code>find . -name &quot;*-e&quot; -exec rm &apos;{}&apos; +</code></pre>]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[互联网产品经理的必读书目有哪些？(知乎)]]></title>
      <url>http://www.wulai.me/2015/11/02/e4-ba-92-e8-81-94-e7-bd-91-e4-ba-a7-e5-93-81-e7-bb-8f-e7-90-86-e7-9a-84-e5-bf-85-e8-af-bb-e4-b9-a6-e7-9b-ae-e6-9c-89-e5-93-aa-e4-ba-9b-ef-bc-9f-e7-9f-a5-e4-b9-8e/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>kentzhu，一个PM</p>
<p>著作权归作者所有。 商业转载请联系作者获得授权，非商业转载请注明出处。 作者：kentzhu 链接：<a href="http://www.zhihu.com/question/19568240/answer/13442295" target="_blank" rel="noopener">http://www.zhihu.com/question/19568240/answer/13442295</a> 来源：知乎</p>
<h2 id="一、产品市场"><a href="#一、产品市场" class="headerlink" title="一、产品市场"></a>一、产品市场</h2><ul>
<li>《引爆点》——产品市场与运营推广*   《长尾理论》——产品市场</li>
<li>《魔鬼经济学》——产品市场*   《影响力》——产品市场</li>
<li>《怪诞行为学》——产品市场与用户行为必读</li>
</ul>
<h2 id="二、产品设计"><a href="#二、产品设计" class="headerlink" title="二、产品设计"></a>二、产品设计</h2><ul>
<li>《用户体验的要素》——你们都懂的</li>
<li>《就这么简单》——用户体验科普*   《锦绣蓝图》——Web信息架构必读</li>
<li>《Web信息架构》——Web信息架构必读</li>
<li>《创造突破性产品》——PM启蒙读物</li>
<li>《写给大家看的设计师》——UI设计必读</li>
<li>《应需而变，设计的力量》——培养同理心</li>
<li>《简单法则》——设计思想</li>
</ul>
<h2 id="三、团队合作"><a href="#三、团队合作" class="headerlink" title="三、团队合作"></a>三、团队合作</h2><ul>
<li>《决策与判断》——换位思考*   《只有偏执狂才能生存》——情商*   《演说之禅》——气场与感染力*   《启示录》——团队</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[产品经理书单——张小龙（微信）]]></title>
      <url>http://www.wulai.me/2015/10/17/e4-ba-a7-e5-93-81-e7-bb-8f-e7-90-86-e4-b9-a6-e5-8d-95-e5-bc-a0-e5-b0-8f-e9-be-99-ef-bc-88-e5-be-ae-e4-bf-a1-ef-bc-89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>　在距离腾讯深圳总部几百公里之外的广州研发部有个奇人，他衣着朴素，面颊消瘦，语速平缓。媒体记者一般很难见到他，但是如果某个话题触动到他，交谈有时也变得异常顺利。这个人就是腾讯公司高级副总裁，“微信之父”张小龙。</p>
<p>　　张小龙会要求他的产品经理人手一本《乔布斯传》，也曾有人说过，如果求职者说自己看完了凯文·凯利的《失控》，面试就可以结束了。作为一名“微信先生”，张小龙平日里会看哪些书?这些书又如何影响着他对“微信”的构想呢?</p>
<p>　　“微信之父”张小龙的书单</p>
<h2 id="1、《失控》"><a href="#1、《失控》" class="headerlink" title="1、《失控》"></a>1、《失控》</h2><p>　　凯文·凯利，一位在亚洲游荡了近10年的美国人，东方激发了他对于技术的思考，最终通往哲学的终极命题。在他笔下，失控，往往意味着不确定性，容易使人感到不安，但正是不确定性和不可控性，成就了创新的源泉与进化的动因。</p>
<p>　　在广研，产品经理们人手一本《失控》，因为张小龙说过：不读《失控》的产品经理，知识结构是不完整的。在腾讯内部的演讲中，张小龙反复提及这本书启发了他的产品观 ：不与用户产生互动的产品，是失败的产品。</p>
<p>　　产品规则越简单，才越能让群体形成自发的互动。产品上线后，就有了自己的生命，会自己与海量用户互动，最后会互动出什么结果，是产品设计者不能控制的。</p>
<p>　　张小龙： 凯文•凯利的《失控》我给很多人推荐。这本书很厚，所以很多人都没有耐心的看完它，我自己也是，可是如果我们面试一个大学生，他告诉我他看完了这本书，我肯定就录用他——不过他们不知道这个秘诀。如果做互联网产品的不看一下这本书，我认为知识是不全面的。他从生物学、社会学的角度描述了一种群体效应，总的来说，结论是群体的智商低于个体智商。</p>
<p>　　这个观点不在那本书里，而是在另外一本书里，我不记得书名。一个人在组织里，组织的平均智商是低于个体智商的，个体的智商更高一些，群体会拉平这个智商。比如说在微博里，微博上多了你的智商会降低，大家认同吗?你没有发现这个变化，因为你每天降低一点。</p>
<p>　　很简单的，你每天在微博上说的话，你会发现跟大众越来越一致，别人在说什么，你也在说什么。你不会说一些大家不能理解的东西了，因为你会觉得那很突兀，会让大家不舒服。所以微博的转发那么高，自己写的那么低，就是这个原因，大家拼命的一团和气，互相夸两句。群体有趋同性。</p>
<h2 id="2、《科技想要什么》"><a href="#2、《科技想要什么》" class="headerlink" title="2、《科技想要什么》"></a>2、《科技想要什么》</h2><p>　　凯文·凯利向我们介绍了一种全新的科技观。他认为，作为整体，科技不是由线路和金属构成的一团乱麻，而是有生命力的自然形成的系统，它的起源完全可以回溯到生命的初始时期。</p>
<p>　　张小龙对原始人的生活方式充满兴趣，花工夫研究了人类的起源，人类为什么会直立行走，他还曾在知乎上提问：原始人用什么来剪指甲?广研内部对摇一摇有个专门的称呼：撸一撸。这是人类最原始的姿势，最原始的，体验往往是最好的。</p>
<p>　　为什么?张小龙说自己平时会非常留心观察三四岁小孩子，他发现他们很喜欢用iPhone与iPad，因为这两款电子产品很容易学，比如开机，虽然看不懂“滑动来解锁”，但因为触摸是人的天性，他们会下意识顺着箭头的方向用手指去滑动。“越简单，越原始，就越人性化”。</p>
<h2 id="3、《乔布斯传》"><a href="#3、《乔布斯传》" class="headerlink" title="3、《乔布斯传》"></a>3、《乔布斯传》</h2><p>　　在腾讯公司内部，张小龙被称为继马化腾之后的第二个超级产品经理，中国的乔布斯。微信4 .0推出时张小龙更新了微博签名：越简单，但越好。这是德国工业设计大师Dieter Ram崇尚的设计理念，也是乔布斯“至繁归于至简”的精神。4.0初期的朋友圈甚至没有滤镜，因为他认为：照片真实、不加修饰地反映生活即可。</p>
<p>　　微信发展早期，一些创意常被竞争对手模仿，并进化出新功能，马化腾曾问张小龙：是不是要做细化，免得别人做了那些我们没有想到的功能。张坚决否定，他说：只有做到极简，才无法被超越。 一位微信团队前成员透露，微信每个版本的设计，张小龙都会鼓励大家先做加法，再做减法，“现在你正在用的一个功能，很可能就是我们砍了300多个功能后留下的。”他说。</p>
<p>　　微信的开机画面，起初做过许多方案，大家比较倾向于两个人站在地球前，张小龙坚持就一个人，否则无法传递这款应用的用意：人很孤独，所以需要沟通。</p>
<p>　　朋友圈也是一款充满极简主义的产品，它的主色调是蓝灰色，这也是张小龙平时常穿的T恤以及广研办公室的色调。拍照片，按一下右上角相机按钮;写纯文本，长按右上角相机按钮即可，这一功能许多用户起初并不知道。“按住说话”的功能也是，说话时，其实按三秒就可以放开了。但张小龙从不说，也不担心用户不会用，“你去找，自然就能找到”。</p>
<h2 id="4、《女人的起源》"><a href="#4、《女人的起源》" class="headerlink" title="4、《女人的起源》"></a>4、《女人的起源》</h2><p>　　以男性为中心的生物学家，则用人类起源于丛林并进化为以狩猎为生的肉食动物的学说，来证明女性无论在体力和智力上，都处于从属的地位。对此，《女人的起源》首次为女性在人类进化史中的平等地位据理力争。</p>
<p>　　它开一代风气之先，力图解开人类，特别是女性的演化和起源之谜;而它提供的答案，则从女性的角度对人类的史前史做出了推测性的重构，极富革命性和破坏力。在张小龙的演讲里，他曾经向听众推荐这本书，他说：“如果你们对女性的心理研究不透彻的话，你就损失了一半的用户。”</p>
<h2 id="5、《黑客》"><a href="#5、《黑客》" class="headerlink" title="5、《黑客》"></a>5、《黑客》</h2><p>　　Steven Levy这部经典力作的25周年版从20世纪50年代早期跨越到80年代后期，追述了计算机革命中初期黑客的丰功伟绩，他们都是最聪明和最富有个性的精英。他们勇于承担风险，勇于挑战规则，并把世界推向了一个全新的发展方向。</p>
<p>　　本书更新了一些著名黑客的最新资料，包括比尔·盖茨、马克·扎克伯格、理查德·斯托曼和史蒂夫·沃兹尼亚克，并讲述了从早期计算机研究实验室到最初的家用计算机期间一些妙趣横生的故事。</p>
<p>　　在Levy的笔下，他们都是聪明而勤奋的人，他们极富想象力，他们另辟蹊径，发现了计算机工程问题的巧妙解决方案。他们都有一个共同的价值观，那就是至今仍然长盛不衰的“黑客道德”。</p>
<h2 id="6、《异类》"><a href="#6、《异类》" class="headerlink" title="6、《异类》"></a>6、《异类》</h2><p>　　在《异类》一书中，作家格拉德威尔对社会中那些成功人士进行的分析，让读者看到了一连串颇感意外的统计结果：英超联赛大部分球员都在9月至11月出生;比尔·盖茨和史蒂夫·乔布斯都出生在1955年;纽约很多著名律师事务所的开创者竟然都是犹太人后裔，并且他们的祖辈大多是在纽约的服装行业谋生。那些奇才异类，他们之所以神奇，得感谢机遇的眷顾。</p>
<p>　　不过，除了机遇之外，他们的成功还需要上辈人的文化熏陶。因此，从《异类》一书中，你能体会到机遇对成功是如此的重要。格拉德威尔为读者指出了成功之路的方向，但怎样把握这份机遇，每个人都需要仔细思考，毕竟，不同人拥有不同的机遇。在这本书中，张小龙最欣赏的则是“1万小时定律 ”，即一个人必须经过超过1万小时的训练才能达到一定的专业高度。</p>
<h2 id="7、《信息简史》"><a href="#7、《信息简史》" class="headerlink" title="7、《信息简史》"></a>7、《信息简史》</h2><p>　　现如今，信息如洪流般淹没了我们，使我们深陷信息焦虑、信息过载、信息疲劳的困扰。但回顾历史，这并不是件新鲜事，人们也总是能想出应对手段。维基百科、Google便是我们的应对之一。无论对于信息的未来持何态度，有一点是确定无疑的，即我们人类是信息的造物。</p>
<p>　　作为《混沌》、《费曼传》、《越来越快》、《牛顿传》等畅销书的作者，格雷克不仅在书中细致还原了历史细节，通俗解释了各种理论，还生动刻画了几位不为大众所知的人物：可编程计算机先驱、超越时代的查尔斯·巴贝奇，第一位程序员、诗人拜伦之女爱达·拜伦，计算机科学之父、天妒英才的阿兰·图灵，以及全书的主人公、信息论之父克劳德·香农。</p>
<h2 id="8、《数字乌托邦》"><a href="#8、《数字乌托邦》" class="headerlink" title="8、《数字乌托邦》"></a>8、《数字乌托邦》</h2><p>　　20世纪60年代早期，在美国大众眼中，计算机只是冷战中冰冷的机器，然而到了90年代互联网到来之时，计算机却呈现出一个截然不同的世界——它们模拟出了一个数字乌托邦般的协同体，而这正是曾经最反对冷战的嬉皮士们的共同愿景。本书正是探索这次非同寻常，且颇具讽刺意味的变革的第一本书。</p>
<p>　　作者挖掘出那些在旧金山湾区的先驱者——斯图尔特·布兰德和他的“全球网络”鲜为人知的故事。1968年到1998年期间，通过《全球概览》、“全球电子链接(WELL)”和最终取得巨大成功的《连线》杂志，布兰德和他的伙伴们长期扮演着旧金山嬉皮士运动和新兴科技聚集区硅谷的中间人的角色。</p>
<p>　　正由于他们富有远见的努力，反主流文化分子和科技人士一同重新定义了计算机的形象：计算机是解放自我的武器，计算机建筑了令人耳目一新的虚拟社区，计算机还让人们能更大胆地拓展社会的新疆界。</p>
<p>　　本文主体部分根据《壹读》“失控的微信先生”与《商业周刊中文版》“张小龙的盗梦空间”整理。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[产品经理入门书籍－    苏杰（淘宝）]]></title>
      <url>http://www.wulai.me/2015/10/17/e4-ba-a7-e5-93-81-e7-bb-8f-e7-90-86-e5-85-a5-e9-97-a8-e4-b9-a6-e7-b1-8d/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="1、人人都是产品经理"><a href="#1、人人都是产品经理" class="headerlink" title="1、人人都是产品经理"></a>1、人人都是产品经理</h3><ul>
<li>作者: 苏杰*   出版社: 电子工业出版社*   出版年: 2010年4月</li>
</ul>
<h3 id="2、启示录"><a href="#2、启示录" class="headerlink" title="2、启示录"></a>2、启示录</h3><ul>
<li>作者: [美] Marty Cagan*   出版社: 华中科技大学出版社*   出版年: 2011-5</li>
</ul>
<h3 id="3、淘宝十年产品事"><a href="#3、淘宝十年产品事" class="headerlink" title="3、淘宝十年产品事"></a>3、淘宝十年产品事</h3><ul>
<li>作者: 苏杰*   出版社: 电子工业出版社*   出版年: 2013-10-15</li>
</ul>
<h3 id="4、产品经理手册"><a href="#4、产品经理手册" class="headerlink" title="4、产品经理手册"></a>4、产品经理手册</h3><ul>
<li>作者: 琳达·哥乔斯*   出版社: 中国财政经济出版社*   出版年: 2007-1</li>
</ul>
<h3 id="5、用户体验的要素"><a href="#5、用户体验的要素" class="headerlink" title="5、用户体验的要素"></a>5、用户体验的要素</h3><ul>
<li>作者: Jesse James Garrett*   出版社: 机械工业出版社*   出版年: 2007年10月</li>
</ul>
<h3 id="6、赢在用户"><a href="#6、赢在用户" class="headerlink" title="6、赢在用户"></a>6、赢在用户</h3><ul>
<li>作者: [美]Steve Mulder / [美]Zivv Yarr*   出版社: 机械工业出版社*   出版年: 2007-08-01</li>
</ul>
<h3 id="7、统计数字会撒谎"><a href="#7、统计数字会撒谎" class="headerlink" title="7、统计数字会撒谎"></a>7、统计数字会撒谎</h3><ul>
<li>作者: [美] 达莱尔·哈夫*   出版社: 中国城市出版社*   出版年: 2009-3</li>
</ul>
<h3 id="8、未来是湿的"><a href="#8、未来是湿的" class="headerlink" title="8、未来是湿的"></a>8、未来是湿的</h3><ul>
<li>作者: [美] 克莱·舍基*   出版社: 中国人民大学出版社*   出版年: 2009-5</li>
</ul>
<h3 id="9、餐巾纸的背面"><a href="#9、餐巾纸的背面" class="headerlink" title="9、餐巾纸的背面"></a>9、餐巾纸的背面</h3><ul>
<li>作者: [美]丹·罗姆*   出版社: 中信出版社*   出版年: 2009-6</li>
</ul>
<h3 id="10、改变心理学的40项研究"><a href="#10、改变心理学的40项研究" class="headerlink" title="10、改变心理学的40项研究"></a>10、改变心理学的40项研究</h3><ul>
<li>作者: 〔美〕Roger R Hock著*   出版社: 中国轻工业出版社*   出版年: 2004-1-1</li>
</ul>
<h3 id="11、结网"><a href="#11、结网" class="headerlink" title="11、结网"></a>11、结网</h3><ul>
<li>作者: 王坚*   出版社: 人民邮电出版社*   出版年: 2010-4</li>
</ul>
<h3 id="12、轻公司"><a href="#12、轻公司" class="headerlink" title="12、轻公司"></a>12、轻公司</h3><ul>
<li>作者: 李黎 / 杜晨*   出版社: 中信出版社*   出版年: 2009-7</li>
</ul>
<h3 id="13、决策与判断"><a href="#13、决策与判断" class="headerlink" title="13、决策与判断"></a>13、决策与判断</h3><ul>
<li>作者: 斯科特·普劳斯*   出版社: 人民邮电出版社*   出版年: 2004-9</li>
</ul>
<h3 id="14、中国历代政治得失"><a href="#14、中国历代政治得失" class="headerlink" title="14、中国历代政治得失"></a>14、中国历代政治得失</h3><ul>
<li>作者: 钱穆*   出版社: 生活·读书·新知三联书店*   出版年: 2001</li>
</ul>
<h3 id="15、学会提问"><a href="#15、学会提问" class="headerlink" title="15、学会提问"></a>15、学会提问</h3><ul>
<li>作者: 布朗*   出版社: 中国轻工业出版社*   出版年: 2006-1</li>
</ul>
<h3 id="16、别做正常的傻瓜"><a href="#16、别做正常的傻瓜" class="headerlink" title="16、别做正常的傻瓜"></a>16、别做正常的傻瓜</h3><ul>
<li>作者: 奚恺元*   出版社: 机械工业出版社*   出版年: 2006-8</li>
</ul>
<h3 id="17、大脑使用说明书"><a href="#17、大脑使用说明书" class="headerlink" title="17、大脑使用说明书"></a>17、大脑使用说明书</h3><ul>
<li>作者: 东尼•博赞*   出版社: 外语教学与研究出版社*   出版年: 2005-4-1</li>
</ul>
<h3 id="18、About-Face-3-交互设计精髓"><a href="#18、About-Face-3-交互设计精髓" class="headerlink" title="18、About Face 3 交互设计精髓"></a>18、About Face 3 交互设计精髓</h3><ul>
<li>作者: Alan Cooper / Robert Reimann / David Cronin*   出版社: 电子工业出版社*   出版年: 2008-11</li>
</ul>
<h3 id="19、美第奇效应-7-6-144人评价"><a href="#19、美第奇效应-7-6-144人评价" class="headerlink" title="19、美第奇效应 7.6 (144人评价)"></a>19、美第奇效应 7.6 (144人评价)</h3><ul>
<li>作者: 弗朗斯·约翰松*   出版社: 商务印书馆发行部*   出版年: 2006-3</li>
</ul>
<h3 id="20、锦绣蓝图"><a href="#20、锦绣蓝图" class="headerlink" title="20、锦绣蓝图"></a>20、锦绣蓝图</h3><ul>
<li>作者: [美] 沃德科 (Christina Wodtke) / [美] 戈夫拉 (Austin Govella)*   出版社: 人民邮电出版社*   出版年: 2009-11-01</li>
</ul>
<h3 id="21、罗伯特议事规则"><a href="#21、罗伯特议事规则" class="headerlink" title="21、罗伯特议事规则"></a>21、罗伯特议事规则</h3><ul>
<li>作者: 亨利·罗伯特*   出版社: 世纪出版集团 格致出版社*   出版年: 2008年1月</li>
</ul>
<h3 id="22、博弈论的诡计"><a href="#22、博弈论的诡计" class="headerlink" title="22、博弈论的诡计"></a>22、博弈论的诡计</h3><ul>
<li>作者: 王春永*   出版社: 中国发展*   出版年: 2007-1-1</li>
</ul>
<h3 id="23、经济学原理（上下）"><a href="#23、经济学原理（上下）" class="headerlink" title="23、经济学原理（上下）"></a>23、经济学原理（上下）</h3><ul>
<li>作者: [美] 曼昆*   出版社: 生活·读书·新知三联书店 北京大学出版社*   出版年: 2001-12</li>
</ul>
<h3 id="24、人月神话"><a href="#24、人月神话" class="headerlink" title="24、人月神话"></a>24、人月神话</h3><ul>
<li>作者: [美] 弗雷德里克·布鲁克斯*   出版社: 清华大学出版社*   出版年: 2002-11</li>
</ul>
<h3 id="25、人件"><a href="#25、人件" class="headerlink" title="25、人件"></a>25、人件</h3><ul>
<li>作者: Tom DeMarco / Timothy Lister*   出版社: 清华大学出版社*   出版年: 2003</li>
</ul>
<h3 id="26、麦肯锡方法"><a href="#26、麦肯锡方法" class="headerlink" title="26、麦肯锡方法"></a>26、麦肯锡方法</h3><ul>
<li>作者: （美）埃森・M・拉塞尔*   出版社: 华夏出版社*   出版年: 2001-1</li>
</ul>
<h3 id="27、影响力"><a href="#27、影响力" class="headerlink" title="27、影响力"></a>27、影响力</h3><ul>
<li>作者: [美] 罗伯特·西奥迪尼*   出版社: 中国人民大学出版社*   出版年: 2006-5</li>
</ul>
<h3 id="28、维基经济学"><a href="#28、维基经济学" class="headerlink" title="28、维基经济学"></a>28、维基经济学</h3><ul>
<li>作者: [加] 唐·泰普斯科特 / [英] 安东尼·D·威廉姆斯*   出版社: 中国青年出版社*   出版年: 2007-10</li>
</ul>
<h3 id="29、世界是平的"><a href="#29、世界是平的" class="headerlink" title="29、世界是平的"></a>29、世界是平的</h3><ul>
<li>作者: [美] 托马斯·弗里德曼*   出版社: 湖南科学技术出版社*   出版年: 2006-11</li>
</ul>
<h3 id="30、长尾理论"><a href="#30、长尾理论" class="headerlink" title="30、长尾理论"></a>30、长尾理论</h3><ul>
<li>作者: [美] 克里斯·安德森*   出版社: 中信出版社*   出版年: 2006-12</li>
</ul>
<h3 id="31、点石成金"><a href="#31、点石成金" class="headerlink" title="31、点石成金"></a>31、点石成金</h3><ul>
<li>作者: [美] 史蒂夫·克鲁克*   出版社: 机械工业出版社*   出版年: 2006-8</li>
</ul>
<h3 id="32、交互设计之路"><a href="#32、交互设计之路" class="headerlink" title="32、交互设计之路"></a>32、交互设计之路</h3><ul>
<li>作者: 库帕*   出版社: 电子工业出版社*   出版年: 2006-3</li>
</ul>
<h3 id="33、引爆点"><a href="#33、引爆点" class="headerlink" title="33、引爆点"></a>33、引爆点</h3><ul>
<li>作者: [美] 马尔科姆·格拉德威尔*   出版社: 中信出版社*   出版年: 2006-1</li>
</ul>
<h3 id="34、情感化设计"><a href="#34、情感化设计" class="headerlink" title="34、情感化设计"></a>34、情感化设计</h3><ul>
<li>作者: [美] Donald A.Norman；*   出版社: 电子工业出版社*   出版年: 2005-5</li>
</ul>
<h3 id="35、水平营销"><a href="#35、水平营销" class="headerlink" title="35、水平营销"></a>35、水平营销</h3><ul>
<li>作者: 陈燕茹 / 菲利普・科特勒 / 费尔南多・德・巴斯*   出版社: 中信出版社*   出版年: 2005-1</li>
</ul>
<h3 id="36、设计心理学"><a href="#36、设计心理学" class="headerlink" title="36、设计心理学"></a>36、设计心理学</h3><ul>
<li>作者: Donald Norman*   出版社: 中信出版社*   出版年: 2003-10-1</li>
</ul>
<h3 id="37、万历十五年"><a href="#37、万历十五年" class="headerlink" title="37、万历十五年"></a>37、万历十五年</h3><ul>
<li>作者: [美] 黄仁宇*   出版社: 生活·读书·新知三联书店*   出版年: 1997-5</li>
</ul>
<h3 id="38、公司进化论"><a href="#38、公司进化论" class="headerlink" title="38、公司进化论"></a>38、公司进化论</h3><ul>
<li>作者: [美]杰弗里.摩尔*   出版社: 机械工业出版社*   出版年: 2007-5</li>
</ul>
<h3 id="39、黑天鹅"><a href="#39、黑天鹅" class="headerlink" title="39、黑天鹅"></a>39、黑天鹅</h3><ul>
<li>作者: [美] 纳西姆·尼古拉斯·塔勒布*   出版社: 中信出版社*   出版年: 2008-5</li>
</ul>
<h3 id="40、沸腾十五年"><a href="#40、沸腾十五年" class="headerlink" title="40、沸腾十五年"></a>40、沸腾十五年</h3><ul>
<li>作者: 林军*   出版社: 中信出版社*   出版年: 2009-7</li>
</ul>
<h3 id="40、金字塔原理"><a href="#40、金字塔原理" class="headerlink" title="40、金字塔原理"></a>40、金字塔原理</h3><ul>
<li>作者: [美] 巴巴拉·明托*   出版社: 民主与建设出版社*   出版年: 2002-12</li>
</ul>
<h3 id="41、枪炮、病菌与钢铁"><a href="#41、枪炮、病菌与钢铁" class="headerlink" title="41、枪炮、病菌与钢铁"></a>41、枪炮、病菌与钢铁</h3><ul>
<li>作者: [美] 贾雷德·戴蒙德*   出版社: 上海译文出版社*   出版年: 2006-4-1</li>
</ul>
<h3 id="42、失控"><a href="#42、失控" class="headerlink" title="42、失控"></a>42、失控</h3><ul>
<li>作者: [美] 凯文·凯利*   出版社: 新星出版社*   出版年: 2010-12</li>
</ul>
<h3 id="45、思考的技术"><a href="#45、思考的技术" class="headerlink" title="45、思考的技术"></a>45、思考的技术</h3><ul>
<li>作者: 大前研一*   出版社: 中信出版社*   出版年: 2008年7月</li>
</ul>
<h3 id="46、浪潮之巅"><a href="#46、浪潮之巅" class="headerlink" title="46、浪潮之巅"></a>46、浪潮之巅</h3><ul>
<li>作者: 吴军*   出版社: 电子工业出版社*   出版年: 2011-8</li>
</ul>
<h3 id="47、黑客与画家"><a href="#47、黑客与画家" class="headerlink" title="47、黑客与画家"></a>47、黑客与画家</h3><ul>
<li>作者: [美] Paul Graham*   出版社: 人民邮电出版社*   出版年: 2011-4</li>
</ul>
<h3 id="48、四步创业法"><a href="#48、四步创业法" class="headerlink" title="48、四步创业法"></a>48、四步创业法</h3><ul>
<li>作者: [美] Steven Gary Blank*   出版社: 华中科技大学出版社*   出版年: 2012-8-1</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql 查看备注]]></title>
      <url>http://www.wulai.me/2015/10/06/mysql-e6-9f-a5-e7-9c-8b-e5-a4-87-e6-b3-a8/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="简单的用法"><a href="#简单的用法" class="headerlink" title="简单的用法"></a>简单的用法</h2><pre><code>SELECT
COLUMN_NAME,
COLUMN_COMMENT  AS  `备注`
FROM information_schema.COLUMNS WHERE TABLE_NAME=&apos;pw_admin_role&apos;</code></pre><h3 id="复杂的用法"><a href="#复杂的用法" class="headerlink" title="复杂的用法"></a>复杂的用法</h3><pre><code>SELECT
COLUMN_NAME,
DATA_TYPE AS `数据类型`,
CHARACTER_MAXIMUM_LENGTH  AS `字符长度`,
NUMERIC_PRECISION AS `数字长度`,
NUMERIC_SCALE AS `小数位数`,
IS_NULLABLE AS `是否允许非空`,
CASE WHEN EXTRA = &apos;auto_increment&apos; THEN 1 ELSE 0 END AS `是否自增`,
COLUMN_DEFAULT  AS  `默认值`,
COLUMN_COMMENT  AS  `备注`
FROM information_schema.COLUMNS WHERE TABLE_NAME=&apos;pw_admin_role&apos;</code></pre>]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ryan Hall 教学视频]]></title>
      <url>http://www.wulai.me/2015/09/29/ryan-hall-e6-95-99-e5-ad-a6-e8-a7-86-e9-a2-91/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>后踢腿训练和高抬腿训练 <a href="http://v.youku.com/v_show/id_XMzA0Njc4OTQ0.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4OTQ0.html</a></p>
<p>慢速高抬腿</p>
<p><a href="http://v.youku.com/v_show/id_XMzA0Njc4ODg0.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4ODg0.html</a></p>
<p>掌握正确跑步姿势 <a href="http://v.youku.com/v_show/id_XMzA0Njc4Nzky.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4Nzky.html</a></p>
<p>头部基准 <a href="http://v.youku.com/v_show/id_XMzA0Njc4NzUy.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4NzUy.html</a></p>
<p>动态拉伸训练 <a href="http://v.youku.com/v_show/id_XMzA0Njc4NjIw.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4NjIw.html</a></p>
<p>中速高抬腿训练 <a href="http://v.youku.com/v_show/id_XMzA0Njc4NTUy.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4NTUy.html</a></p>
<p>臂部基准 <a href="http://v.youku.com/v_show/id_XMzA0Njc4NTc2.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4NTc2.html</a></p>
<p>长距离间歇跑训练 <a href="http://v.youku.com/v_show/id_XMzA0Njc4NTA4.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4NTA4.html</a></p>
<p>提高成绩的冲刺练习 <a href="http://v.youku.com/v_show/id_XMzA0Njc4NDMy.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4NDMy.html</a></p>
<p>短距离间歇跑训练 <a href="http://v.youku.com/v_show/id_XMzA0Njc4MzQ0.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4MzQ0.html</a></p>
<p>节奏跑 <a href="http://v.youku.com/v_show/id_XMzA0Njc4Mjk2.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4Mjk2.html</a></p>
<p>高抬腿训练 <a href="http://v.youku.com/v_show/id_XMzA0Njc4MjY0.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4MjY0.html</a></p>
<p>马拉松模拟训练 <a href="http://v.youku.com/v_show/id_XMzA0Njc4MjI0.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4MjI0.html</a></p>
<p>直腿交叉曲腿交叉与跑步 <a href="http://v.youku.com/v_show/id_XMzA0Njc4MTQw.html" target="_blank" rel="noopener">http://v.youku.com/v_show/id_XMzA0Njc4MTQw.html</a></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[破解步频和步幅统一的难题！（转）]]></title>
      <url>http://www.wulai.me/2015/09/29/e7-a0-b4-e8-a7-a3-e6-ad-a5-e9-a2-91-e5-92-8c-e6-ad-a5-e5-b9-85-e7-bb-9f-e4-b8-80-e7-9a-84-e9-9a-be-e9-a2-98-ef-bc-81-ef-bc-88-e8-bd-ac-ef-bc-89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>速度 = 步频 × 步幅，一条极为简单而又冰冷的公式。</p>
<p>要跑得快，你可以提高步频，或者加大步幅，或者两者兼有，貌似很简单。但是这个问题，已经被反复讨论了几十年，主要在于，步频与步幅，是两个相互制约的因素。你很难完全撇开一个因素，谈论如何改进另一个因素。</p>
<p>你一步两米顶人家两步，人家却可以小鸡啄米似的怎么也甩不掉，正是说明了步幅与步频的对立关系。如果你既大步流星，同时也小鸡啄米，那恭喜你，实力上了两个台阶不止，冲300去的。</p>
<p>那我想跑的快，增加哪个更有效呢？先来看看顶尖运动员是怎么跑的：</p>
<p>2007年的世锦赛万米，贝克勒（万米世界记录保持者）与Mathathi以同样的速度跑了前面九千米。贝克勒身高1.63米，步频190/分钟。在最后的一公里冲刺阶段，他的步幅不变，步频提高到惊人的216/分钟，一举摘金。Mathathi身高1.7米，步频接近200/分钟，在最后冲刺阶段，加大了步幅，步频反而下降，维持速度不变（后来他表示最后没有提速，是疲劳所致）。</p>
<p>而女子万米记录保持者王军霞，则是典型的全程高频率跑法，她的平均步频达到209/分钟。在冲刺阶段，她一般采用加大步幅，步频不变的方式。</p>
<p>上述例子说明，首先，专业运动员的步频都很高。而且，他们可以根据需要调节步频/步幅的节奏。</p>
<p>那么，业余跑者，应该怎么跑呢？</p>
<p>运动生化检测表明，长跑运动员在同一速度下用不同的步频步幅跑步时，摄氧水平呈现U型，既过高和过低的步频都会增加摄氧水平。也就是说，对某个运动员，确实存在着最经济的步频。欧美的跑风盛行，跑步教材多如牛毛，他们经常提到一个“标准步频”：180/分钟。他们宣称，达到或接近这个步频，是每一个长跑者应该改进的技术。据我自己观察，大部分业余跑者的步频达不到这个数字，包括一些全马进了二级的快马。业余跑者中普遍存在的一个问题，就是过大的步幅，把步频限制在不经济的低水平，同时也带来伤痛增加等其他负面作用。</p>
<h2 id="【步幅过大】"><a href="#【步幅过大】" class="headerlink" title="【步幅过大】"></a>【步幅过大】</h2><p>我们需要先对“步幅过大”进行定义。所谓步幅过大，就是如图这样右侧的跑法：过度前伸的小腿，打直的膝盖，脚跟的重落地。不幸的是，这样的跑法实在太常见。</p>
<p>而合适的步幅，则应该是如图左侧的跑法：中前掌落地，落地点靠近重心，主动下压、扒地。</p>
<p><img src="http://res.hillock.com.cn/web/100000094_141359.jpg" alt="enter image description here"></p>
<p>步幅过大的坏处是显而易见的：明显的刹车作用，过长的支撑时间，完全抵消了大步幅带来的好处；还显著增加的震动的传导。</p>
<p>事实上，扒地与后蹬动作中的向前分量，是跑步前进的唯一动力。任何跑步技术的改进，都必须针对如何加强这个唯一动力。极端的例子如短跑，步幅是所有跑步中最大的，但是他的落地点也是很靠近身体重心的，目的就在于避免刹车作用，尽量缩短支撑时间，并为强大的扒地与后蹬提供结构条件，如图所示，短跑运动员绝对不会把小腿打直了伸到前面去！</p>
<p><img src="http://res.hillock.com.cn/web/100000094_141456.jpg" alt="enter image description here"></p>
<p>再看看顶尖长距离运动员的落地方式，无一例外，均是中前掌落地，靠近身体，折叠膝关节，主动下压。</p>
<p><img src="http://res.hillock.com.cn/web/100000094_141610.jpg" alt="enter image description here"></p>
<p>再来看看定量的对比： 业余跑者，很大比例是小腿前伸，有些甚至超出15°，而专业高手多是负的角度。脚一着地即可发力，避免了被动支撑重心跟进的阶段，单足触地时间可以达到0.15秒以内。 <img src="http://res.hillock.com.cn/web/100000094_141655.jpg" alt="enter image description here"></p>
<p>步幅过大的问题，牵涉到一个大家经常讨论的另一个问题：就是中前掌落地还是脚跟落地，这个问题跑友争论激烈互不认同。我认为，只要你把落地点靠近身体，中前掌落地就是自然而言的事。而后跟落地也不是什么大不了一定要克服的习惯，只要落地点OK，就已经大大提高了跑步的效率。</p>
<p>至此，我的观点是，业余跑者改进跑步技术的第一步，就是避免步幅过大。</p>
<h2 id="【提高步幅】"><a href="#【提高步幅】" class="headerlink" title="【提高步幅】"></a>【提高步幅】</h2><p>避免了步幅过大，就开始着手解决如何把步频提高170-180，或曰适合自己的经济步频。</p>
<p>步频与力量、神经类型相关。跑步的时候，对抗肌收缩与舒张快速交替运动，这就要求大脑皮层运动中枢的兴奋与抑制过程迅速转换。据观察，一个短跑选手，他的固有步频在年纪很小的时候就形成了，要改起来，还真不是很容易。我以前曾和体育教练前往中学选材，教练并不看百米成绩，要求进行原地高抬腿频率测试，对频率高的再进行重点关注和其他测试。这就是神经类型是短跑天赋的最大因素的道理，放到中长跑，这个素质仍然是至关重要的。</p>
<p>业余跑者，大多是半路出家，未受过跑步训练。要提高步频，途径之一是逐渐习惯这种快速转换，比如经常进行一些200米之类的反复冲刺跑，体会跑步的协调发力。专业马拉松运动员，一般很少进行这么短距离的练习，而跑吧佟强的计划就有此类练习，正是这个道理。</p>
<p>至于力量，跑步要求的不是那种深蹲之类的绝对静力量，而是运动中的协调用力。形象地说，就是要鹿的力量，不要牛的力量。要练习的途径包括高抬腿跑，后踢腿跑，不屈膝小跳上楼梯，沙地跑等等。</p>
<p>业余跑者的触地时间较长，下肢结构缺乏弹性，也是原因之一。如果你的下肢是一块海绵，吸收了落地的大部分震动，却没有提供力量回馈，就如跑沙地一样，当然跑不快！想跑得快，你就要提高结构的刚性，把你的下肢结构变为一个弹力球。措施包括：不要穿太软的跑鞋（保护是否足够的问题，暂不探讨），增强下肢小肌群，保持足弓的弹性等等。自由泳教练，最头痛的就是学员的脚打不直，称之为跑步脚（如图），但是这个“跑步脚”却是天然的跑步弹力装置，一触即走，绝不拖泥带水。要提高足部结构的刚性，推荐进行越野跑，你不得不随时调整步频步幅，左冲右突凌波微步，练习效果十分明显。</p>
<p>提高频率的时候还要注意，我们要的是放松、协调的高频，不是生硬、刻意的高频。正如最高效率的前进方式是滚动，你的双腿应该是“主动下压落地—扒地—后蹬—放松后扬—屈膝送髋”这样的过程，想象你穿上锁鞋骑自行车，双腿不是下压上提，而是随时进行圆周运动，沿切线方向发力。什么时候你跑步跑出了这种滚动的感觉，那肯定比别人要轻松！</p>
<p>就我自己而言，170-180的步频是很自然的状态，如果是短距离比赛，就会更高一些。所有跑友都应该测量一下自己的步频，明显低于170-180的，不妨先从提高步频做起，稍微习惯一下，你就会发现跑得更省力了。</p>
<p>当然，步频的提高是有限度的，限度则取决于你的神经协调性、身体结构和力量。理论上，人的肌肉1/3的最大收缩速度下运动最为高效，这相当于每分钟180-200步。</p>
<h2 id="【加大步幅】"><a href="#【加大步幅】" class="headerlink" title="【加大步幅】"></a>【加大步幅】</h2><p>现在，你既修正了步幅过大的毛病，又习惯了高效率的步频，再想跑得更快的，那就很简单了，唯有加大步幅。什么？好不容易把步幅缩短了现在又要加大？呵呵，事物总是螺旋式上升嘛。好消息是，如能按正确方式加大步幅，你就能把以前的自己甩得老远！坏消息是，加大步幅，最难。</p>
<p>步幅，是力量、柔韧性、协调性的函数，其中又以力量最为关键。</p>
<p>加大步幅，无非是就是“积极前摆，充分送髋，快速下压，主动扒地，加强后蹬”，每一样都是以力量为基础！逐个注释如下：</p>
<p>1.步幅大，说明动作幅度大。前摆幅度与后蹬幅度相互制约，后蹬之后不放松，又限制大小腿折叠角度，导致前摆不充分，真是一环扣一环。</p>
<p>2.所谓送髋，就是以骨盆的转动带动摆腿。躯干，是几乎所有全身运动的发力核心，跑步也是如此。越来越多跑友重视核心力量，是个好现象。不跑步那天去做个飞燕、拱桥啥的，真是挺不错。不过我个人认为，动态的力量练习比静态的好，比如划船机就是个很好的核心力量的练习。</p>
<p>3.主动下压扒地，貌似是减小了步幅，实际却是相反，因为后蹬被加强了。后蹬是跑步动作中最主要的驱动，下压扒地就是其准备动作。后蹬越强，前进性就越好，不必要的上下跳动就越少。这里比较一下Ryan Hall与Samuel Kamau，前者大家熟知，录制了很多教学视频；后者更是超一流选手，北京奥运冠军，半马59分以内。Samuel Kamau明显矮一些，但是他的后蹬角度很恐怖（我今天贴图的额度用完了，只能文字描述下：他的后蹬摆腿达到106°，而前者是90°），两个人的步幅差不多大。Ryan Hall每步要上下跳动4英寸，一个全马下来，光累积跳高就接近80层大楼的高度。每加大1°，就能增加2%的步幅，并能有效减少滞空时间。一个马拉松几万步，累积起来不得了啊。有限的能量，必须尽量的向前、向前、再向前！</p>
<p>总而言之，加大步幅是一个连贯的过程，不是强调动作的某一个阶段，在任何加大步幅的尝试之前，请确认你的跑步是稳定和平衡的。加大步幅更不是单纯的蹦跶延长滞空时间，而是通过技术与身体结构的结合，比如送髋和后蹬这些来实现高而平稳的重心。老黑步幅既大，步频又快，正是这个原因。 下面这些常见的不良习惯是制约步幅加大的：</p>
<ol>
<li>肩带肌肉紧张，上臂几乎不动，只是前臂小幅摆动。</li>
<li>过分强调经济性，自我限制下肢摆动幅度。</li>
<li>小腿过度前伸，脚跟触地时间过长，损失弹性，动力不足。</li>
<li>跑后不注重拉伸，韧带紧张僵硬，限制动作幅度。</li>
</ol>
<p>日复一日地路跑，而不进行专项力量练习，自然事倍功半。要加大步幅，主要在于加强躯干和下肢力量。有强大的结构，才可以吸收震动保护关节；强大的腿部向心力量，离地腿才可以快速前摆；强大的腿部离心力量，才可以主动下压引导后蹬。总之，你要变得强大。</p>
<ol>
<li>还是那句话，动态练优于静力练习。多组数的上台阶，跑坡，跳跃，短距离跑，都是有效途径。</li>
<li>有条件时不时去跑一次越野路面，更是可以全面均衡发展。</li>
<li>跑步机，就是最好的跑坡（没有下坡跑的伤害，稳定而持续的坡度，可以调节）。</li>
<li>交叉训练必不可少，推荐网球（急停急起、、反复冲刺、腰腹发力），足球篮球不推荐（强对抗容易受伤，养伤太久）。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[跑步前后拉伸，记住几张图片]]></title>
      <url>http://www.wulai.me/2015/09/12/e8-b7-91-e6-ad-a5-e5-89-8d-e5-90-8e-e6-8b-89-e4-bc-b8-ef-bc-8c-e8-ae-b0-e4-bd-8f-e5-87-a0-e5-bc-a0-e5-9b-be-e7-89-87/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><img src="http://res.hillock.com.cn/web/6EPRT1IJ0HRV0092.jpg" alt="enter image description here"></p>
<p><img src="http://res.hillock.com.cn/web/6EPRT2PA0HRV0092.jpg" alt="enter image description here"></p>
<p><img src="http://res.hillock.com.cn/web/6EPRT2650HRV0092.jpg" alt="enter image description here"></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[马拉松运动员的伸展运动]]></title>
      <url>http://www.wulai.me/2015/09/10/e9-a9-ac-e6-8b-89-e6-9d-be-e8-bf-90-e5-8a-a8-e5-91-98-e7-9a-84-e4-bc-b8-e5-b1-95-e8-bf-90-e5-8a-a8/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="1、-腓肠肌"><a href="#1、-腓肠肌" class="headerlink" title="1、 腓肠肌"></a>1、 腓肠肌</h3><p>拉长或伸展小腿后方的腓肠肌和比目鱼肌。</p>
<ul>
<li>开始姿势</li>
</ul>
<p>右脚在前，身体呈“半冲刺”姿势，面对或背对墙站立。脚应该平行站立且保持与髋同宽，手扶在墙上。</p>
<p><img src="http://res.hillock.com.cn/web/0701091.jpg" alt="enter image description here"></p>
<h3 id="2、-伸展比目鱼肌"><a href="#2、-伸展比目鱼肌" class="headerlink" title="2、 伸展比目鱼肌"></a>2、 伸展比目鱼肌</h3><p>像腓肠肌伸展运动的开始姿势一样站立，但稍屈后膝，从而加强对后腿比目鱼肌的伸展。</p>
<p><img src="http://res.hillock.com.cn/web/0701092.jpg" alt="enter image description here"></p>
<h3 id="3、-股四头肌"><a href="#3、-股四头肌" class="headerlink" title="3、 股四头肌"></a>3、 股四头肌</h3><p>拉长或伸展股四头肌的前侧肌肉。如果臀部是倾斜着向前，这种方法也可以伸展臀部的屈肌。</p>
<ul>
<li>开始姿势和伸展运动</li>
</ul>
<p>左脚站立，扶墙或依靠同伴保持身体平衡，如果需要的话，右腿弯曲，并用右手握住踝关节，用力使脚后跟尽量靠近臀大肌，持续一段时间（可用自己的手提高动作的幅度）。换右脚做相同的动作。通过伸展运动，保证奔跑时提臀，还可以发展股四头肌后侧部分。</p>
<p><img src="http://res.hillock.com.cn/web/0701093.jpg" alt="enter image description here"></p>
<h3 id="4、-大腿内侧内收肌"><a href="#4、-大腿内侧内收肌" class="headerlink" title="4、 大腿内侧内收肌"></a>4、 大腿内侧内收肌</h3><p>拉长或伸展大腿内侧内收肌的肌肉。</p>
<ul>
<li>开始姿势和伸展运动</li>
</ul>
<p>坐在地上，挺直后背。如果需要的话，背靠着一面墙。两只脚的脚底相对，让膝盖上部逐渐靠近墙，直到你的大腿内侧和腹股沟得到完全的伸展为止。双手不仅能放在背后的地面上，帮助保持脊椎骨垂直的姿势；而且还能习惯压你的双膝内侧，以些增加伸展的力度（这种伸展活动可供选择的办法是增加你大腿的宽度和垂直度，并通过施加在膝盖内侧的压力使腿与手更容易分开）。</p>
<p><img src="http://res.hillock.com.cn/web/0701094.jpg" alt="enter image description here"></p>
<h3 id="5、-跟腱（大腿后面的跟腱）"><a href="#5、-跟腱（大腿后面的跟腱）" class="headerlink" title="5、 跟腱（大腿后面的跟腱）"></a>5、 跟腱（大腿后面的跟腱）</h3><p>拉长或伸展大腿后面跟腿。</p>
<ul>
<li>开始姿势和伸展运动</li>
</ul>
<p>上体正直坐在地板上，伸出右腿放在体前－－但膝关节不能完全“锁住”。左腿弯曲且稍微外展。从臀部向前弯曲，直到感觉右大腿后面的肌肉伸长。当轻轻地向前倾斜时，腰要挺直，头部保持不动，重复另外一侧。你也可以站着，把一条腿搁在膝盖高度的长凳上做这个锻炼。</p>
<p><img src="http://res.hillock.com.cn/web/0701095.jpg" alt="enter image description here"></p>
<h3 id="6、臀大肌"><a href="#6、臀大肌" class="headerlink" title="6、臀大肌"></a>6、臀大肌</h3><p>拉长或伸展臀部肌肉</p>
<ul>
<li>开始姿势和伸展运动</li>
</ul>
<p>躺在地板上左腿伸直，或者坐在地板上挺直后背，左腿伸直，右腿弯曲越过左腿，并与左腿交叉，脚尽可能舒适地靠近身体。用你的左臂裹住右腿。膝盖向身体靠拢直到感到右侧臀大肌被伸展。保持一会儿，然后重复另一侧。</p>
<p><img src="http://res.hillock.com.cn/web/0701096.jpg" alt="enter image description here"></p>
<h3 id="7、髂腰肌"><a href="#7、髂腰肌" class="headerlink" title="7、髂腰肌"></a>7、髂腰肌</h3><p>拉长或伸展髂腰肌－－从骨盆和腰脊柱直到大腿骨前面的肌肉。</p>
<ul>
<li>开始姿势和伸展运动</li>
</ul>
<p>跪在地面上，右腿成弓步姿势，大腿与地面保持平行，左腿的膝关节跪在地面上。按压臀部直至感觉到伸展为止。为了保持身体平衡，可以把手放在臀部上、右膝上或地面上。保持向上提腰，上体挺直，然后，换另一侧做同样的动作。</p>
<p><img src="http://res.hillock.com.cn/web/0701097.jpg" alt="enter image description here"></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Cannot start PhantomJS  karma]]></title>
      <url>http://www.wulai.me/2015/08/14/220/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1、错误信息"><a href="#1、错误信息" class="headerlink" title="1、错误信息"></a>1、错误信息</h2><pre><code>Running &quot;karma:unit&quot; (karma) task
INFO [karma]: Karma v0.12.37 server started at http://localhost:9876/
INFO [launcher]: Starting browser PhantomJS
ERROR [launcher]: Cannot start PhantomJS

INFO [launcher]: Trying to start PhantomJS again (1/2).
ERROR [launcher]: Cannot start PhantomJS

INFO [launcher]: Trying to start PhantomJS again (2/2).
ERROR [launcher]: Cannot start PhantomJS

ERROR [launcher]: PhantomJS failed 2 times (cannot start). Giving up.
Warning: Task &quot;karma:unit&quot; failed. Used --force, continuing.

Done, but with warnings.</code></pre><h2 id="2、系统ubuntu-14-04"><a href="#2、系统ubuntu-14-04" class="headerlink" title="2、系统ubuntu 14.04"></a>2、系统ubuntu 14.04</h2><h2 id="3、解决方案"><a href="#3、解决方案" class="headerlink" title="3、解决方案"></a>3、解决方案</h2><pre><code>sudo apt-get install libfontconfig</code></pre>]]></content>
      
        <categories>
            
            <category> nodejs </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu安装gem grunt-contrib-sass]]></title>
      <url>http://www.wulai.me/2015/08/09/ubuntu-e5-ae-89-e8-a3-85gem/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code># Install gem sass for grunt-contrib-sass
RUN apt-get update -qq &amp;amp;&amp;amp; apt-get install -y build-essential
RUN apt-get install -y ruby
RUN gem install sass</code></pre>]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何删除docker images/containers]]></title>
      <url>http://www.wulai.me/2015/08/08/e5-a6-82-e4-bd-95-e5-88-a0-e9-99-a4docker-imagescontainers/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1-进入root权限"><a href="#1-进入root权限" class="headerlink" title="1.进入root权限"></a>1.进入root权限</h2><pre><code>sudo su


## 2.停止所有的container，这样才能够删除其中的images：

docker stop $(docker ps -a -q)


如果想要删除所有container的话再加一个指令：

docker rm $(docker ps -a -q)


## 3.查看当前有些什么images

docker images


## 4.删除images，通过image的id来指定删除谁

docker rmi &lt;image id&gt;


想要删除untagged images，也就是那些id为&lt;None&gt;的image的话可以用

docker rmi $(docker images | grep &quot;^&lt;none&gt;&quot; | awk &quot;{print $3}&quot;)


要删除全部image的话

docker rmi $(docker images -q)</code></pre>]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Docker之常用命令 ]]></title>
      <url>http://www.wulai.me/2015/08/08/docker-e4-b9-8b-e5-b8-b8-e7-94-a8-e5-91-bd-e4-bb-a4/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="1-查看docker信息（version、info）"><a href="#1-查看docker信息（version、info）" class="headerlink" title="1. 查看docker信息（version、info）"></a>1. 查看docker信息（version、info）</h2><pre><code># 查看docker版本  
$docker version  

# 显示docker系统的信息  
$docker info  </code></pre><h2 id="2-对image的操作（search、pull、images、rmi、history）"><a href="#2-对image的操作（search、pull、images、rmi、history）" class="headerlink" title="2. 对image的操作（search、pull、images、rmi、history）"></a>2. 对image的操作（search、pull、images、rmi、history）</h2><pre><code># 检索image  
$docker search image_name  

# 下载image  
$docker pull image_name  

# 列出镜像列表; -a, --all=false Show all images; --no-trunc=false Don&apos;t truncate output; -q, --quiet=false Only show numeric IDs  
$docker images  

# 删除一个或者多个镜像; -f, --force=false Force; --no-prune=false Do not delete untagged parents  
$docker rmi image_name  

# 显示一个镜像的历史; --no-trunc=false Don&apos;t truncate output; -q, --quiet=false Only show numeric IDs  
$docker history image_name  </code></pre><h2 id="3-启动容器（run）"><a href="#3-启动容器（run）" class="headerlink" title="3. 启动容器（run）"></a>3. 启动容器（run）</h2><pre><code>docker容器可以理解为在沙盒中运行的进程。这个沙盒包含了该进程运行所必须的资源，包括文件系统、系统类库、shell 环境等等。但这个沙盒默认是不会运行任何程序的。你需要在沙盒中运行一个进程来启动某一个容器。这个进程是该容器的唯一进程，所以当该进程结束的时候，容器也会完全的停止。
# 在容器中运行&quot;echo&quot;命令，输出&quot;hello word&quot;  
$docker run image_name echo &quot;hello word&quot;  

# 交互式进入容器中  
$docker run -i -t image_name /bin/bash  

# 在容器中安装新的程序  
$docker run image_name apt-get install -y app_name  


`Note：` 在执行apt-get 命令的时候，要带上-y参数。如果不指定-y参数的话，apt-get命令会进入交互模式，需要用户输入命令来进行确认，但在docker环境中是无法响应这种交互的。apt-get 命令执行完毕之后，容器就会停止，但对容器的改动不会丢失。</code></pre><h2 id="4-查看容器（ps）"><a href="#4-查看容器（ps）" class="headerlink" title="4. 查看容器（ps）"></a>4. 查看容器（ps）</h2><pre><code># 列出当前所有正在运行的container  
$docker ps  
# 列出所有的container  
$docker ps -a  
# 列出最近一次启动的container  
$docker ps -l  </code></pre><h2 id="5-保存对容器的修改（commit）"><a href="#5-保存对容器的修改（commit）" class="headerlink" title="5. 保存对容器的修改（commit）"></a>5. 保存对容器的修改（commit）</h2><pre><code>当你对某一个容器做了修改之后（通过在容器中运行某一个命令），可以把对容器的修改保存下来，这样下次可以从保存后的最新状态运行该容器。

# 保存对容器的修改; -a, --author=&quot;&quot; Author; -m, --message=&quot;&quot; Commit message  
$docker commit ID new_image_name  


`Note：` image相当于类，container相当于实例，不过可以动态给实例安装新软件，然后把这个container用commit命令固化成一个image。</code></pre><h2 id="6-对容器的操作（rm、stop、start、kill、logs、diff、top、cp、restart、attach）"><a href="#6-对容器的操作（rm、stop、start、kill、logs、diff、top、cp、restart、attach）" class="headerlink" title="6. 对容器的操作（rm、stop、start、kill、logs、diff、top、cp、restart、attach）"></a>6. 对容器的操作（rm、stop、start、kill、logs、diff、top、cp、restart、attach）</h2><pre><code># 删除所有容器  
$docker rm `docker ps -a -q`  

# 删除单个容器; -f, --force=false; -l, --link=false Remove the specified link and not the underlying container; -v, --        volumes=false Remove the volumes associated to the container  
$docker rm Name/ID  

# 停止、启动、杀死一个容器  
$docker stop Name/ID  
$docker start Name/ID  
$docker kill Name/ID  

# 从一个容器中取日志; -f, --follow=false Follow log output; -t, --timestamps=false Show timestamps  
$docker logs Name/ID  

# 列出一个容器里面被改变的文件或者目录，list列表会显示出三种事件，A 增加的，D 删除的，C 被改变的  
$docker diff Name/ID  

# 显示一个运行的容器里面的进程信息  
$docker top Name/ID  

# 从容器里面拷贝文件/目录到本地一个路径  
$docker cp Name:/container_path to_path  
$docker cp ID:/container_path to_path  

# 重启一个正在运行的容器; -t, --time=10 Number of seconds to try to stop for before killing the container, Default=10  
$docker restart Name/ID  

# 附加到一个运行的容器上面; --no-stdin=false Do not attach stdin; --sig-proxy=true Proxify all received signal to the process  
$docker attach ID  


`Note：` attach命令允许你查看或者影响一个运行的容器。你可以在同一时间attach同一个容器。你也可以从一个容器中脱离出来，是从CTRL-C。</code></pre><h2 id="7-保存和加载镜像（save、load）"><a href="#7-保存和加载镜像（save、load）" class="headerlink" title="7. 保存和加载镜像（save、load）"></a>7. 保存和加载镜像（save、load）</h2><pre><code>当需要把一台机器上的镜像迁移到另一台机器的时候，需要保存镜像与加载镜像。

# 保存镜像到一个tar包; -o, --output=&quot;&quot; Write to an file  
$docker save image_name -o file_path  
# 加载一个tar包格式的镜像; -i, --input=&quot;&quot; Read from a tar archive file  
$docker load -i file_path  

# 机器a  
$docker save image_name &gt; /home/save.tar  
# 使用scp将save.tar拷到机器b上，然后：  
$docker load &lt; /home/save.tar  </code></pre><h2 id="8、-登录registry-server（login）"><a href="#8、-登录registry-server（login）" class="headerlink" title="8、 登录registry server（login）"></a>8、 登录registry server（login）</h2><pre><code># 登陆registry server; -e, --email=&quot;&quot; Email; -p, --password=&quot;&quot; Password; -u, --username=&quot;&quot; Username  
$docker login  </code></pre><h2 id="9-发布image（push）"><a href="#9-发布image（push）" class="headerlink" title="9. 发布image（push）"></a>9. 发布image（push）</h2><pre><code># 发布docker镜像  
$docker push new_image_name  </code></pre><h2 id="10-根据Dockerfile-构建出一个容器"><a href="#10-根据Dockerfile-构建出一个容器" class="headerlink" title="10. 根据Dockerfile 构建出一个容器"></a>10. 根据Dockerfile 构建出一个容器</h2><pre><code>#build  
  --no-cache=false Do not use cache when building the image  
  -q, --quiet=false Suppress the verbose output generated by the containers  
  --rm=true Remove intermediate containers after a successful build  
  -t, --tag=&quot;&quot; Repository name (and optionally a tag) to be applied to the resulting image in case of success  
$docker build -t image_name Dockerfile_path</code></pre>]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[An error occurred trying to connect: Get https://192.168.xx.xx:2376/v1.18/containers/json: remote error: bad certificate]]></title>
      <url>http://www.wulai.me/2015/08/06/an-error-occurred-trying-to-connect-get-https192-168-xx-xx2376v1-18containersjson-remote-error-bad-certificate/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>An error occurred trying to connect: Get <a href="https://192.168.xx.xx:2376/v1.18/containers/json" target="_blank" rel="noopener">https://192.168.xx.xx:2376/v1.18/containers/json</a>: remote error: bad certificate</p>
<pre><code>boot2docker poweroff 
boot2docker destroy
boot2docker init 
boot2docker start</code></pre>]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu通过PPTP协议使用VPN]]></title>
      <url>http://www.wulai.me/2015/07/27/ubuntu-e9-80-9a-e8-bf-87pptp-e5-8d-8f-e8-ae-ae-e4-bd-bf-e7-94-a8vpn/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="1、安装pptp客户端软件"><a href="#1、安装pptp客户端软件" class="headerlink" title="1、安装pptp客户端软件"></a>1、安装pptp客户端软件</h1><pre><code>~ sudo apt-get install pptp-linux</code></pre><h1 id="2、查看网络配置"><a href="#2、查看网络配置" class="headerlink" title="2、查看网络配置"></a>2、查看网络配置</h1><pre><code>~ ifconfig
eth0      Link encap:Ethernet  HWaddr 08:00:27:90:e8:19
          inet addr:192.168.1.200  Bcast:192.168.1.255  Mask:255.255.255.0
          inet6 addr: fe80::a00:27ff:fe90:e819/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:74 errors:0 dropped:0 overruns:0 frame:0
          TX packets:64 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:8112 (8.1 KB)  TX bytes:8542 (8.5 KB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

~ route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.1.1     0.0.0.0         UG    100    0        0 eth0
192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

~ ip route
default via 192.168.1.1 dev eth0  metric 100
192.168.1.0/24 dev eth0  proto kernel  scope link  src 192.168.1.200</code></pre><h1 id="3、初始化一个VPN的连接通道：myvpn"><a href="#3、初始化一个VPN的连接通道：myvpn" class="headerlink" title="3、初始化一个VPN的连接通道：myvpn"></a>3、初始化一个VPN的连接通道：myvpn</h1><pre><code>~ sudo pptpsetup --create myvpn --server xxx.xxx.xxx.xxx --username xx1--password xx2--encrypt --start

Using interface ppp0
Connect: ppp0  /dev/pts/1
CHAP authentication succeeded
MPPE 128-bit stateless compression enabled
local  IP address 10.10.10.3
remote IP address 10.10.10.1</code></pre><p>成功连接到远程VPN服务器。</p>
<ul>
<li>通过刚才的创建脚步：</li>
<li>在/etc/ppp/peers目录下面，会生成一个叫myvpn的文件。</li>
<li>在/etc/ppp目录下面，用户名和密码会写在chap-secrets文件中。</li>
</ul>
<h1 id="4、"><a href="#4、" class="headerlink" title="4、"></a>4、</h1><pre><code>~ sudo vi /etc/ppp/peers/myvpn

# written by pptpsetup
pty &quot;pptp xxx.xxx.xxx.xxx --nolaunchpppd&quot;
lock
noauth
nobsdcomp
nodeflate
name conan2
remotename myvpn
ipparam myvpn
require-mppe-128

#生成用户名和密码
~ sudo vi /etc/ppp/chap-secrets
xx1 myvpn &quot;xx2&quot; *</code></pre><h1 id="5、通过网站路由功能，测试VPN"><a href="#5、通过网站路由功能，测试VPN" class="headerlink" title="5、通过网站路由功能，测试VPN"></a>5、通过网站路由功能，测试VPN</h1><pre><code># 安装traceroute

~ sudo apt-get install traceroute

~ traceroute www.163.com
traceroute to www.163.com (101.23.128.17), 30 hops max, 60 byte packets
 1  localhost (192.168.1.1)  2.222 ms  3.144 ms  3.132 ms
 2  111.192.144.1 (111.192.144.1)  80.279 ms  80.632 ms  80.624 ms
 3  61.148.185.69 (61.148.185.69)  9.026 ms  9.492 ms  9.479 ms
 4  124.65.61.157 (124.65.61.157)  9.469 ms  9.459 ms  9.447 ms
 5  202.96.12.185 (202.96.12.185)  9.829 ms  9.783 ms  9.771 ms
 6  219.158.96.110 (219.158.96.110)  17.160 ms  17.210 ms  17.158 ms
 7  61.182.176.178 (61.182.176.178)  30.222 ms  28.589 ms  28.077 ms
 8  60.5.194.58 (60.5.194.58)  29.293 ms  29.287 ms  29.276 ms
 9  60.5.197.214 (60.5.197.214)  26.617 ms  26.724 ms  26.668 ms
10  101.23.255.45 (101.23.255.45)  27.672 ms  28.147 ms  26.811 ms
11  101.23.128.17 (101.23.128.17)  25.890 ms  28.065 ms  28.420 ms</code></pre><p>我们发现虽然VPN已经连接成功，但是路由没有通过VPN上网，第1跳还是localhost (192.168.1.1)</p>
<p>再次查看网络连接配置</p>
<pre><code>~ ifconfig
eth0      Link encap:Ethernet  HWaddr 08:00:27:90:e8:19
          inet addr:192.168.1.200  Bcast:192.168.1.255  Mask:255.255.255.0
          inet6 addr: fe80::a00:27ff:fe90:e819/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:175 errors:0 dropped:0 overruns:0 frame:0
          TX packets:162 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:16817 (16.8 KB)  TX bytes:19723 (19.7 KB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

ppp0      Link encap:Point-to-Point Protocol
          inet addr:10.10.10.3  P-t-P:10.10.10.1  Mask:255.255.255.255
          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1496  Metric:1
          RX packets:7 errors:0 dropped:0 overruns:0 frame:0
          TX packets:7 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:3
          RX bytes:70 (70.0 B)  TX bytes:76 (76.0 B)

~ route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.1.1     0.0.0.0         UG    100    0        0 eth0
10.10.10.1      0.0.0.0         255.255.255.255 UH    0      0        0 ppp0
50.116.27.194   192.168.1.1     255.255.255.255 UGH   0      0        0 eth0
192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

~ ip route
default via 192.168.1.1 dev eth0  metric 100
10.10.10.1 dev ppp0  proto kernel  scope link  src 10.10.10.3
50.116.27.194 via 192.168.1.1 dev eth0  src 192.168.1.200
192.168.1.0/24 dev eth0  proto kernel  scope link  src 192.168.1.200</code></pre><p>我们发现默认路由是指向eth0。</p>
<p>下面修改路由配置：</p>
<pre><code>#修改路由命令
~ sudo ip route del default
~ sudo ip route add default dev ppp0

~ route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         0.0.0.0         0.0.0.0         U     0      0        0 ppp0
10.10.10.1      0.0.0.0         255.255.255.255 UH    0      0        0 ppp0
50.116.27.194   192.168.1.1     255.255.255.255 UGH   0      0        0 eth0
192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

~ ip route
default dev ppp0  scope link
10.10.10.1 dev ppp0  proto kernel  scope link  src 10.10.10.3
50.116.27.194 via 192.168.1.1 dev eth0  src 192.168.1.200
192.168.1.0/24 dev eth0  proto kernel  scope link  src 192.168.1.200

~ traceroute www.163.com
traceroute to www.163.com (101.23.128.17), 30 hops max, 60 byte packets
 1  localhost (10.10.10.1)  281.093 ms  281.414 ms  280.941 ms
 2  router2-dal.linode.com (67.18.7.162)  281.225 ms  281.109 ms  281.841 ms
 3  xe-2-0-0.car04.dllstx2.networklayer.com (67.18.7.93)  280.882 ms  284.002 ms  283.913 ms
 4  po102.dsr01.dllstx2.networklayer.com (70.87.254.81)  284.123 ms  284.087 ms  283.979 ms
 5  po21.dsr01.dllstx3.networklayer.com (70.87.255.65)  284.000 ms  283.921 ms  283.839 ms
 6  ae16.bbr01.eq01.dal03.networklayer.com (173.192.18.224)  283.542 ms  279.296 ms  290.455 ms
 7  dls-bb1-link.telia.net (213.248.102.173)  301.426 ms  302.092 ms  302.085 ms
 8  las-bb1-link.telia.net (213.155.131.77)  327.192 ms  327.350 ms  327.344 ms
 9  chinaunicom-ic-151188-las-bb1.telia.net (213.248.94.126)  478.941 ms  479.089 ms  479.083 ms
10  219.158.30.173 (219.158.30.173)  496.679 ms  496.673 ms  496.667 ms
11  219.158.97.57 (219.158.97.57)  516.819 ms  517.035 ms  517.011 ms
12  219.158.5.129 (219.158.5.129)  491.084 ms  490.018 ms  497.472 ms
13  219.158.100.130 (219.158.100.130)  518.239 ms  518.216 ms  518.192 ms
14  61.182.176.186 (61.182.176.186)  533.695 ms  533.673 ms  533.666 ms
15  101.23.255.230 (101.23.255.230)  512.212 ms  512.500 ms  512.479 ms
16  60.5.194.74 (60.5.194.74)  519.246 ms  519.815 ms  519.791 ms
17  101.23.255.45 (101.23.255.45)  526.522 ms  526.907 ms  526.844 ms
18  101.23.128.17 (101.23.128.17)  522.068 ms  517.535 ms  517.240 ms</code></pre><p>查看第一跳，localhost (10.10.10.1)，已经通过VPN实现路由。</p>
<p>停止VPN</p>
<pre><code>~ sudo poff myvpn

~ ifconfig
eth0      Link encap:Ethernet  HWaddr 08:00:27:90:e8:19
          inet addr:192.168.1.200  Bcast:192.168.1.255  Mask:255.255.255.0
          inet6 addr: fe80::a00:27ff:fe90:e819/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:2270 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1991 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:207578 (207.5 KB)  TX bytes:184147 (184.1 KB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)</code></pre><p>再ping网站，发现网络出现问题。Network is unreachable</p>
<pre><code>~ ping www.163.com
connect: Network is unreachable

~ route -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
50.116.27.194   192.168.1.1     255.255.255.255 UGH   0      0        0 eth0
192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

~ ip route
50.116.27.194 via 192.168.1.1 dev eth0  src 192.168.1.200
192.168.1.0/24 dev eth0  proto kernel  scope link  src 192.168.1.200

    ~ sudo ip route add default via 192.168.1.1

    ~ route -n
    Kernel IP routing table
    Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
    0.0.0.0         192.168.1.1     0.0.0.0         UG    0      0        0 eth0
    50.116.27.194   192.168.1.1     255.255.255.255 UGH   0      0        0 eth0
    192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 eth0

    ~ ip route
    default via 192.168.1.1 dev eth0
    50.116.27.194 via 192.168.1.1 dev eth0  src 192.168.1.200
    192.168.1.0/24 dev eth0  proto kernel  scope link  src 192.168.1.200

    #再次ping网站，访问成功！
    ~ ping www.163.com
    PING 163.xdwscache.glb0.lxdns.com (101.23.128.17) 56(84) bytes of data.
    64 bytes from 101.23.128.17: icmp_req=1 ttl=54 time=25.6 ms
    64 bytes from 101.23.128.17: icmp_req=2 ttl=54 time=25.5 ms
    64 bytes from 101.23.128.17: icmp_req=3 ttl=54 time=27.8 ms</code></pre><p>通过ip-up, ip-down配置路由 ~ sudo vi /etc/ppp/ip-up.d/route-traffic</p>
<pre><code>#!/bin/bash
/sbin/ip route add 50.116.27.194 via 192.168.1.1
/sbin/ip route del default
/sbin/ip route add default dev ppp0

~ sudo vi /etc/ppp/ip-down.d/disableroute

#!/bin/bash
/sbin/ip route add default via 192.168.1.1</code></pre><p>重启VPN连接</p>
<pre><code>~ sudo pon myvpn
#路由跟踪正确
~ traceroute www.163.com
traceroute to www.163.com (123.125.34.30), 30 hops max, 60 byte packets
 1  localhost (10.10.10.1)  293.397 ms  293.782 ms  293.668 ms
 2  router2-dal.linode.com (67.18.7.162)  293.530 ms  293.721 ms  294.223 ms
 3  xe-2-0-0.car04.dllstx2.networklayer.com (67.18.7.93)  293.454 ms  293.358 ms  293.239 ms
 4  po102.dsr02.dllstx2.networklayer.com (70.87.254.85)  293.749 ms  293.650 ms  293.544 ms
 5  po22.dsr02.dllstx3.networklayer.com (70.87.255.69)  293.444 ms  293.339 ms  293.242 ms
 6  ae17.bbr02.eq01.dal03.networklayer.com (173.192.18.230)  293.117 ms  293.525 ms  300.406 ms
 7  dls-bb1-link.telia.net (80.239.195.177)  300.850 ms  300.667 ms  300.320 ms

#正常退出
~ sudo poff myvpn
#测试网络连接正常
~ ping www.163.com
PING 163.xdwscache.glb0.lxdns.com (101.23.128.17) 56(84) bytes of data.
64 bytes from 101.23.128.17: icmp_req=1 ttl=54 time=28.2 ms
64 bytes from 101.23.128.17: icmp_req=2 ttl=54 time=28.1 ms</code></pre>]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在ubuntu下搭建pptp vpn服务器]]></title>
      <url>http://www.wulai.me/2015/07/27/e5-9c-a8ubuntu-e4-b8-8b-e6-90-ad-e5-bb-bapptp-vpn-e6-9c-8d-e5-8a-a1-e5-99-a8/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h1 id="pptp配置"><a href="#pptp配置" class="headerlink" title="pptp配置"></a>pptp配置</h1><h2 id="1、安装pptp"><a href="#1、安装pptp" class="headerlink" title="1、安装pptp"></a>1、安装pptp</h2><p>安装pptp</p>
<pre><code>sudo apt-get -y update
sudo apt-get -y install pptpd


## 2、修改配置脚本

cat &gt;/etc/ppp/options.pptpd &lt;&lt;END
name pptpd
refuse-pap
refuse-chap
refuse-mschap
require-mschap-v2
require-mppe-128
ms-dns 8.8.8.8
ms-dns 8.8.4.4
proxyarp
lock
nobsdcomp 
novj
novjccomp
nologfd
END


说明</code></pre><ul>
<li><p>name pptpd（pptpd服务名，可以随便填写。）</p>
</li>
<li><p>refuse-pap（拒绝pap身份认证模式。）</p>
</li>
<li><p>refuse-chap（拒绝chap身份认证模式。）</p>
</li>
<li><p>refuse-mschap（拒绝mschap身份认证模式。）</p>
</li>
<li><p>require-mschap-v2（在端点进行连接握手时需要使用微软的 mschap-v2 进行自身验证。）</p>
</li>
<li><p>require-mppe-128（MPPE 模块使用 128 位加密。）</p>
</li>
<li><p>ms-dns 8.8.8.8 (ppp 为 Windows 客户端提供 DNS 服务器 IP 地址。)</p>
</li>
<li><p>proxyarp (建立 ARP 代理键值。)</p>
</li>
<li><p>nodefaultroute（不替换默认路由）</p>
</li>
<li><p>debug（开启调试模式，相关信息记录在 /var/logs/message 中。）</p>
</li>
<li><p>lock（锁定客户端 PTY 设备文件。）</p>
</li>
<li><p>nobsdcomp (禁用 BSD 压缩模式。)</p>
<h2 id="3、还有ip"><a href="#3、还有ip" class="headerlink" title="3、还有ip"></a>3、还有ip</h2><p>cat &gt; /etc/pptpd.conf &lt;&lt;END<br>option /etc/ppp/options.pptpd<br>logwtmp<br>localip 192.168.2.1<br>remoteip 192.168.2.10-100<br>END</p>
</li>
</ul>
<pre><code>## 4、增加路由转发

### 4.1 ipv4转发

cat &gt;&gt; /etc/sysctl.conf &lt;&lt;END
net.ipv4.ip_forward=1
END
sysctl -p   


### 4.2 修改iptables</code></pre><ul>
<li><p>备份当前iptables<br>iptables-save &gt; /etc/iptables.down.rules</p>
</li>
<li><p>修改iptable NAT转发<br>iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -o eth0 -j MASQUERADE</p>
</li>
<li><p>设置MTU</p>
<p>iptables -I FORWARD -s 192.168.2.0/24 -p tcp –syn -i ppp+ -j TCPMSS –set-mss 1300</p>
</li>
<li><p>保存新iptables</p>
<p>iptables-save &gt; /etc/iptables.up.rules</p>
</li>
<li><p>重启后继续有效<br>cat &gt;&gt;/etc/ppp/pptpd-options&lt;&lt;EOF<br>pre-up iptables-restore &lt; /etc/iptables.up.rules<br>post-down iptables-restore &lt; /etc/iptables.down.rules<br>EOF</p>
</li>
<li><p>增加用户</p>
</li>
<li><p>增加帐号密码都是test的用户<br>cat &gt;/etc/ppp/chap-secrets &lt;&lt;END<br>test pptpd test *<br>END</p>
</li>
<li><p>重启服务<br>/etc/init.d/pptpd restart<br>netstat -lntp</p>
</li>
<li><p>自动脚本<br>wget -c <a href="https://github.com/suyan/scripts/raw/master/Setup/pptp.sh" target="_blank" rel="noopener">https://github.com/suyan/scripts/raw/master/Setup/pptp.sh</a></p>
<h2 id="4、问题"><a href="#4、问题" class="headerlink" title="4、问题"></a>4、问题</h2><p>logwtmp.so 版本问题</p>
<p>如果链接中断，并且出现下面问题：</p>
<p>Plugin /usr/lib/pptpd/pptpd-logwtmp.so is for pppd version 2.4.5, this is 2.4.6</p>
</li>
</ul>
<p>在 /etc/pptpd.conf 文件中把 logwtmp 删掉就好了。</p>
]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[动态生成元素不响应jquery事件]]></title>
      <url>http://www.wulai.me/2015/07/25/e5-8a-a8-e6-80-81-e7-94-9f-e6-88-90-e5-85-83-e7-b4-a0-e4-b8-8d-e5-93-8d-e5-ba-94jquery-e4-ba-8b-e4-bb-b6/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>用on事件来解决</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用npm安装一些包失败了的看过来（npm国内镜像介绍）]]></title>
      <url>http://www.wulai.me/2015/07/16/e4-bd-bf-e7-94-a8npm-e5-ae-89-e8-a3-85-e4-b8-80-e4-ba-9b-e5-8c-85-e5-a4-b1-e8-b4-a5-e4-ba-86-e7-9a-84-e7-9c-8b-e8-bf-87-e6-9d-a5-ef-bc-88npm-e5-9b-bd-e5-86-85-e9-95-9c-e5-83-8f-e4-bb-8b-e7-bb-8d/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>这个也是网上搜的，亲自试过，非常好用！</p>
<p>镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:</p>
<p>1.通过config命令</p>
<pre><code>npm config set registry https://registry.npm.taobao.org 
npm info underscore （如果上面配置正确这个命令会有字符串response）


2.命令行指定

npm --registry https://registry.npm.taobao.org info underscore 


3.编辑 ~/.npmrc 加入下面内容

registry = https://registry.npm.taobao.org</code></pre><p>搜索镜像: <a href="https://npm.taobao.org" target="_blank" rel="noopener">https://npm.taobao.org</a></p>
<p>建立或使用镜像,参考: <a href="https://github.com/cnpm/cnpmjs.org" target="_blank" rel="noopener">https://github.com/cnpm/cnpmjs.org</a></p>
<h2 id="国内镜像"><a href="#国内镜像" class="headerlink" title="国内镜像"></a>国内镜像</h2><p><code>http://cnpmjs.org/</code></p>
]]></content>
      
        <categories>
            
            <category> nodejs </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PayPal高级工程总监：读完这100篇论文 就能成大数据高手]]></title>
      <url>http://www.wulai.me/2015/07/13/paypal-e9-ab-98-e7-ba-a7-e5-b7-a5-e7-a8-8b-e6-80-bb-e7-9b-91-ef-bc-9a-e8-af-bb-e5-ae-8c-e8-bf-99100-e7-af-87-e8-ae-ba-e6-96-87-e5-b0-b1-e8-83-bd-e6-88-90-e5-a4-a7-e6-95-b0-e6-8d-ae-e9-ab-98-e6-89-8b/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>开源（Open Source）用之于大数据技术，其作用有二：一方面，在大数据技术变革之路上，开源在众人之力和众人之智推动下，摧枯拉朽，吐故纳新，扮演着非常重要的推动作用。另一方面，开源也给大数据技术构建了一个异常复杂的生态系统。每一天，都有一大堆“新”框架、“新”类库或“新”工具，犹如雨后春笋般涌出，乱花渐欲“迷”人眼。为了掌控住这些“新玩意”，数据分析的达人们不得不“殚精竭虑”地“学而时习之”。</p>
<p>无论你是一个大数据的布道者，还是一个日臻成熟的技术派，亦或你还在大数据这条路上“小河才露尖尖角”，多花点时间，深入理解一下大数据系统的技术体系演进，对你都会有莫大益处。全方位地理解大数据体系结构中的各个组件，并掌握它们之间的微妙差别，可在处理自己身边的大数据案例时，助你张弛有度，“恢恢乎，其于游刃必有余地矣!”</p>
<p>在过去的几年里，我阅读了很多不错的大数据文献，这些文献陪我成长，助我成功，使我成为一个具备良好教育背景的大数据专业人士。在这里，撰写此文的目的，不限于仅仅和大家分享这些很不错的文献，更重要的是，借此机会，想和大家一起，集众人之智慧，破解大数据开源系统之迷宫。</p>
<p>需要提醒的是，下文提及到的100篇参考文献（这些文献中大多都是一些开创性的研究论文），将会为你提供结构性的深度剖析，绝非泛泛而谈。我相信，这可从根本上帮助你深度理解大数据体系组件间的细微差别。但如果你打算“走马观花”般地快速过一遍，了解大数据为何物，对不起，这里可能会让你失望。</p>
<p>那么，准备好了吗？让我们走起！</p>
<p>在介绍这100篇文献之前，首先让我们看一下大数据处理的关键架构层（如图1所示）：</p>
<h1 id="关键架构层"><a href="#关键架构层" class="headerlink" title="关键架构层"></a>关键架构层</h1><p><img src="http://res.hillock.com.cn//559b280e4d25f.jpg" alt="enter image description here"></p>
<p>图1：大数据处理的关键架构层</p>
<ul>
<li>文件系统层：在这一层里，分布式文件系统需具备存储管理、容错处理、高可扩展性、高可靠性和高可用性等特性。</li>
<li>数据存储层：由于目前采集到的数据，十之有七八为非结构化和半结构化数据，数据的表现形式各异，有文本的、图像的、音频的、视频的等，因此常见的 数据存储也要对应有多种形式，有基于键值（Key-Value）的，有基于文档（Document），还有基于列（Column）和图表（Graph）的。如果采用单一的数据库引擎，“一刀切式”的满足所有类型的数据存储需求，通常会严重降低数据库管理的性能。因此，我们需要“兵来将挡，水来土掩”式的、多元的（<a href="http://bigbe.su/lectures/2014/15.3.pdf" target="_blank" rel="noopener">Polyglot</a>）【1】数据库解决方案（这就好比，如果“兵来了”和“水来了”，都要“将”去挡，遇到“兵”时，“将”可以“酣畅淋漓”，而遇到“水”时，还用“将”去挡，那这个“将”估计就要“舍生取义”了。文献【1】是一本有关NoSQL数据处理的图书）</li>
<li>资源管理层：这一层是为了提高资源的高利用率和吞吐量，以到达高效的资源管理与调度目的。</li>
<li>资源协调层： 在本层的系统，需要完成对资源的状态、分布式协调、一致性和资源锁实施管理。</li>
<li>计算框架层：在本层的计算框架非常庞杂，有很多高度专用的框架包含其内，有流式的，交互式的，实时的，批处理和迭代图的（Batch and Iterative Graph，BSP）等。为这些计算框架提供支撑的是运行时引擎，如<a href="http://datasys.cs.iit.edu/events/CCGrid2014/CCGrid-May25-Stoica.pdf" target="_blank" rel="noopener">BDAS</a>【2】(Spark) 和 Flink等（注：这里的BDAS是指“Berkeley Data Analytics Stack”，即伯克利数据分析栈。文献【2】为Spark核心作者Ion Stoica的讲座幻灯片文档）。</li>
<li>数据分析层：在这一层里，主要包括数据分析(消费)工具和一些数据处理函数库。这些工具和函数库，可提供描述性的、预测性的或统计性的数据分析功能及机器学习模块。</li>
<li>数据集成层：在这一层里，不仅包括管理数据分析工作流中用到的各种适用工具，除此之外，还包括对元数据（Metadata）管理的工具。</li>
<li>操作框架层：这一层提供可扩展的性能监测管理和基准测试框架。</li>
</ul>
<h2 id="架构的演进"><a href="#架构的演进" class="headerlink" title="架构的演进"></a>架构的演进</h2><p>减少数据生产者和消费者之间的处理延迟，一直是现代计算构架不断演进的主要动力。由此，诞生了实时和低延迟处理的计算构架，如Lambda和Kappa等，这类混合架构取长补短，架起传统的批处理层和交互式层之间连接的桥梁。</p>
<ul>
<li><a href="http://jameskinley.tumblr.com/post/37398560534/the-lambda-architecture-principles-for" target="_blank" rel="noopener">Lambda</a>【3】 -该架构是经典的大数据处理范式，是由南森马兹（Nathan Marz）提出的一个实时大数据处理框架。更多有关Lamda的信息，请读者访问Lambda官方网站。（注：文献【3】是由James Kinley在轻博客网站Tumblr发表的一篇博文：Lambda 架构：构架实时大数据系统的原则）。</li>
<li><a href="http://radar.oreilly.com/2014/07/questioning-the-lambda-architecture.html" target="_blank" rel="noopener">Kappa</a>【4】-该计算构架可视为Lambda的一个强有力替代者，Kappa将数据处理的上游移至流式层（注：文献【4】是一篇博客文章，作者是Jay Kreps是Linkedln的一名在线数据架构技术高管。Kreps认为，虽然Lambda构架的理念很有价值，但终究还是一个临时解决方案。他设计了一个替代架构Kappa，是基于他在Linkedin构建Kafka和Samza的经验设计而成）。</li>
<li><a href="http://www.vldb.org/pvldb/vol7/p1441-boykin.pdf" target="_blank" rel="noopener">SummingBird</a>【5】-这是一个参考模型，用来桥接在线处理模式和传统处理模式。Summingbird是由Twitter（推特）公司用Scala语言开发的、并开源的大规模数据处理框架，支持开发者以批处理模式（基于Hadoop）或流处理模式（基于Storm），或混合模式（即前两种模式的组合）以统一的方式执行代码。（注：文献【5】是Summingbird的主要设计者Oscar Boykin、Sam Ritchie等人于2014年发表于知名期刊PVLDB中论文，其中论文的二作Sam Ritchie大有来头，他是计算机科学界的传奇人物、C语言和Unix的设计者Dennis Ritchie的侄子）。</li>
</ul>
<p>在你尚未深入了解下面的各个具体的框架层次之前，建议你认真阅读一下下面的几篇非常有价值的文献，它们帮为你“恶补”一下诸如NoSQL（非结构化）数据存储、数据仓库大规模计算及分布式系统等相关领域的背景知识：</p>
<ul>
<li><a href="http://www.morganclaypool.com/doi/pdf/10.2200/S00516ED2V01Y201306CAC024" target="_blank" rel="noopener">计算中心即计算机</a>【6】（Data center as a computer）-文献【6】是威斯康星大学-麦迪逊分校Mark D. Hill教授主编的一个论文集式的图书，在这本图书中，收集了很多有关数据仓库大规模计算的论文（注：将数据中心视为一台计算机，与传统的高性能计算机有很大不同。计算中心的实例将以虚拟机或者容器的形式存在，计算资源的配置对于用户而言是透明的，这样就大幅降低系统部署的复杂度、并提高资源使用的灵活性）。</li>
<li><a href="http://www.cattell.net/datastores/Datastores.pdf" target="_blank" rel="noopener">非结构化（NOSQL）</a>数据存储【7】- 文献是由Rick Cattell撰写的论文，论文讨论了可扩展的结构化数据的、非结构化的（包括基于键值对的、基于文档的和面向列的）数据存储方案（注：NOSQL是支撑大数据应用的关键所在。事实上，将NOSQL翻译为“非结构化”不甚准确，因为NOSQL更为常见的解释是：Not Only SQL（不仅仅是结构化），换句话说，NOSQL并不是站在结构化SQL的对立面，而是既可包括结构化数据，也可包括非结构化数据）。</li>
<li><a href="http://www.christof-strauch.de/nosqldbs.pdf" target="_blank" rel="noopener">NoSQL学位论文</a>【8】-该文献是德国斯图加特传媒大学Christof Strauch撰写的学位论文，该论文对分布式系统和第一代非结构化系统提供了非常系统的背景知识介绍。</li>
<li><a href="http://webdocs.cs.ualberta.ca/~lengdong/papers/JCST14.pdf" target="_blank" rel="noopener">大规模数据管理</a>【9】-文献是加拿大阿尔伯塔大学的研究人员撰写的一篇综述，讨论了大数据应用程序的大规模数据管理系统，传统的数据库供应商与新兴的互联网企业，它们对大数据管理需求是不同的。文章的讨论范围涵盖很广，数据模型、系统结构及一致性模型，皆有涉及。 <a href="http://grail.csuohio.edu/~sschung/cis612/hadoopjoin_sigmod2010.pdf" target="_blank" rel="noopener">最终一致性（Eventual Consistency）</a>【10】：论文讨论了分布式系统中的各种不同的一致性模型。（注：原文给出的链接可能有误，因为根据所提供的链接下载而来的论文是关于“MapReduce中日志处理的Join算法”的综述文章，与“最终一致性”的讨论议题无关。这里推荐2篇新的相关论文：（1）综述文章：数据库最终一致性：最新的进展【10】new1；（2）微软研究人员2013年发表于SIGMOD的文章：“最终一致性的反思（Rethinking Eventual Consistency）【10】new2”。）</li>
<li><a href="http://www.cs.berkeley.edu/~rxin/db-papers/CAP.pdf" target="_blank" rel="noopener">CAP理论</a>【11】-文献以“CAP理论十二年回顾：”规则”已经变了”为题，探讨了CAP理论及其演化，是篇非常不错的介绍CAP理论的基础性论文（注：论文作者Eric Brewer是加州大学伯克利分校的知名计算机科学学者。该文首发于《Computer》杂志，随后又被InfoQ和IEEE再次发表。CAP理论断言，任何基于网络的数据共享系统，最多只能满足数据一致性（Consistency，C）、可用性（Availability ，A）、分区（Partition，P）容忍性这三要素中的两个要素。但通过显式处理分区，系统设计师可做到优化数据的一致性和可用性，进而取得三者之间的妥协与平衡）。</li>
</ul>
<p>在过去，在大规模数据处理上，传统的并行数据库管理系统（DBMS）和基于Map Reduce（映射-规约，以下简称MR）的批处理范式之间，曾发生激烈辩论，各持己见。并行数据库管理系统的<a href="http://database.cs.brown.edu/sigmod09/benchmarks-sigmod09.pdf" target="_blank" rel="noopener">支持者</a>【12】（注：由耶鲁大学、微软和麻省理工学院的研究人员于2009年发表在SIGMOD的一篇文章）和另外<a href="http://database.cs.brown.edu/papers/stonebraker-cacm2010.pdf" target="_blank" rel="noopener">一篇文献</a>【13】（注：2010年发表于《美国计算机学会通讯》上的论文：“MapReduce和并行数据库管理系统，是朋友还是敌人？”），被<a href="http://www.cs.princeton.edu/courses/archive/spr11/cos448/web/docs/week10_reading2.pdf" target="_blank" rel="noopener">MR的拥趸者</a>【14】（注：发表于美国计算机学会通讯的论文：MapReduce:一个弹性的数据处理工具）狠狠地给批驳了一番。</p>
<p>然而，令人讽刺的是，从那时起，Hadoop社区开始引入无共享的（Shared-Nothing）的MPP（大规模并行处理）风格的大数据处理模式，文献“<a href="http://www.vldb.org/pvldb/vol7/p1295-floratou.pdf" target="_blank" rel="noopener">Hadoop上的SQL</a>【15】”，便是例证。要知道，MPP是并行数据库管理系统（DBMS）的灵魂，这样，Map Reduce绕了一大圈，又似回到它当初离开的地方。</p>
<h1 id="文件系统层"><a href="#文件系统层" class="headerlink" title="文件系统层"></a>文件系统层</h1><p>由于文件系统层关注的焦点，开始向“低延时处理”方向转移，所以传统基于磁盘存储的文件系统，也开始向基于内存计算的文件系统转变 —— 这样做，会大大降低I / O操作和磁盘序列化带来的访问开销。Tachyon 和 Spark <a href="https://www.cs.berkeley.edu/~matei/papers/2012/nsdi_spark.pdf" target="_blank" rel="noopener">RDD</a>【16】就是朝这个方向演化的范例（注：这里RDD指的是弹性分布式数据集（Resilient Distributed Datasets），它是一种高度受限的共享内存模型，文献【16】由伯克利大学加州分校的Matei Zaharia等撰写的，他们提出了一种面向内存集群运算的容错抽象模型）。</p>
<ul>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en/us/archive/gfs-sosp2003.pdf" target="_blank" rel="noopener">Google文件系统（GFS）</a>【17】-该文献是分布式文件系统的奠基之作，著名的Hadoop 分布式文件系统（HDFS），亦脱胎于GFS，基本上可视为GFS的一个简化实现版（注：文献【17】提出了一个可扩展的分布式文件系统GFS，可用于大型分布式数据密集型应用。文献认为，组件故障是常态而不是异常。其所提出的GFS，着眼在几个重要的目标，比如性能、可伸缩性、可靠性和可用性。GFS的新颖之处，并不在于它采用了多么令人惊艳的技术，而在于它能利用所提出的方案，采用廉价的商用机器，来构建高效的分布式文件系统。有用的创新，才是真的创新，GFS做到了！）。</li>
<li><a href="http://zoo.cs.yale.edu/classes/cs422/2014fa/readings/papers/shvachko10hdfs.pdf" target="_blank" rel="noopener">Hadoop</a> 文件系统【18】-该文献由雅虎公司的计算机科学家Konstantin Shvachko等人联合撰写的，论文给出了HDFS的进化历史背景及其架构的设计内涵，是了解Hadoop技术的经典之作。</li>
<li><a href="http://ceph.com/papers/weil-ceph-osdi06.pdf" target="_blank" rel="noopener">Ceph文件系统</a>【19】-Ceph是HDFS有力的<a href="https://www.usenix.org/legacy/publications/login/2010-08/openpdfs/maltzahn.pdf" target="_blank" rel="noopener">替代者</a>【20】（注：Ceph文件系统是加州大学圣克鲁兹分校（USSC）博士生Sage Weil博士期间的一项有关存储系统的研究项目。初出茅庐，略有小成。之后，在开源社区的推动下，Ceph逐渐羽翼渐丰，风云叱咤，功成名就，逐渐发展成为一个 Linux系统下 PB 级分布式文件系统。文献【19】是Weil本人在2006年顶级会议OSDI发表的有关Ceph的开山论文。文献【20】则是Weil率领他的一帮小伙伴们再次发文强调，Ceph是HDFS<a href="https://www.usenix.org/legacy/publications/login/2010-08/openpdfs/maltzahn.pdf" target="_blank" rel="noopener">强有力的替代者</a>）。</li>
<li><a href="http://www.cs.berkeley.edu/~haoyuan/papers/2014_socc_tachyon.pdf" target="_blank" rel="noopener">Tachyon</a>【21】–是一个高容错的分布式内存文件系统，其设计的核心内涵是，要满足当下“低延迟”的数据处理要求（注：Tachyon是在内存中处理缓存文件，允许文件以访问内存的速度在集群框架中进行可靠的共享，类似于Spark。Tachyon的吞吐量比HDFS高出100倍。Spark框架虽然也提供了强大的内存计算能力，但其没有提供内存文件的存储管理能力，而Tachyon则弥补了Spark的不足之处。文献【21】是伯克利大学加州分校和麻省理工学院的研究者联合撰写的，发表在2014年的 SoCC国际会议上，论文一作UC Berkeley AMP实验室博士生李浩源，他亦是Spark核心开发人员之一）。</li>
</ul>
<p>文件系统的演化历程，其实也见证了文件格式和压缩技术的发展历程。下面的参考文献，可以让你了解到，“面向行”或“面向列”存储格式各自的优缺点，并且还可让你了然文件存储技术发展的新趋势——嵌套式的面向列的存储格式，这种存储格式可极大提高大数据的处理效率。</p>
<p>当前，在文件系统阶段，数据管理的最大挑战之一就是，如何处理大数据中的数据冗余。纠删码（Erasure code）是很有创意的冗余保护机制，它可以减少三倍的冗余副本，还不会影响数据的可恢复性与可用性。</p>
<ul>
<li><a href="http://db.csail.mit.edu/projects/cstore/abadi-sigmod08.pdf" target="_blank" rel="noopener">面向列存储 vs. 面向列存储</a>【22】—该文献是是2008年发表于SIGMOD的一篇论文，该文对数据的布局、压缩及物化（materialization）策略都做了很不错的综述。 ＊ <a href="http://web.cse.ohio-state.edu/hpcs/WWW/HTML/publications/papers/TR-11-4.pdf" target="_blank" rel="noopener">RCFile</a>【23】-这是由Facebook数据基础设施小组和俄亥俄州立大学的华人学者共同提出的文件存储格式，他们走了一个“中庸之道”，充分吸取面向列和面向行存储模式的优点，扬长避短，提出了一种混合的数据存储结构PAX（注：目前这种以行/列混合存储技术已成功应用于 Facebook 等国内外大型互联网企业的生产性运行体系）。</li>
<li><a href="https://github.com/Parquet/parquet-mr/wiki/The-striping-and-assembly-algorithms-from-the-Dremel-paper" target="_blank" rel="noopener">Parquet</a>【24】- 这是一种面向行的存储格式，其设计理念源于谷歌 Dremel论文（注：Parquet主要用于 Hadoop 的生态系统中。文献【24】是Julien Dem在Github发表的一篇博客文章）。</li>
<li><a href="http://web.cse.ohio-state.edu/hpcs/WWW/HTML/publications/papers/TR-14-2.pdf" target="_blank" rel="noopener">ORCFile</a>【25】–这是一种被Hive（一种基于Hadoop的数据仓库工具）采用的、面向列存储的改进版存储格式（注：文献【25】是2014年发表于顶会SIGMOD的一篇学术论文）。</li>
<li><a href="http://www.ijritcc.org/IJRITCC%20Vol_2%20Issue_3/A%20Survey%20on%20Compression%20Algorithms%20%20in%20Hadoop.pdf" target="_blank" rel="noopener">压缩技术</a>【26】-这是是一篇阐述在Hadoop生态系统下的常见压缩算法的综述性文章，文章对常见的压缩算法和其适用场景以及它们的优缺点，做了非常不错的归纳总结。</li>
<li><a href="http://web.eecs.utk.edu/~plank/plank/papers/Login-2013.pdf" target="_blank" rel="noopener">纠删码技术（Erasure code）</a>【27】-这是一篇是田纳西大学EECS系教授James Plank撰写的、有关存储系统纠删码技术的入门级的文献。有关纠删码改进技术的阐述，读者可参阅来自南加州大学和Facebook的7名作者共同完成的论文<a href="http://anrg.usc.edu/~maheswaran/Xorbas.pdf" target="_blank" rel="noopener">《XORing Elephants: 面向大数据的新型纠删码技术【28】》</a>（注：文献【28】的作者开发了纠删码家族的新成员——基于XOR的本地副本存储LRC，该技术是面向Hadoop生态系统的，可显著减少修复数据时的I/O操作和存储开销）。</li>
</ul>
<h1 id="数据存储层"><a href="#数据存储层" class="headerlink" title="数据存储层"></a>数据存储层</h1><p>宽泛地讲，据对一致性（consistency）要求的强弱不同，分布式数据存储策略，可分为ACID和BASE两大阵营。ACID是指数据库事务具有的四个特性：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。ACID中的一致性要求比较强，事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态。而BASE对一致性要求较弱，它的三个特征分别是：基本可用（Basically Available）, 软状态/柔性事务（Soft-state，即状态可以有一段时间的不同步）, 最终一致性（Eventual consistency）。BASE还进一步细分基于键值的，基于文档的和基于列和图形的 – 细分的依据取决于底层架构和所支持的数据结构（注：BASE完全不同于ACID模型，它以牺牲强一致性，获得基本可用性和柔性可靠性，并要求达到最终一致性）。</p>
<p>在数据存储层，还有很多类似的系统和某些系统的变种，这里，我仅仅列出较为出名的几个。如漏掉某些重要系统，还请谅解。</p>
<h1 id="BASE"><a href="#BASE" class="headerlink" title="BASE"></a>BASE</h1><h2 id="键值存储（Key-Value-Stores）"><a href="#键值存储（Key-Value-Stores）" class="headerlink" title="键值存储（Key Value Stores）"></a>键值存储（Key Value Stores）</h2><ul>
<li><p><a href="http://www.cs.ucsb.edu/~agrawal/fall2009/dynamo.pdf" target="_blank" rel="noopener">Dynamo</a>【29】– 这是由亚马逊工程师们设计的基于键值的高可用的分布式存储系统（注：Dynamo放弃了数据建模的能力，所有的数据对象采用最简单的Key-value模型存储，可简单地将Dynamo理解为一个巨大的Map。Dynamo是牺牲了部分一致性，来换取整个系统的高可用性）。</p>
</li>
<li><p><a href="https://www.cs.cornell.edu/projects/ladis2009/papers/lakshman-ladis2009.pdf" target="_blank" rel="noopener">Cassandra</a>【30】 – 这是由Facebook工程师设计的一个离散的分布式结构化存储系统，受亚马逊的Dynamo启发，Cassandra采用的是面向多维的键值或面向列的数据存储格式（注：Cassandra可用来管理分布在大量廉价服务器上的巨量结构化数据，并同时提供没有单点故障的高可用服务）。</p>
</li>
<li><p><a href="http://static.usenix.org/events/fast/tech/full_papers/Sumbaly.pdf" target="_blank" rel="noopener">Voldemort</a>【31】 –这又是一个受亚马逊的Dynamo启发的分布式存储作品，由全球最大的职业社交网站LinkedIn的工程师们开发而成（注：Voldemort，这个在《哈利·波特》中常被译作“伏地魔”的开源数据库，支撑起了LinkedIn的多种数据分析平台）。</p>
</li>
</ul>
<h2 id="面向列的存储（Column-Oriented-Stores）"><a href="#面向列的存储（Column-Oriented-Stores）" class="headerlink" title="面向列的存储（Column Oriented Stores）"></a>面向列的存储（Column Oriented Stores）</h2><ul>
<li><p><a href="http://static.googleusercontent.com/media/research.google.com/en/us/archive/bigtable-osdi06.pdf" target="_blank" rel="noopener">BigTable</a>【32】 –这是一篇非常经典的学术论文，阐述了面向列的分布式的数据存储方案，由谷歌荣誉出品。（注：Bigtable是一个基于Google文件系统的分布式数据存储系统，是为谷歌打拼天下的“三驾马车”之一，另外两驾马车分别是分布式锁服务系统Chubby和下文将提到的MapReduce）。</p>
</li>
<li><p><a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.303.752&amp;rep=rep1&amp;type=pdf" target="_blank" rel="noopener">HBase</a>【33】 –目前还没有有关Hbase的定义性论文，这里的文献提供了一个有关HBase技术的概述性文档（注：Hbase是一个分布式的、面向列的开源数据库。其设计理念源自谷歌的 BigTable，用Java语言编写而成。文献【33】是一个有关Hbase的幻灯片文档）。</p>
</li>
<li><p><a href="http://www.hypertable.com/collateral/whitepaper-hypertable-architecture.pdf" target="_blank" rel="noopener">Hypertable</a>【34】-文献是一个有关“Hypertable”的技术白皮书，对该数据存储结构做了较为详细的介绍（注：Hypertable也是一个开源、高性能、可伸缩的数据库，它采用与Google的Bigtable类似的模型）。</p>
</li>
</ul>
<h2 id="面向文档的存储（Document-Oriented-Stores）"><a href="#面向文档的存储（Document-Oriented-Stores）" class="headerlink" title="面向文档的存储（Document Oriented Stores）"></a>面向文档的存储（Document Oriented Stores）</h2><ul>
<li><p><a href="https://media.readthedocs.org/pdf/couchdb/latest/couchdb.pdf" target="_blank" rel="noopener">CouchDB</a>【35】– 这是一款面向文档的、开源数据存储管理系统（注：文献【35】是一本Apache CouchDB的400多页的官方文档）。</p>
</li>
<li><p><a href="http://s3.amazonaws.com/info-mongodb-com/MongoDB_Architecture_Guide.pdf" target="_blank" rel="noopener">MongoDB</a>【36】 –是目前非常流行的一种非关系型(NoSQL)数据库（注：文献【36】是一个有关MongoDB的白皮书，对MongoDB结构做了很不错的介绍）。</p>
</li>
</ul>
<h2 id="面向图（Graph）的存储"><a href="#面向图（Graph）的存储" class="headerlink" title="面向图（Graph）的存储"></a>面向图（Graph）的存储</h2><ul>
<li><p><a href="http://info.neotechnology.com/rs/neotechnology/images/GraphDatabases.pdf" target="_blank" rel="noopener">Neo4j</a>【37】 –文献是Ian Robinson等撰写的图书《Graph Databases（图数据库）》（注：Neo4j是一款目前最为流行的高性能NoSQL 图数据库，它使用图来描述数据模型，把数据保存为图中的节点以及节点之间的关系。这是最流行的图数据库）。</p>
</li>
<li><p><a href="http://s3.thinkaurelius.com/docs/titan/0.9.0-M2/" target="_blank" rel="noopener">Titan</a>【38】 –文献是有关Titan的在线文档（Titan是一款Apache许可证框架下的分布式的开源图数据库，特别为存储和处理大规模图而做了大量优化）。</p>
</li>
</ul>
<h2 id="ACID"><a href="#ACID" class="headerlink" title="ACID"></a>ACID</h2><p>我注意到，现在很多开源社区正在悄悄发生变化，它们开始“亦步亦趋”地跟随谷歌的脚步。这也难怪，谷歌太牛，跟牛人混，近牛者牛 —— 下面4篇文献，有3篇来自于谷歌的“神来之笔”，他们解决了全球分布一致的数据存储问题。</p>
<ul>
<li><p><a href="http://www.cidrdb.org/cidr2011/Papers/CIDR11_Paper32.pdf" target="_blank" rel="noopener">Megastore</a>【39】 –这是一个构建于BigTable之上的、高可用的分布式存储系统，文献为有关Megastore的技术白皮书（注：Megastore在被谷歌使用了数年之后，相关技术信息才在2001年公布。CSDN网站亦有文献【39】的中文解读：Google Megastore分布式存储技术全揭秘）。</p>
</li>
<li><p><a href="http://static.googleusercontent.com/media/research.google.com/en/us/archive/spanner-osdi2012.pdf" target="_blank" rel="noopener">Spanner</a>【40】–这是由谷歌研发的、可扩展的、全球分布式的、同步复制数据库，支持SQL查询访问。（注：Spanner的“老爹”是Big Table，可以说，没有“大表”这个爹，就不可能有这个强有力的“扳手” 儿子。它是第一个把数据分布在全球范围内的系统，并且支持外部一致性的分布式事务）。</p>
</li>
<li><p><a href="http://www.vldb.org/pvldb/vol7/p1259-gupta.pdf" target="_blank" rel="noopener">MESA</a>【41】–亦是由谷歌研发的、跨地域复制(geo-replicated)、高可用的、可容错的、可扩展的近实时数据仓库系统（注：在2014年的VLDB 大会上，谷歌公布了他们的分析型数据仓库系统MESA，该系统主要用于存储Google互联网广告业务相关的关键衡量数据。文献【41】是VLDB的会议论文）。</p>
</li>
<li><p><a href="https://github.com/cockroachdb/cockroach/blob/master/docs/design.md" target="_blank" rel="noopener">CockroachDB</a>【42】–该系统是由Google前工程师Spencer Kimball领导开发的Spanner 的开源版本（注：这个项目的绰号是“螳螂（Cockroach）”，其寓意是“活得长久”，因为蟑螂是地球上生命力最强的生物之一，即使被砍下头颅，依然还能存活好几天！文献【42】是代码托管网站GitHub上对Cockroach的说明性文档）。</p>
</li>
</ul>
<h2 id="资源管理器层（Resource-Managers）"><a href="#资源管理器层（Resource-Managers）" class="headerlink" title="资源管理器层（Resource Managers）"></a>资源管理器层（Resource Managers）</h2><p>第一代Hadoop的生态系统，其资源管理是以整体单一的调度器起家的，其代表作品为YARN。而当前的调度器则是朝着分层调度的方向演进（Mesos则是这个方向的代表作），这种分层的调度方式，可以管理不同类型的计算工作负载，从而可获取更高的资源利用率和调度效率。</p>
<ul>
<li><p><a href="https://54e57bc8-a-62cb3a1a-s-sites.googlegroups.com/site/2013socc/home/program/a5-vavilapalli.pdf?attachauth=ANoY7co94J9PVjpjD5GD4z-S8e1O7YrLsqHssH7aeFReTJaoOBLbvLhq9HeDNb-PQz2jQvPUeQbDjJa2bctooZz5_zHCKWXAKZrYqAy_mVCLIQqU0Cc-sNQBHOJNsUTyVPfEdpHQ5yoIGVdIzoCnQwsFjbSX2ztS9b0OBNI2SjDCdvLE7Hsi5ktJINChoFa7w0ELgFvir4sEAJaL-G1qgmUglhOjVjHgwXYsqHH7FOPXrTVC-csZelo=&amp;attredirects=0" target="_blank" rel="noopener">YARN</a>【43】– 这是新一代的MapReduce计算框架，简称MRv2，它是在第一代MapReduce的基础上演变而来的（注：MRv2的设计初衷是，为了解决第一代Hadoop系统扩展性差、不支持多计算框架等问题。对国内用户而言，原文献下载链接可能会产生404错误，这里提供一个新文献：由2011年剥离自雅虎的Hadoop初创公司Hortonworks给出的<a href="http://hortonworks.com/wp-content/uploads/2013/12/Apache.Hadoop.YARN_.Sample.pdf" target="_blank" rel="noopener">官方文献</a>【43】new，阅读该文献也可对YARN有较为深入的理解。CSDN亦有对YARN详细解读的文章：<a href="http://file:///D:/iwork/CSDN-%E6%96%87%E7%AB%A0/04-big%20data/%E6%9B%B4%E5%BF%AB%E3%80%81%E6%9B%B4%E5%BC%BA%E2%80%94%E2%80%94%E8%A7%A3%E6%9E%90Hadoop%E6%96%B0%E4%B8%80%E4%BB%A3MapReduce%E6%A1%86%E6%9E%B6Yarn" target="_blank" rel="noopener">更快、更强——解析Hadoop新一代MapReduce框架Yarn</a>）。</p>
</li>
<li><p><a href="http://people.csail.mit.edu/matei/papers/2011/nsdi_mesos.pdf" target="_blank" rel="noopener">Mesos</a>【44】–这是一个开源的计算框架，可对多集群中的资源做弹性管理（注：Mesos诞生于UC Berkeley的一个研究项目，现为Apache旗下的一个开源项目，它是一个全局资源调度器。目前Twitter、 Apple等国外大公司正在使用Mesos管理集群资源，国内用户有豆瓣等。文献【44】是加州大学伯克利分校的研究人员发表于著名会议NSDI上的学术论文）。</p>
</li>
</ul>
<p>这些计算框架和调度器之间是松散耦合的，调度器的主要功能就是基于一定的调度策略和调度配置，完成作业调度，以达到工作负载均衡，使有限的资源有较高的利用率。</p>
<h2 id="调度器（Schedulers）"><a href="#调度器（Schedulers）" class="headerlink" title="调度器（Schedulers）"></a>调度器（Schedulers）</h2><p>作业调度器，通常以插件的方式加载于计算框架之上，常见的作业调度器有4种：</p>
<ul>
<li><p><a href="https://hadoop.apache.org/docs/stable1/capacity_scheduler.pdf" target="_blank" rel="noopener">计算能力调度器</a>【45】（Capacity Scheduler）-该文献是一个关于计算能力调度器的指南式文档，介绍了计算能力调度器的不同特性。</p>
</li>
<li><p><a href="http://www.valleytalk.org/wp-content/uploads/2013/03/fair_scheduler_design_doc.pdf" target="_blank" rel="noopener">公平调度器</a>【46】（FairShare Scheduler） -该文献是Hadoop的公平调度器设计文档，介绍了公平调度的各项特征（注：公平调度是一种赋予作业资源的方法，它提供了一个基于任务数的负载均衡机制，其目的是让所有的作业随着时间的推移，都能平均的获取等同的共享资源）。</p>
</li>
<li><p><a href="http://www.eecs.berkeley.edu/Pubs/TechRpts/2009/EECS-2009-55.pdf" target="_blank" rel="noopener">延迟调度</a>【47】（Delayed Scheduling） –该文献是加州大学伯克利分校的一份技术报告，报告介绍了公平调度器的延迟调度策略。</p>
</li>
<li><p><a href="http://arxiv.org/ftp/arxiv/papers/1207/1207.0780.pdf" target="_blank" rel="noopener">公平与能力调度器</a>【48】（Fair &amp; Capacity schedulers ）–该文献是一篇关于云环境下的Hadoop调度器的综述性论文。</p>
</li>
</ul>
<h2 id="协调器（Coordination）"><a href="#协调器（Coordination）" class="headerlink" title="协调器（Coordination）"></a>协调器（Coordination）</h2><p>在分布式数据系统中，协调器主要用于协调服务和进行状态管理。</p>
<ul>
<li><a href="http://research.microsoft.com/en-us/um/people/lamport/pubs/paxos-simple.pdf" target="_blank" rel="noopener">Paxos</a>【49】 –文献【49】是经典论文“<a href="http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf" target="_blank" rel="noopener">The Part-Time Parliament（兼职的议会）</a>【50】” 的简化版。</li>
</ul>
<p>注：两篇文献的作者均是莱斯利·兰伯特（Leslie Lamport），此君是个传奇人物，科技论文写作常用编辑器LaTex，其中“La”就是来自其姓“Lamport”的前两个字母。Lamport目前是微软研究院首席研究员，2013年，因其在分布式计算理论领域做出的杰出贡献，荣获计算机领域最高奖——图灵奖。</p>
<p>牛人的故事特别多，Lamport亦是这样。就这两篇文献而言，Lamport的奇闻轶事都值得说道说道。光看其经典论文题目“<a href="http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf" target="_blank" rel="noopener">The Part-Time Parliament（兼职的议会</a>）【50】”，或许就让读者“一头雾水”，这是一篇计算机科学领域的论文吗？和读者一样感觉的可能还有期刊编辑。其实，早在1990年时，Lamport就提出Paxos算法，他虚构了一个希腊城邦Paxos及其议会，以此来形象比喻说明该算法的流程。论文投出后，期刊编辑建议Lamport，将论文用更加严谨的数学语言重新进行描述一下。可Lamport则认为，我的幽默，你不懂！拒绝修改。时隔八年之后的 1998年，Paxos算法才被伯乐期刊《ACM Transactions on Computer Systems》发表。由于Paxos算法本身过于复杂，且同行不理解自己的“幽默”， 于是，2001年Lamport就用简易语言撰写这篇文章，重新发表了该论文的<a href="http://research.microsoft.com/en-us/um/people/lamport/pubs/paxos-simple.pdf" target="_blank" rel="noopener">简化版</a>【49】，即“Paxos made simple（Paxos变得简单）”。简化版的摘要更简单，就一句话：“Paxos算法，用简易英语说明之，很简单”，如果去掉中间的那个无故紧要的定语从句，就是“Paxos算法，很简单”。弄得你都来不及做深思状，摘要就完了。这…，这…，完全颠覆了我们常用的“三段论式（提问题、解问题、给结论）”的论文摘要写法啊。</p>
<p>后来，随着分布式系统的不断发展壮大，Paxos算法开始大显神威。Google的Chubby和Apache的Zookeeper，都是用Paxos作为其理论基础实现的。就这样， Paxos终于登上大雅之堂，它也为Lamport在2013年获得图灵奖，立下汗马功劳。从Lamport发表Paxos算法的小案例，我们可以看出：彪悍的人生，不需要解释。牛逼的论文，就可以任性！</p>
<ul>
<li><p><a href="http://static.googleusercontent.com/media/research.google.com/en/us/archive/chubby-osdi06.pdf" target="_blank" rel="noopener">Chubby</a>【51】– 该文献的作者是谷歌工程师Mike Burrows。Chubby系统本质上就是前文提到的Paxos的一个实现版本，主要用于谷歌分布式锁服务。（注：原文链接会出现404错误，CSDN网站有<a href="http://download.csdn.net/download/caohonxian/4602983" target="_blank" rel="noopener">Chubby论文的下载链接</a>）。</p>
</li>
<li><p><a href="https://www.usenix.org/legacy/event/usenix10/tech/full_papers/Hunt.pdf" target="_blank" rel="noopener">Zookeeper</a>【52】 –这是Apache Hadoop框架下的Chubby开源版本。它不仅仅提供简单地上锁服务，而事实上，它还是一个通用的分布式协调器，其设计灵感来自谷歌的Chubby（注：众所周知，分布式协调服务开发困难很大，分布式系统中的多进程间很容易发生条件竞争和死锁。ZooKeeper的开发动力就是减轻分布式应用开发的困难，使用户不必从零开始构建协调服务）。</p>
</li>
</ul>
<h2 id="计算框架（Computational-Frameworks）"><a href="#计算框架（Computational-Frameworks）" class="headerlink" title="计算框架（Computational Frameworks）"></a>计算框架（Computational Frameworks）</h2><p>运行时计算框架，可为不同种类的计算，提供运行时（runtime）环境。最常用的是运行时计算框架是Spark和Flink。</p>
<ul>
<li><p><a href="https://www.usenix.org/system/files/login/articles/zaharia.pdf" target="_blank" rel="noopener">Spark</a>【53】 –因Spark日益普及，加之其具备良好的多计算环境的适用性，它已对传统的Hadoop生态环境，形成了严峻的挑战（注：Spark是一个基于内存计算的开源的集群计算系统，其目的在于，让数据分析更加快速。Spark是由加州大学伯克利分校的AMP实验室采用Scala语言开发而成。Spark的内存计算框架，适合各种迭代算法和交互式数据分析，能够提升大数据处理的实时性和准确性，现已逐渐获得很多企业的支持，如阿里巴巴、百度、网易、英特尔等公司均是其用户）。</p>
</li>
<li><p><a href="http://events.linuxfoundation.org/sites/events/files/slides/flink_apachecon_small.pdf" target="_blank" rel="noopener">Flink</a>【54】 –这是一个非常类似于Spark的计算框架，但在迭代式数据处理上，比Spark更给力（注：目前大数据分析引擎Flink，已升级成为Apache顶级项目）。</p>
</li>
</ul>
<p>Spark和Flink都属于基础性的大数据处理引擎。具体的计算框架，大体上，可根据采用的模型及延迟的处理不同，来进行分门别类。</p>
<h2 id="批处理（Batch）"><a href="#批处理（Batch）" class="headerlink" title="批处理（Batch）"></a>批处理（Batch）</h2><ul>
<li><p><a href="http://static.googleusercontent.com/media/research.google.com/en/us/archive/mapreduce-osdi04.pdf" target="_blank" rel="noopener">MapReduce</a>【55】– 这是谷歌有关MapReduce的最早的学术论文（注：对于国内用户，点击原文献链接可能会产生404错误，CSDN网站有MapReduce论文的下载链接）。</p>
</li>
<li><p><a href="http://www.cs.arizona.edu/~bkmoon/papers/sigmodrec11.pdf" target="_blank" rel="noopener">MapReduce综述</a>【56】 –这是一篇过时、但依然值得一读的、有关MapReduce计算框架的综述性文章。</p>
</li>
</ul>
<h2 id="迭代式（BSP）"><a href="#迭代式（BSP）" class="headerlink" title="迭代式（BSP）"></a>迭代式（BSP）</h2><ul>
<li><p><a href="http://kowshik.github.io/JPregel/pregel_paper.pdf" target="_blank" rel="noopener">Pregel</a>【57】–这又是一篇谷歌出品的大手笔论文，主要描述了大规模图处理方法（注：Pregel是一种面向图算法的分布式编程框架，其采用的是迭代式的计算模型。它被称之为Google后Hadoop时代的新“三驾马车”之一。另外两驾马车分别是：“交互式”大数据分析系统Dremel和网络搜索引擎Caffeine）。</p>
</li>
<li><p><a href="http://researcher.ibm.com/researcher/files/us-heq/Large%20Scale%20Graph%20Processing%20with%20Apache%20Giraph.pdf" target="_blank" rel="noopener">Giraph</a>【58】 – 该系统建模于谷歌的Pregel，可视为Pregel的开源版本，它是一个基于 Hadoop架构的、可扩展的分布式迭代图处理系统。</p>
</li>
<li><p><a href="https://amplab.cs.berkeley.edu/wp-content/uploads/2014/02/graphx.pdf" target="_blank" rel="noopener">GraphX</a>【59】 –这是一个同时采用图并行计算和数据并行的计算框架（注：GraphX最先是加州大学伯克利分校AMPLab实验室的一个分布式图计算框架项目，后来整合到Spark中，成为其中的一个核心组件。GraphX最大的贡献在于，在Spark之上提供一栈式数据解决方案，可方便高效地完成图计算的一整套流水作业）。</p>
</li>
<li><p><a href="http://csl.skku.edu/papers/CS-TR-2010-330.pdf" target="_blank" rel="noopener">Hama</a>【60】– 是一个构建Hadoop之上的基于BSP模型的分布式计算引擎（注：</p>
</li>
</ul>
<p>Hama的运行环境需要关联 Zookeeper、HBase、HDFS 组件。Hama中最关键的技术，就是采用了BSP模型(Bulk Synchronous Parallel，即整体同步并行计算模型，又名大同步模型)。BSP模型是哈佛大学的计算机科学家Viliant和牛津大学的BillMcColl在1990年联合提出的，他们希望能像冯·诺伊曼体系结构那样，架起计算机程序语言和体系结构间的桥梁，故又称作桥模型(Bridge Model)。</p>
<ul>
<li><a href="http://www.vldb.org/pvldb/vol7/p1047-han.pdf" target="_blank" rel="noopener">开源图处理系统</a>【61】（Open source graph processing ）-这是滑铁卢大学的研究人员撰写的综述性文献，文献【61】对类Pregel（Pregel-like）的、基于BSP模型的图处理系统进行了实验性的比较。</li>
</ul>
<h2 id="流式（Streaming）"><a href="#流式（Streaming）" class="headerlink" title="流式（Streaming）"></a>流式（Streaming）</h2><ul>
<li><p><a href="https://www.ucviden.dk/portal/files/26907191/Survey_of_real_time_processing_systems_for_big_data_Draft_.pdf" target="_blank" rel="noopener">流式处理</a>【62】（Stream Processing）- 这是一篇非常棒的、有关面向大数据实时处理系统的综述性文章。</p>
</li>
<li><p><a href="https://cs.brown.edu/courses/cs227/papers/ss-storm.pdf" target="_blank" rel="noopener">Storm</a>【63】 – 这是一个大数据实时处理系统（注：Storm有时也被人们称为实时处理领域的Hadoop，它大大简化了面向庞大规模数据流的处理机制，从而在实时处理领域扮演着重要角色。文献【63】是Twitter工程师们在2014年发表于SIGMOD上的学术论文）。</p>
</li>
<li><p><a href="http://www.jfokus.se/jfokus15/preso/ApacheSamza.pdf" target="_blank" rel="noopener">Samza</a>【64】 -这是一款由Linkedin公司开发的分布式的流式数据处理框架（注：所谓流式数据，是指要在处理单位内得到的数据，这种方式更注重于实时性，流式数据有时也称为快数据）。</p>
</li>
<li><p><a href="http://people.csail.mit.edu/matei/papers/2013/sosp_spark_streaming.pdf" target="_blank" rel="noopener">Spark流</a>【65】（Spark Streaming） -该文献是加州大学伯克利分校的研究人员于2013年在著名操作系统会议SOSP上发表的学术论文，论文题目是《离散流：容错大规模流式计算》（注：这里的离散流是指一种微批处理构架，其桥接了传统的批处理和交互式处理。Spark Streaming是Spark 核心API的一个扩展，它并不会像Storm那样逐个处理数据流，而是在处理前，按时间间隔预先将其切分为很多小段的批处理作业）。</p>
</li>
</ul>
<h2 id="交互式（Interactive）"><a href="#交互式（Interactive）" class="headerlink" title="交互式（Interactive）"></a>交互式（Interactive）</h2><ul>
<li><p><a href="http://www.vldb.org/pvldb/vldb2010/papers/R29.pdf" target="_blank" rel="noopener">Dremel</a>【66】–这又是一篇由谷歌出品的经典论文，论文描述了如何处理“交互式”大数据的工作负载。该论文是多个基于Hadoop的开源SQL系统的理论基础（注：文献【66】写于2006年，“捂”藏4年之后，于2010年公布于众。文章针对MR交互式查询能力不足，提出了Dremel，阐述了Dremel的设计原理，并提供了部分测试报告）。</p>
</li>
<li><p><a href="http://www.cidrdb.org/cidr2015/Papers/CIDR15_Paper28.pdf" target="_blank" rel="noopener">Impala</a>【67】 –这是一个大规模并行处理（MPP）式 SQL 大数据分析引擎（注：</p>
</li>
</ul>
<p>Impala像Dremel一样，其借鉴了MPP（Massively Parallel Processing，大规模并行处理）并行数据库的思想，抛弃了MapReduce这个不太适合做SQL查询的范式，从而让Hadoop支持处理交互式的工作负载。本文作者阿尼尔马丹在LinkedIn上的博客原文，在此处的“MPI”系“MPP”笔误，读者可参阅文献【67】发现此问题）。</p>
<ul>
<li><p><a href="http://wiki.apache.org/incubator/DrillProposal?action=AttachFile&amp;do=get&amp;target=Drill%20slides.pdf" target="_blank" rel="noopener">Drill</a>【68】–这是谷歌 Dremel的开源版本（注：Drill是一个低延迟的、能对海量数据（包括结构化、半结构化及嵌套数据）实施交互式查询的分布式数据引擎）。</p>
</li>
<li><p><a href="http://www.cs.berkeley.edu/~matei/papers/2012/sigmod_shark_demo.pdf" target="_blank" rel="noopener">Shark</a>【69】 –该文献是2012年发表于SIGMOD的一篇学术论文，论文对Spark生态系统上的数据分析能力，给出了很深入的介绍（注：Shark是由加州伯克利大学AMPLab开发的大数据分析系统。Shark即“Hive on Spark”的含义，本质上是通过Hive的HQL解析，把HQL翻译成Spark上的RDD操作。然后通过Hive的元数据获，取数据库里的表信息。HDFS上的数据和文件，最后会由Shark获取，并放到Spark上运算。Shark基于 Scala语言的算子推导，可实现良好的容错机制，对执行失败的长/短任务，均能从上一个“快照点（Snapshot）”进行快速恢复）。</p>
</li>
<li><p><a href="http://people.csail.mit.edu/matei/papers/2013/sigmod_shark.pdf" target="_blank" rel="noopener">Shark</a>【70】–这是另外一篇很棒的于2013年发表在SIGMOD的学术论文，其深度解读在Apache Hive之上SQL访问机制（注：这篇文献描述了如何构建在Spark上构建SQL引擎——Shark。更重要的是，文章还讨论了之前在 Hadoop/MapReduce上实施SQL查询如此之慢的原因）。</p>
</li>
<li><p><a href="http://www.news.cs.nyu.edu/~jinyang/sp07/papers/dryad.pdf" target="_blank" rel="noopener">Dryad</a>【71】– 文献讨论了使用有向无环图(Directed Acycline Graph，DAG)来配置和执行并行数据流水线的方法（注：Dryad是一个通用的粗颗粒度的分布式计算和资源调度引擎，其核心特性之一，就是允许用户自己构建DAG调度拓扑图。文献【71】是微软于2007年在EuroSys国际会议上发布的学术论文）。</p>
</li>
<li><p><a href="http://www.datanubes.com/mediac/ApacheTezPrimer.pdf" target="_blank" rel="noopener">Tez</a>【72】 –其核心思想来源于Dryad，可视为利用Yarn(即MRv2)对Dryad的开源实现（注：Apache Tez是基于Hadoop Yarn之上的DAG计算框架。由Hadoop的二东家Hortonworks开发并提供主要技术支持。文献【72】是一个关于Tez的简要介绍文档）。</p>
</li>
<li><p><a href="https://www.cs.berkeley.edu/~sameerag/blinkdb_eurosys13.pdf" target="_blank" rel="noopener">BlinkDB</a>【73】–可在抽样数据上实现交互式查询，其呈现出的查询结果，附带有误差标识。</p>
</li>
</ul>
<p>（注：BlinkDB 是一个用于在海量数据上运行交互式 SQL 查询的大规模并行查询引擎。BlinkDB允许用户通过适当降低数据精度，对数据进行先采样后计算，其通过其独特的优化技术，实现了比Hive快百倍的交互式查询速度，而查询进度误差仅降低2~10%。</p>
<p>BlinkDB采用的策略，与大数据布道师，维克托·迈尔-舍恩伯格在其著作《大数据时代》中提到的观点，“要全体，不要抽样”，恰恰相反。</p>
<p>基于常识，我们知道：多了，你就快不了。好了，你就省不了。对大数据处理而言，也是这样。英特尔中国研究院院长吴甘沙认为，大体量、精确性和速度快，三者不可兼得，顶多取其二。如果要实现在大体量数据上的 “快”，就得想办法减少数据，而减少数据，势必要适度地降低分析精确性。</p>
<p>事实上，大数据并不见得越“大”越好，有时候一味的追求“大”是没有必要的。例如，在医疗健康领域，如果来监控某个病人的体温，可穿戴设备可以一秒钟采集一次数据，也可以一分钟采集一次数据，前者采集的数据总量比后者“大”60倍，但就监控病人身体状况而言，意义并不是太大。虽然后者的数据忽略了人体在一分钟内的变化，监控的精度有所下降，但对于完成监控病人健康状态这一目的而言，是可以接受的。）</p>
<h2 id="实时系统（RealTime）"><a href="#实时系统（RealTime）" class="headerlink" title="实时系统（RealTime）"></a>实时系统（RealTime）</h2><ul>
<li><p><a href="http://static.druid.io/docs/druid.pdf" target="_blank" rel="noopener">Druid</a>【74】 –这是一个开源的分布式实时数据分析和存储系统，旨在快速处理大规模的数据，并能做到快速查询和分析（注：文献【74】是2014年Druid创始人Eric Tschetter和中国工程师杨仿今等人在SIGMOD上发表的一篇论文）。</p>
</li>
<li><p><a href="https://github.com/linkedin/pinot/wiki/Architecture" target="_blank" rel="noopener">Pinot</a>【75】 –这是由LinkedIn公司出品的一个开源的、实时分布式的 OLAP数据分析存储系统，非常类似于前面提到的Druid，LinkedIn 使用它实现低延迟可伸缩的实时分析。（注：文献【75】是在GitHub上的有关Pinot的说明性文档）。</p>
</li>
</ul>
<h2 id="数据分析层（Data-Analysis）"><a href="#数据分析层（Data-Analysis）" class="headerlink" title="数据分析层（Data Analysis）"></a>数据分析层（Data Analysis）</h2><p>数据分析层中的工具，涵盖范围很广，从诸如SQL的声明式编程语言，到诸如Pig的过程化编程语言，均有涉及。另一方面，数据分析层中的库也很丰富，可支持常见的数据挖掘和机器学习算法，这些类库可拿来即用，甚是方便。</p>
<h2 id="工具（Tools）"><a href="#工具（Tools）" class="headerlink" title="工具（Tools）"></a>工具（Tools）</h2><ul>
<li><p><a href="http://infolab.stanford.edu/~olston/publications/sigmod08.pdf" target="_blank" rel="noopener">Pig</a>【76】 –这是一篇有关Pig Latin非常不错的综述文章（注：Pig Latin原是一种儿童黑话，属于是一种英语语言游戏，形式是在英语上加上一点规则使发音改变，让大人们听不懂，从而完成孩子们独懂的交流。文献【76】是雅虎的工程师们于2008年发表在SIGMOD的一篇论文，论文的题目是“Pig Latin：并不是太老外的一种数据语言”，言外之意，他们发明了一种数据处理的“黑话”——Pig Latin，一开始你可能不懂，等你熟悉了，就会发现这种数据查询语言的乐趣所在）。</p>
</li>
<li><p><a href="http://paperhub.s3.amazonaws.com/a7b584c04b61fabb8d10333e91989120.pdf" target="_blank" rel="noopener">Pig</a>【77】 – 这是另外一篇由雅虎工程师们撰写的有关使用Pig经验的论文，文章介绍了如果利用Pig在Map-Reduce上构建一个高水准的数据流分析系统。</p>
</li>
<li><p><a href="http://infolab.stanford.edu/~ragho/hive-icde2010.pdf" target="_blank" rel="noopener">Hive</a>【78】 –该文献是Facebook数据基础设施研究小组撰写的一篇学术论文，介绍了Hive的来龙去脉（注：Hive是一个建立于 Hadoop 上的数据仓库基础构架。它用来进行数据的提取、转化和加载（即Extract-Transform-Load ，ETL），它是一种可以存储、查询和分析存储在 Hadoop 中的大规模数据的机制）。</p>
</li>
<li><p><a href="http://www.vldb.org/pvldb/2/vldb09-938.pdf" target="_blank" rel="noopener">Hive</a>【79】–该文献是另外一篇有关Hive的值得一读的好论文。论文作者来自Facebook数据基础设施研究小组，在这篇论文里，可以帮助读者理解Hive的设计理念。</p>
</li>
<li><p><a href="http://phoenix.apache.org/presentations/OC-HUG-2014-10-4x3.pdf" target="_blank" rel="noopener">Phoenix</a>【80】 –它是 HBase 的 SQL 驱动（注：Phoenix可将 SQL 查询转成 HBase 的扫描及相应的动作。文献【80】是关于在Hbase上部署SQL的幻灯片文档）。</p>
</li>
<li><p><a href="http://www.ispras.ru/proceedings/docs/2012/23/isp_23_2012_285.pdf" target="_blank" rel="noopener">Map Reduce上的连接（join）算法</a>【81】–该文献介绍了在Hadoop环境下的各种并行连接算法，并对它们的性能作出系统性评测。</p>
</li>
<li><p><a href="http://grail.csuohio.edu/~sschung/cis612/hadoopjoin_sigmod2010.pdf" target="_blank" rel="noopener">Map Reduce上的连接算法</a>【82】 –这是威斯康星大学和IBM研究团队撰写的综述性文章，文章对在Map Reduce模型下的各种连接算法进行了综合比较。</p>
</li>
</ul>
<h2 id="库（Libraires）"><a href="#库（Libraires）" class="headerlink" title="库（Libraires）"></a>库（Libraires）</h2><ul>
<li><p><a href="http://stanford.edu/~rezab/sparkworkshop/slides/xiangrui.pdf" target="_blank" rel="noopener">MLlib</a>【83】–这是在Spark计算框架中对常用的机器学习算法的实现库，该库还包括相关的测试和数据生成器（注：文献【83】是MLlib的一个幻灯片说明文档）。</p>
</li>
<li><p><a href="http://files.meetup.com/3138542/SparkR-meetup.pdf" target="_blank" rel="noopener">SparkR</a>【84】–这是AMPLab发布的一个R开发包，为Apache Spark提供轻量级的前端（注：R是一种广泛应用于统计分析、绘图的语言及操作环境。文献【84】是有关SparkR的幻灯片文档）。</p>
</li>
<li><p><a href="http://openresearch.baidu.com/u/cms/www/201210/30144944cqmu.pdf" target="_blank" rel="noopener">Mahout</a>【85】 –这是一个功能强大的数据挖掘工具，是一个基于传统Map Reduce的分布式机器学习框架（注：Mahout的中文含义就是“驭象之人”，而Hadoop的Logo正是一头小黄象。很明显，这个库是帮助用户用好Hadoop这头难用的大象。文献【85】是有关Mahout的图书）。</p>
</li>
</ul>
<h2 id="数据集成层（Data-Integration）"><a href="#数据集成层（Data-Integration）" class="headerlink" title="数据集成层（Data Integration）"></a>数据集成层（Data Integration）</h2><p>数据集成框架提供了良好的机制，以协助高效地摄取和输出大数据系统之间的数据。从业务流程线到元数据框架，数据集成层皆有涵盖，从而提供全方位的数据在整个生命周期的管理和治理。</p>
<h2 id="摄入-消息传递（Ingest-Messaging）"><a href="#摄入-消息传递（Ingest-Messaging）" class="headerlink" title="摄入/消息传递（Ingest/Messaging）"></a>摄入/消息传递（Ingest/Messaging）</h2><ul>
<li><p><a href="https://blogs.apache.org/flume/entry/flume_ng_architecture" target="_blank" rel="noopener">Flume</a>【86】 –这是Apache旗下的一个分布式的、高可靠的、高可用的服务框架，可协助从分散式或集中式数据源采集、聚合和传输海量日志（注：文献【86】是Apache网站上有关Flume的一篇博客文章）。</p>
</li>
<li><p><a href="https://cwiki.apache.org/confluence/download/attachments/27361435/Cecho_Ting_SqoopBigDataTechCon.pdf?version=1&amp;modificationDate=1366107169000&amp;api=v2" target="_blank" rel="noopener">Sqoop</a>【87】–该系统主要用来在Hadoop和关系数据库中传递数据（注：Sqoop目前已成为Apache的顶级项目之一。通过Sqoop，可以方便地将数据从关系数据库导入到HDFS，或反之亦可。文献【87】是有关Sqoop的幻灯片说明文档）。</p>
</li>
<li><p><a href="http://notes.stephenholiday.com/Kafka.pdf" target="_blank" rel="noopener">Kafka</a>【88】 –这是由LinkedIn开发的一个分布式消息系统（注：由Scala编写而成的Kafka，由于可水平扩展、吞吐率高等特性，得到广泛应用。文献【88】是LindedIn的工程师们在2011年发表于NetDB的会议论文）。</p>
</li>
</ul>
<h2 id="ETL-工作流"><a href="#ETL-工作流" class="headerlink" title="ETL/工作流"></a>ETL/工作流</h2><p>ETL是数据抽取（Extract）、清洗（Cleaning）、转换（Transform）、装载（Load）的过程，是构建数据仓库的重要一环。</p>
<ul>
<li><p><a href="http://events.linuxfoundation.org/sites/events/files/slides/Simplifying%20Big%20Data%20with%20Apache%20Crunch.pdf" target="_blank" rel="noopener">Crunch</a>【89】–这是Apache旗下的一套Java API函数库，它能够大大简化编写、测试、运行MapReduce 处理工作流的程序（注：文献【89】是有关Crunch的幻灯片解释文档）。</p>
</li>
<li><p><a href="http://public-repo-1.hortonworks.com/HDP-LABS/Projects/Falcon/2.0.6.0-76/FalconHortonworksTechnicalPreview.pdf" target="_blank" rel="noopener">Falcon</a>【90】– 这是Apache旗下的Falcon大数据管理框架，可以帮助用户自动迁移和处理大数据集合（注：文献【90】是一份关于Falcon技术预览报告）。</p>
</li>
<li><p><a href="http://smokinn.com/files/cascading_notes/cascading.pdf" target="_blank" rel="noopener">Cascading</a>【91】 –这是一个架构在Hadoop上的API函数库，用来创建复杂的可容错的数据处理工作流（注：文献【91】是关于Hadoop上的Cascading的概论和技术随笔）。</p>
</li>
<li><p><a href="http://oozie.apache.org/docs/4.2.0/index.html" target="_blank" rel="noopener">Oozie</a>【92】–是一个工作流引擎，用来协助Hadoop作业管理（注：Oozie字面含义是驯象之人，其寓意和Mahout一样，帮助用户更好地搞定Hadoop这头大象。文献【92】是Apache网站上有关Oozie的官方文档）。</p>
</li>
</ul>
<h2 id="元数据（Metadata）"><a href="#元数据（Metadata）" class="headerlink" title="元数据（Metadata）"></a>元数据（Metadata）</h2><ul>
<li><a href="https://cwiki.apache.org/confluence/display/Hive/HCatalog+UsingHCat" target="_blank" rel="noopener">HCatalog</a>【93】– 它提供了面向Apache Hadoop的数据表和存储管理服务（注：Apache HCatalog提供一个共享的模式和数据类型的机制，它抽象出表，使用户不必关心数据怎么存储，并提供了可操作的跨数据处理工具。文献【93】是Apache网站有关Hcatalog的官方说明文档）。</li>
</ul>
<h2 id="序列化（Serialization）"><a href="#序列化（Serialization）" class="headerlink" title="序列化（Serialization）"></a>序列化（Serialization）</h2><ul>
<li><p><a href="http://homepages.lasige.di.fc.ul.pt/~vielmo/notes/2014_02_12_smalltalk_protocol_buffers.pdf" target="_blank" rel="noopener">Protocol Buffers</a>【94】 –由Google推广的一种与语言无关的、对结构化数据进行序列化和反序列化的机制（注：Protocol Buffers可用于通讯协议、数据存储等领域的语言及平台无关、可扩展的序列化结构数据格式。文献【94】是有关Protocol Buffers幻灯片文档）。</p>
</li>
<li><p><a href="http://mil-oss.org/resources/mil-oss-wg3_an-introduction-to-apache-avro_douglas-creager.pdf" target="_blank" rel="noopener">Avro</a>【95】 –这是一个建模于Protocol Buffers之上的、Hadoop生态系统中的子项目（注：Avro本身既是一个序列化框架，同时也实现了RPC的功能）。</p>
</li>
</ul>
<h2 id="操作框架（Operational-Frameworks）"><a href="#操作框架（Operational-Frameworks）" class="headerlink" title="操作框架（Operational Frameworks）"></a>操作框架（Operational Frameworks）</h2><p>最后，我们还需要一个操作性框架，来构建一套衡量标准和测试基准，从而来评价各种计算框架的性能优劣。在这个操作性框架中，还需要包括性能优化工具，借助它来平衡工作负载。</p>
<h2 id="监测管理框架（Monitoring-Frameworks）"><a href="#监测管理框架（Monitoring-Frameworks）" class="headerlink" title="监测管理框架（Monitoring Frameworks）"></a>监测管理框架（Monitoring Frameworks）</h2><ul>
<li><p><a href="http://opentsdb.net/overview.html" target="_blank" rel="noopener">OpenTSDB</a>【96】 –这是构建于HBase之上的实时性能评测系统（注：文献【96】提供了OpenTSDB的简要概述，介绍了OpenTSDB的工作机理）。</p>
</li>
<li><p><a href="https://issues.apache.org/jira/secure/attachment/12559939/Ambari_Architecture.pdf" target="_blank" rel="noopener">Ambari</a>【97】– 这是一款基于Web的系统，支持Apache Hadoop集群的供应、管理和监控（注：文献【97】阐述了Ambari架构的设计准则）。</p>
</li>
</ul>
<h2 id="基准测试（Benchmarking）"><a href="#基准测试（Benchmarking）" class="headerlink" title="基准测试（Benchmarking）"></a>基准测试（Benchmarking）</h2><ul>
<li><p><a href="http://research.ijais.org/volume7/number8/ijais14-451229.pdf" target="_blank" rel="noopener">YCSB</a>【98】 –该文献是一篇使用YCSB对NoSQL系统进行性能评估的期刊论文（注：YCSB是雅虎云服务基准测试（Yahoo! Cloud Serving Benchmark）的简写。见名知意，它是由雅虎出品的一款通用云服务性能测试工具）。</p>
</li>
<li><p><a href="https://hadoop.apache.org/docs/stable1/gridmix.pdf" target="_blank" rel="noopener">GridMix</a>【99】 –该系统通过运行大量合成的作业，对Hadoop系统进行基准测试，从而获得性能评价指标（注：文献是Apache网站有关GridMix的官方说明文档）。</p>
</li>
</ul>
<p>最后一篇文献是有关大数据基准测试的<a href="http://arxiv.org/ftp/arxiv/papers/1402/1402.5194.pdf" target="_blank" rel="noopener">综述文章</a>【100】，文章讨论了基准测试的最新技术进展以及所面临的几个主要挑战。</p>
<p>译者寄语：</p>
<p>在你迈步于大数据的旅途中，真心希望这些文献能助你一臂之力。但要知道，有关大数据的文献，何止千万，由于个人精力、能力有限，有些领域也不甚熟稔，故难免会挂一漏万。如有疏忽，漏掉你的大作，还请你海涵。最后，希望这些文献能给你带来“学而时习之，不亦乐乎”的快感！</p>
<p>译者介绍：张玉宏，博士。2012年毕业于电子科技大学，现执教于河南工业大学。中国计算机协会（CCF）会员，ACM/IEEE会员。主要研究方向为高性能计算、生物信息学，主编有《Java从入门到精通》一书。</p>
<p>原文来自：<a href="https://www.linkedin.com/pulse/100-open-source-big-data-architecture-papers-anil-madan" target="_blank" rel="noopener">LinkeDin</a></p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[SVN版本管理]]></title>
      <url>http://www.wulai.me/2015/05/29/svn-e7-89-88-e6-9c-ac-e7-ae-a1-e7-90-86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="一、版本库结构"><a href="#一、版本库结构" class="headerlink" title="一、版本库结构"></a>一、版本库结构</h2><h3 id="1-1-项目在版本仓库中的目录"><a href="#1-1-项目在版本仓库中的目录" class="headerlink" title="1.1 项目在版本仓库中的目录"></a>1.1 项目在版本仓库中的目录</h3><p>trunk、branches、tags，这是一个项目在版本仓库中典型的目录布局。</p>
<ul>
<li>trunk：主干，如果说把一个软件项目从开始到消亡比作一个故事的话，主线情节都在这里被SVN记录着。</li>
<li>branches：分支，有很多种用法，比如：版本发布维护分支、新特性开发分支，甚至是缺陷修复分支等等。</li>
<li>tags：标签，或者叫快照，某个版本发布时候，都在这里留档。</li>
</ul>
<h3 id="1-2-示例如下图："><a href="#1-2-示例如下图：" class="headerlink" title="1.2 示例如下图："></a>1.2 示例如下图：</h3><h2 id="二、命令行"><a href="#二、命令行" class="headerlink" title="二、命令行"></a>二、命令行</h2><h3 id="2-1-svnadmin-create"><a href="#2-1-svnadmin-create" class="headerlink" title="2.1 svnadmin create"></a>2.1 svnadmin create</h3><p>创建版本库</p>
<h3 id="2-2-svn-cp"><a href="#2-2-svn-cp" class="headerlink" title="2.2 svn cp"></a>2.2 svn cp</h3><p>复制版本</p>
<h3 id="2-3-svn-branch"><a href="#2-3-svn-branch" class="headerlink" title="2.3 svn branch"></a>2.3 svn branch</h3><p>创建分支</p>
<h3 id="2-4-svn-merge"><a href="#2-4-svn-merge" class="headerlink" title="2.4 svn merge"></a>2.4 svn merge</h3><p>合并分支</p>
<h3 id="2-5-svn-tag"><a href="#2-5-svn-tag" class="headerlink" title="2.5 svn tag"></a>2.5 svn tag</h3>]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[mac上eclipse 安装 javaHL时出错]]></title>
      <url>http://www.wulai.me/2015/05/28/176/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>一、下载serf-1.3.8.tar.bz2出错</p>
<p>通过浏览器（可以翻出去）把serf-1.3.8.tar.bz2下载，更名为subversion–serf-1.3.8.tar.bz2<br>保存至/Library/Caches/Homebrew/subversion-1.8.13.tar.bz2路径下，就OK了～解决了shell不能翻出去的苦恼了～</p>
<p>二、出现zlib错误</p>
<pre><code>brew unlink zlib</code></pre>]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何管理阿里云无外网带宽的云主机]]></title>
      <url>http://www.wulai.me/2015/04/28/e5-a6-82-e4-bd-95-e7-ae-a1-e7-90-86-e9-98-bf-e9-87-8c-e4-ba-91-e6-97-a0-e5-a4-96-e7-bd-91-e5-b8-a6-e5-ae-bd-e7-9a-84-e4-ba-91-e4-b8-bb-e6-9c-ba/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>可见，某些情况下还是值得这么做的。但开通主机之后，因为没有公网带宽，所以也给我们的使用带来了一些麻烦，这里讲一下我的解决办法。 没有公网，用不了外网的，无论上传还是下载，但在同一机房的其他主机，还是可以访问的，所以我们要做一个跳板，利用我们已有的云主机跳转。</p>
<p>这里要明确以下要点： 1、两台服务器必须在同一个数据中心，比如一台在杭州，一台在青岛，不在一个内网，肯定没法操作的；</p>
<p>2、两太服务器必须在同一个帐号下。不在同一个下面，默认有防火墙阻止，不能互相访问的，需要提交工单请客服设置；</p>
<p>技术上，通过Linux iptables，或者ssh转发都可以实现，iptables转发更简单，比如我们的主服务器，就是有公网带宽，可以访问外网的那一台， 一般我们通过22端口进行ssh操作。我们可以将2222端口转发到数据库服务器，在ssh工具里面就可以管理了。</p>
<p>首先，打开ip转发：</p>
<pre><code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward


然后依次输入以下命令：

&gt; &gt; A机有公网IP ，内网IP为 10.160.39.22</code></pre><blockquote>
<blockquote>
<pre><code>B机无公网IP ，内网IP为 10.160.30.11</code></pre></blockquote>
</blockquote>
<pre><code>规则：

iptables -t nat -A PREROUTING -p tcp --dport 2222 -j DNAT --to-destination 10.160.30.11:22
iptables -t nat -A POSTROUTING -d 10.160.30.11 -p tcp --dport 22 -j SNAT --to 10.160.39.22</code></pre><p>然后保存、重启 service iptables save service iptables restart</p>
<p>现在，我们就能通过putty、xshell等工具管理了。ip地址填有公网ip的，端口填2222，其他如旧，很快就能登录上去了</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[MYSQL服务无法启动：InnoDB: .\ibdata1 can&#039;t be opened in read-write mode]]></title>
      <url>http://www.wulai.me/2015/04/22/mysql-e6-9c-8d-e5-8a-a1-e6-97-a0-e6-b3-95-e5-90-af-e5-8a-a8-ef-bc-9ainnodb-ibdata1-cant-be-opened-in-read-write-mode/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>今天在那做实验倒腾mysql数据库，后来发现服务无法启动，查看日志报错如下：</p>
<p>2015-01-07 17:48:54 9136 [ERROR] InnoDB: .\ibdata1 can’t be opened in read-write mode<br>2015-01-07 17:48:54 9136 [ERROR] InnoDB: The system tablespace must be writable!<br>2015-01-07 17:48:54 9136 [ERROR] Plugin ‘InnoDB’ init function returned error.<br>2015-01-07 17:48:54 9136 [ERROR] Plugin ‘InnoDB’ registration as a STORAGE ENGINE failed.<br>2015-01-07 17:48:54 9136 [ERROR] Unknown/unsupported storage engine: InnoDB<br>2015-01-07 17:48:54 9136 [ERROR] Aborting</p>
<p>解决方法：<br>1、打开任务管理器终止mysqld进程；<br>2、打开mysql安装目录的data文件夹，删除以下2个文件：<br>ib_logfile0和ib_logfile1</p>
<p>3、重新启动mysql</p>
<hr>
<p>Dylan    Presents.</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[查看MySQL的错误日志的方法]]></title>
      <url>http://www.wulai.me/2015/04/22/e6-9f-a5-e7-9c-8bmysql-e7-9a-84-e9-94-99-e8-af-af-e6-97-a5-e5-bf-97-e7-9a-84-e6-96-b9-e6-b3-95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>我们经常在运行MySQL时会出一些错误，也经常被这些错误搞得晕头转向。当然解决这些问题的首要任务是找到日志信息。</p>
<p>MySQL的错误信息是在data目录下的，且文件名为<hostname>.err(<hostname>指的是主机名)，但由于每个人安装的环境不一样，或你忘记了data目录的所在位置，你可以通过下面方法查找。</hostname></hostname></p>
<pre><code>#hostname //获得主机名 
&lt;hostname&gt; 
#find / -name &lt;hostname&gt;.err 
..... 

#cd ... 

#vi &lt;hostname&gt;.err</code></pre>]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[如何查看apache,php,mysql的编译参数]]></title>
      <url>http://www.wulai.me/2015/03/20/e5-a6-82-e4-bd-95-e6-9f-a5-e7-9c-8bapachephpmysql-e7-9a-84-e7-bc-96-e8-af-91-e5-8f-82-e6-95-b0/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>查看nginx编译参数：/usr/local/nginx/sbin/nginx -V</p>
<p>查看apache编译参数：cat /usr/local/apache2/build/config.nice</p>
<p>查看mysql编译参数：cat /usr/local/mysql/bin/mysqlbug | grep CONFIGURE_LINE</p>
<p>查看php编译参数：/usr/local/php/bin/php -i | grep configure</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[IE提交ajax提交304]]></title>
      <url>http://www.wulai.me/2014/12/30/ie-e6-8f-90-e4-ba-a4ajax-e6-8f-90-e4-ba-a4304/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>增加cache</p>
<pre><code>$.ajax({  
    cache : false,  
    url : &quot;sendCode.html&quot;,  
    data : {phone : value}  
});  </code></pre>]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[php echo或者exit输出中文]]></title>
      <url>http://www.wulai.me/2014/12/19/php-echo-e6-88-96-e8-80-85exit-e8-be-93-e5-87-ba-e4-b8-ad-e6-96-87/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>你这是中文乱码，原因是操作环境的编码和浏览器的编码不一致造成的 1. php文件本身的编码与网页的编码应匹配</p>
<p>a. 如果欲使用gb2312编码，那么php要输出头：header(“Content-Type: text/html; charset=gb2312”)，静态页面添加<meta http-equiv="Content-Type" content="text/html; charset=gb2312"><br>，所有文件的编码格式为ANSI，可用记事本打开，另存为选择编码为ANSI，覆盖源文件。</p>
<p>b. 如果欲使用utf-8编码，那么php要输出头 ：header(“Content-Type: text/html; charset=utf-8”)，静态页面添加<meta http-equiv="Content-Type" content="text/html; charset=utf-8"><br>，所有文件的编码格式为utf-8。保存为utf-8可能会有点麻烦，一般utf-8文件开头会有BOM，如果使用 session就会出问题，可用editplus来保存，在editplus中，工具-&gt;参数选择-&gt;文件-&gt;UTF-8签名，选择总是删除，再保存就可以去掉BOM信息了。</p>
<ol>
<li>php本身不是Unicode的，所有substr之类的函数得改成mb_substr（需要装mbstring扩展）；或者用iconv转码。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[预排序遍历树算法(modified preorder tree traversal algorithm)]]></title>
      <url>http://www.wulai.me/2014/12/13/e9-a2-84-e6-8e-92-e5-ba-8f-e9-81-8d-e5-8e-86-e6-a0-91-e7-ae-97-e6-b3-95-e9-9d-9e-e9-80-92-e5-bd-92-e6-97-a0-e9-99-90-e6-9e-81-e5-88-86-e7-b1-bb-e7-ae-97-e6-b3-95-e5-ad-a6-e4-b9-a0-e7-ac-94-e8-ae-b0/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>本文是我学习MySQL官方教程Managing Hierarchical Data in MySQL的笔记 多层数据结构估计所有的web开发者估计都不会陌生，各种软件的分类都是基于多层结构来设计的。 下面是一个典型的多层数据结构示意图：</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/12/thum-be1b6320354e5c0879737b855764e9d920100326152818.png" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/12/thum-be1b6320354e5c0879737b855764e9d920100326152818.png" alt="thum-be1b6320354e5c0879737b855764e9d920100326152818"></a></p>
<p>相关创建数据语句：</p>
<pre><code>CREATE TABLE category(
category_id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(20) NOT NULL,
parent INT DEFAULT NULL);

INSERT INTO category
VALUES(1,&apos;ELECTRONICS&apos;,NULL),(2,&apos;TELEVISIONS&apos;,1),(3,&apos;TUBE&apos;,2),
(4,&apos;LCD&apos;,2),(5,&apos;PLASMA&apos;,2),(6,&apos;PORTABLE ELECTRONICS&apos;,1),
(7,&apos;MP3 PLAYERS&apos;,6),(8,&apos;FLASH&apos;,7),
(9,&apos;CD PLAYERS&apos;,6),(10,&apos;2 WAY RADIOS&apos;,6);

SELECT * FROM category ORDER BY category_id;</code></pre><p>在这种数据结构中，各层之间通过字段 parent 来形成邻接表，我们查询某些层级的关系的时候一般都是通过递归的方式，遍历某个层级关系的SQL的查询次数会顺着层级的增加，想想在层级有20的时候，根据某个底层节点取它到顶层节点的查询次数吧。</p>
<p>为了解决这个问题，人们想出了嵌套集模型（The Nested Set Model），请看下图：</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/12/thum-90ef2a4a3357d5de8e8e0d1bc026294820100326152302.png" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/12/thum-90ef2a4a3357d5de8e8e0d1bc026294820100326152302.png" alt="thum-90ef2a4a3357d5de8e8e0d1bc026294820100326152302"></a></p>
<p>上图依然是表现的与图一相同的层级关系，但是却更换了一种表现形式 下面是新的关系表和数据（关系和数据与之前相同，但是表结构不一样）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE nested_category (</span><br><span class="line">category_id INT AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">name VARCHAR(20) NOT NULL,</span><br><span class="line">lft INT NOT NULL,</span><br><span class="line">rgt INT NOT NULL,</span><br><span class="line">deleted TINYINT(8)  NOT NULL DEFAULT &apos;0&apos;,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">INSERT INTO nested_category</span><br><span class="line">VALUES(1,&apos;ELECTRONICS&apos;,1,20),(2,&apos;TELEVISIONS&apos;,2,9),(3,&apos;TUBE&apos;,3,4),</span><br><span class="line">(4,&apos;LCD&apos;,5,6),(5,&apos;PLASMA&apos;,7,8),(6,&apos;PORTABLE ELECTRONICS&apos;,10,19),</span><br><span class="line">(7,&apos;MP3 PLAYERS&apos;,11,14),(8,&apos;FLASH&apos;,12,13),</span><br><span class="line">(9,&apos;CD PLAYERS&apos;,15,16),(10,&apos;2 WAY RADIOS&apos;,17,18);</span><br><span class="line"></span><br><span class="line">SELECT * FROM nested_category ORDER BY category_id;</span><br></pre></td></tr></table></figure>

<p>这里将 left,right 修改为 lft,rgt因为这两个词在MYSQL中属于关键字 下面我们将插入的数据标识在图上： <a href="http://www.hillock.com.cn/wp-content/uploads/2014/12/thum-a618905c95b8d6aa42cf4c29f7d0546a20100326152746.png" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/12/thum-a618905c95b8d6aa42cf4c29f7d0546a20100326152746.png" alt="thum-a618905c95b8d6aa42cf4c29f7d0546a20100326152746"></a> 同样，我们将数据标识在原来的结构上： <a href="http://www.hillock.com.cn/wp-content/uploads/2014/12/thum-be1b6320354e5c0879737b855764e9d9201003261528181.png" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/12/thum-be1b6320354e5c0879737b855764e9d9201003261528181.png" alt="thum-be1b6320354e5c0879737b855764e9d920100326152818"></a></p>
<p>怎么样，是不是很明确了</p>
<p>下面使我自己标定一种形式，方便理解</p>
<pre><code>[1
      [2
           [3 4]
           [5 6]
           [7 8]
      9]
      [10
           [11
                 [12 13]
           14]
           [15 16]
           [17 18]
      19]
20]</code></pre><p>遍历整个树，查询子集 条件：__ 左边 &gt; 父级L，右边 &lt; 父级R __</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT node.name</span><br><span class="line">FROM nested_category AS node,</span><br><span class="line">nested_category AS parent</span><br><span class="line">WHERE node.lft BETWEEN parent.lft AND parent.rgt</span><br><span class="line">AND parent.name = &apos;ELECTRONICS&apos;</span><br><span class="line">ORDER BY node.lft;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>查询所有无分支的节点 条件： __ 右边 = 左边L + 1 __</p>
<pre><code>SELECT name FROM nested_category WHERE rgt = lft + 1;</code></pre></li>
<li><p>查询某个字节点到根节点的路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT parent.name</span><br><span class="line">FROM nested_category AS node, nested_category AS parent</span><br><span class="line">WHERE</span><br><span class="line">  node.lft BETWEEN parent.lft AND parent.rgt AND</span><br><span class="line">  node.name = &apos;FLASH&apos;</span><br><span class="line">ORDER BY parent.lft;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询节点的深度</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT node.name, (COUNT(parent.name) - 1) AS depth</span><br><span class="line">FROM nested_category AS node, nested_category AS parent</span><br><span class="line">WHERE node.lft BETWEEN parent.lft AND parent.rgt</span><br><span class="line">GROUP BY node.name</span><br><span class="line">ORDER BY node.lft;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询子节点的深度</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">SELECT node.name, (COUNT(parent.name) - (sub_tree.depth + 1)) AS depth</span><br><span class="line">FROM</span><br><span class="line">  nested_category AS node,</span><br><span class="line">  nested_category AS parent,</span><br><span class="line">  nested_category AS sub_parent,</span><br><span class="line">  ( SELECT node.name, (COUNT(parent.name) - 1) AS depth</span><br><span class="line">    FROM nested_category AS node, nested_category AS parent</span><br><span class="line">    WHERE</span><br><span class="line">      node.lft BETWEEN parent.lft AND parent.rgt AND</span><br><span class="line">      node.name = &apos;PORTABLE ELECTRONICS&apos;</span><br><span class="line">      GROUP BY node.name ORDER BY node.lft</span><br><span class="line">  ) AS sub_tree</span><br><span class="line"></span><br><span class="line">WHERE</span><br><span class="line">  node.lft BETWEEN parent.lft AND parent.rgt AND</span><br><span class="line">  node.lft BETWEEN sub_parent.lft AND sub_parent.rgt AND</span><br><span class="line">  sub_parent.name = sub_tree.name</span><br><span class="line">GROUP BY node.name    </span><br><span class="line">ORDER BY node.lft;</span><br></pre></td></tr></table></figure>

<ul>
<li>插入新节点 算法详解：</li>
</ul>
<ol>
<li>所有分类 左边和右边的值 &gt; 插入节点的左边节点记录的右值 的全部 + 2</li>
</ol>
<ul>
<li>插入节点 左值 = 插入位置左边节点记录的右值 + 1， 右值 = 插入位置左边节点记录的右值 + 2   <blockquote>
<p>例子: 在 R = 9（L8, R9）与 L = 10（L10，R11） 节点之间插入一个新节点 那么所有 左值 和 右值 &gt; 9 的节点的左值和右值需要 + 2<br>例如新节点右边的节点（L10，R11）左值右值都需要 + 2 那么插入后的新值为 L12 R13 新节点的左值为 9 + 1 = 10 右值为 9 + 2 = 11 SQL语句实现</p>
</blockquote>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LOCK TABLE nested_category WRITE;</span><br><span class="line">SELECT @myRight := rgt FROM nested_category</span><br><span class="line">WHERE name = &apos;TELEVISIONS&apos;;</span><br><span class="line">UPDATE nested_category SET rgt = rgt + 2 WHERE rgt &gt; @myRight;</span><br><span class="line">UPDATE nested_category SET lft = lft + 2 WHERE lft &gt; @myRight;</span><br><span class="line">INSERT INTO nested_category(name, lft, rgt)</span><br><span class="line">  VALUES(&apos;GAME CONSOLES&apos;, @myRight + 1, @myRight + 2);</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>

<ul>
<li>删除新节点 删除节点的算法与添加一个节点的算法相反</li>
</ul>
<ul>
<li>删除一个没有子节点的节点</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LOCK TABLE nested_category WRITE;</span><br><span class="line">SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1 FROM nested_category WHERE name = &apos;GAME CONSOLES&apos;;</span><br><span class="line">DELETE FROM nested_category WHERE lft BETWEEN @myLeft AND @myRight;</span><br><span class="line">UPDATE nested_category SET rgt = rgt - @myWidth WHERE rgt &gt; @myRight;</span><br><span class="line">UPDATE nested_category SET lft = lft - @myWidth WHERE lft &gt; @myRight;</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>

<ul>
<li>删除一个分支节点和它所有的子节点</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LOCK TABLE nested_category WRITE;</span><br><span class="line">SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1 FROM nested_category WHERE name = &apos;MP3 PLAYERS&apos;;</span><br><span class="line">DELETE FROM nested_category WHERE lft BETWEEN @myLeft AND @myRight;</span><br><span class="line">UPDATE nested_category SET rgt = rgt - @myWidth WHERE rgt &gt; @myRight;</span><br><span class="line">UPDATE nested_category SET lft = lft - @myWidth WHERE lft &gt; @myRight;</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>

<ul>
<li>删除一个节点后移动其字节点到</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LOCK TABLE nested_category WRITE;</span><br><span class="line">SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1 FROM nested_category WHERE name = &apos;PORTABLE ELECTRONICS&apos;;</span><br><span class="line">DELETE FROM nested_category WHERE lft = @myLeft;</span><br><span class="line">UPDATE nested_category SET rgt = rgt - 1, lft = lft - 1 WHERE lft BETWEEN @myLeft AND @myRight;</span><br><span class="line">UPDATE nested_category SET rgt = rgt - 2 WHERE rgt &gt; @myRight;</span><br><span class="line">UPDATE nested_category SET lft = lft - 2 WHERE lft &gt; @myRight;</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>

<h3 id="补充：移动一个分类"><a href="#补充：移动一个分类" class="headerlink" title="补充：移动一个分类"></a>补充：移动一个分类</h3><p>将分类5移动到分类9下面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">LOCK TABLE nested_category WRITE;</span><br><span class="line">SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1</span><br><span class="line">FROM nested_category</span><br><span class="line">WHERE  category_id = 5;</span><br><span class="line">UPDATE nested_category SET deleted=2 WHERE lft BETWEEN @myLeft AND @myRight;</span><br><span class="line">UPDATE nested_category SET rgt = rgt - @myWidth WHERE rgt &gt; @myRight AND deleted=0;</span><br><span class="line">UPDATE nested_category SET lft = lft - @myWidth WHERE lft &gt; @myRight AND deleted=0;</span><br><span class="line"></span><br><span class="line">SELECT @destLeft := lft,@destRight := rgt FROM nested_category WHERE  category_id = 9;</span><br><span class="line"></span><br><span class="line">UPDATE nested_category SET rgt = rgt + @myWidth WHERE rgt &gt; @destRight AND deleted=0;</span><br><span class="line">UPDATE nested_category SET lft = lft + @myWidth WHERE lft &gt; @destRight AND deleted=0;</span><br><span class="line"></span><br><span class="line">UPDATE nested_category SET rgt = rgt -(@myLeft-@destRight) WHERE deleted=2;</span><br><span class="line">UPDATE nested_category SET lft = lft -(@myLeft-@destRight) WHERE deleted=2;</span><br><span class="line">UPDATE nested_category SET rgt = rgt + @myWidth WHERE category_id = 9;</span><br><span class="line">UPDATE nested_category SET deleted=0 WHERE  deleted=2;</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>

<p>将分类5移动到分类9前面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1 FROM nested_category WHERE  category_id = 5;</span><br><span class="line">UPDATE nested_category SET deleted=2 WHERE lft BETWEEN @myLeft AND @myRight;</span><br><span class="line">UPDATE nested_category SET rgt = rgt - @myWidth WHERE rgt &gt; @myRight AND deleted=0;</span><br><span class="line">UPDATE nested_category SET lft = lft - @myWidth WHERE lft &gt; @myRight AND deleted=0;</span><br><span class="line"></span><br><span class="line">SELECT @destLeft := lft,@destRight := rgt FROM nested_category WHERE  category_id = 9;</span><br><span class="line"></span><br><span class="line">UPDATE nested_category SET rgt = rgt + @myWidth WHERE rgt &gt;= @destLeft  AND deleted=0;</span><br><span class="line">UPDATE nested_category SET lft = lft + @myWidth WHERE lft &gt;= @destLeft AND deleted=0;</span><br><span class="line"></span><br><span class="line">UPDATE nested_category SET rgt = rgt -(@myLeft-@destRight) WHERE deleted=2;</span><br><span class="line">UPDATE nested_category SET lft = lft -(@myLeft-@destRight) WHERE deleted=2;</span><br><span class="line">UPDATE nested_category SET deleted=0 WHERE  deleted=2;</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>

<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>预排序遍历树算法的核心就是牺牲了写的性能来换取读取的性能 在你的开发的应用遇到此类问题的时 <strong>（读压力 &gt; 写压力）</strong>，尝试下使用预排序遍历树算法来提高你的程序的性能吧。</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx 全局变量对照]]></title>
      <url>http://www.wulai.me/2014/12/05/nginx-e5-85-a8-e5-b1-80-e5-8f-98-e9-87-8f-e5-af-b9-e7-85-a7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>remote_addr     客户端ip,如：192.168.4.2<br>binary_remote_addr  客户端ip（二进制)<br>remote_port     客户端port，如：50472<br>remote_user     已经经过Auth Basic Module验证的用户名<br>host            请求主机头字段，否则为服务器名称，如:dwz.stamhe.com<br>request         用户请求信息，如：GET /?_a=index&amp;_m=show&amp;count=10 HTTP/1.1<br>request_filename    当前请求的文件的路径名，由root或alias和URI request组合而成，如：/webserver/htdocs/dwz/index.php<br>status          请求的响应状态码,如:200<br>body_bytes_sent 响应时送出的body字节数数量。即使连接中断，这个数据也是精确的,如：40<br>content_length  请求头中的Content-length字段<br>content_type    请求头中的Content-Type字段<br>http_referer    引用地址<br>http_user_agent 客户端agent信息,如：Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11<br>args            如：_a=index&amp;_m=show&amp;count=10<br>document_uri    与$uri相同,如：/index.php<br>document_root   针对当前请求的根路径设置值,如：/webserver/htdocs/dwz<br>hostname        如：centos53.localdomain<br>http_cookie     客户端cookie信息<br>cookie_COOKIE   cookie COOKIE变量的值<br>is_args         如果有$args参数，这个变量等于”?”，否则等于””，空值，如?<br>limit_rate      这个变量可以限制连接速率，0表示不限速<br>query_string    与$args相同,如：_a=index&amp;_m=show&amp;count=10<br>realpath_root   如：/webserver/htdocs/dwz<br>request_body     记录POST过来的数据信息<br>request_body_file   客户端请求主体信息的临时文件名<br>request_method  客户端请求的动作，通常为GET或POST,如：GET<br>request_uri     包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。不能修改。如：/index.php?_a=index&amp;_m=show&amp;count=10<br>scheme          HTTP方法（如http，https）,如：http<br>uri             如：/index.php<br>request_completion  如果请求结束，设置为OK. 当请求未结束或如果该请求不是请求链串的最后一个时，为空(Empty)，如：OK<br>server_protocol 请求使用的协议，通常是HTTP/1.0或HTTP/1.1，如：HTTP/1.1<br>server_addr     服务器地址，在完成一次系统调用后可以确定这个值，如：192.168.4.129<br>server_name     服务器名称，如：dwz.stamhe.com<br>server_port     请求到达服务器的端口号,如：80</p>
]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[查看jquery版本]]></title>
      <url>http://www.wulai.me/2014/12/05/e6-9f-a5-e7-9c-8bjquery-e7-89-88-e6-9c-ac/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code>alert($.fn.jquery);</code></pre>]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[11个重要的数据库设计规则]]></title>
      <url>http://www.wulai.me/2014/11/29/11-e4-b8-aa-e9-87-8d-e8-a6-81-e7-9a-84-e6-95-b0-e6-8d-ae-e5-ba-93-e8-ae-be-e8-ae-a1-e8-a7-84-e5-88-99/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>英文原文： <a href="http://www.c-sharpcorner.com/UploadFile/shivprasadk/11-important-database-designing-rules/" target="_blank" rel="noopener">11 Important Database designing rules</a></p>
<h3 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h3><p>　　在您开始阅读这篇文章之前，我得明确地告诉您，我并不是一个数据库设计领域的大师。以下列出的 11 点是我对自己在平时项目实践和阅读中学习到的经验总结出来的个人见解。我个人认为它们对我的数据库设计提供了很大的帮助。实属一家之言，欢迎拍砖 : )</p>
<p>　　我之所以写下这篇这么完整的文章是因为，很多开发者一参与到数据库设计，就会很自然地把 “三范式” 当作银弹一样来使用。他们往往认为遵循这个规范就是数据库设计的唯一标准。由于这种心态，他们往往尽管一路碰壁也会坚持把项目做下去。</p>
<p>　　如果你对 “三范式” 不清楚，<a href="http://www.hillock.com.cn/?p=77" target="_blank" rel="noopener">请点击这里（FQ）</a>一步一步的了解什么是“三范式”。</p>
<p>　　大家都说标准规范是重要的指导方针并且也这么做着，但是把它当作石头上的一块标记来记着（死记硬背）还是会带来麻烦的。以下 11 点是我在数据库设计时最优先考虑的规则。</p>
<h3 id="规则-1：弄清楚将要开发的应用程序是什么性质的（OLTP-还是-OPAP）？"><a href="#规则-1：弄清楚将要开发的应用程序是什么性质的（OLTP-还是-OPAP）？" class="headerlink" title="规则 1：弄清楚将要开发的应用程序是什么性质的（OLTP 还是 OPAP）？"></a>规则 1：弄清楚将要开发的应用程序是什么性质的（OLTP 还是 OPAP）？</h3><p>　　当你要开始设计一个数据库的时候，你应该首先要分析出你为之设计的应用程序是什么类型的，它是 “事务处理型”（Transactional） 的还是 “分析型” （Analytical）的？你会发现许多开发人员采用标准化做法去设计数据库，而不考虑目标程序是什么类型的，这样做出来的程序很快就会陷入性能、客户定制化的问题当中。正如前面所说的，这里有两种应用程序类型， “基于事务处理” 和 “基于分析”，下面让我们来了解一下这两种类型究竟说的是什么意思。 　　事务处理型：这种类型的应用程序，你的最终用户更关注数据的增查改删（CRUD，Creating/Reading/Updating/Deleting）。这种类型更加官方的叫法是 “OLTP” 。</p>
<p>　　<strong>分析型：</strong> 这种类型的应用程序，你的最终用户更关注数据分析、报表、趋势预测等等功能。这一类的数据库的 “插入” 和 “更新” 操作相对来说是比较少的。它们主要的目的是更加快速地查询、分析数据。这种类型更加官方的叫法是 “OLAP” 。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214001086.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214001086.jpg" alt="2012041214001086"></a></p>
<p>　　那么换句话说，如果你认为插入、更新、删除数据这些操作在你的程序中更为突出的话，那就设计一个规范化的表否则的话就去创建一个扁平的、不规范化的数据库结构。</p>
<p>　　以下这个简单的图表显示了像左边 Names 和 Address 这样的简单规范化的表，怎么通过应用不规范化结构来创建一个扁平的表结构。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214003338.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214003338.jpg" alt="2012041214003338"></a></p>
<h3 id="规则-2：将你的数据按照逻辑意义分成不同的块，让事情做起来更简单"><a href="#规则-2：将你的数据按照逻辑意义分成不同的块，让事情做起来更简单" class="headerlink" title="规则 2：将你的数据按照逻辑意义分成不同的块，让事情做起来更简单"></a>规则 2：将你的数据按照逻辑意义分成不同的块，让事情做起来更简单</h3><p>　　这个规则其实就是 “三范式” 中的第一范式。违反这条规则的一个标志就是，你的查询使用了很多字符串解析函数</p>
<p>　　例如 substring、charindex 等等。若真如此，那就需要应用这条规则了。</p>
<p>　　比如你看到的下面图片上有一个有学生名字的表，如果你想要查询学生名字中包含“Koirala”，但不包含“Harisingh”的记录，你可以想象一下你将会得到什么样的结果。</p>
<p>　　所以更好的做法是将这个字段拆分为更深层次的逻辑分块，以便我们的表数据写起来更干净，以及优化查询。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214010291.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214010291.jpg" alt="2012041214010291"></a></p>
<h3 id="规则-3：不要过度使用-“规则-2”"><a href="#规则-3：不要过度使用-“规则-2”" class="headerlink" title="规则 3：不要过度使用 “规则 2”"></a>规则 3：不要过度使用 “规则 2”</h3><p>　　开发者都是一群很可爱的生物。如果你告诉他们这是一条解决问题的正路，他们就会一直这么做下去，做到过了头导致了一些不必要的后果。这也可以应用于我们刚刚在前面提到的规则2。当你考虑字段分解时，先暂停一下，并且问问你自己是否真的需要这么做。正如所说的，分解应该是要符合逻辑的。</p>
<p>　　例如，你可以看到电话号码这个字段，你很少会把电话号码的 ISD 代码单独分开来操作（除非你的应用程序要求这么做）。所以一个很明智的决定就是让它保持原样，否则这会带来更多的问题。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214012642.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214012642.jpg" alt="2012041214012642"></a></p>
<h3 id="规则-4：把重复、不统一的数据当成你最大的敌人来对待"><a href="#规则-4：把重复、不统一的数据当成你最大的敌人来对待" class="headerlink" title="规则 4：把重复、不统一的数据当成你最大的敌人来对待"></a>规则 4：把重复、不统一的数据当成你最大的敌人来对待</h3><p>　　集中那些重复的数据然后重构它们。我个人更加担心的是这些重复数据带来的混乱而不是它们占用了多少磁盘空间。</p>
<p>　　例如下面这个图表，你可以看到 “5th Standard” 和 “Fifth standard” 是一样的意思，它们是重复数据。现在你可能会说是由于那些录入者录入了这些重复的数据或者是差劲的验证程序没有拦住，让这些重复的数据进入到了你的系统。现在，如果你想导出一份将原本在用户眼里十分困惑的数据显示为不同实体数据的报告，该怎么做呢？</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214015638.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214015638.jpg" alt="2012041214015638"></a></p>
<p>　　解决方法之一是将这些数据完整地移到另外一个主表，然后通过外键引用过来。在下面这个图表中你可以看到我们是如何创建一个名为 “Standards”（课程级别） 的主表，然后同样地使用简单的外键连接过去。</p>
<p>　　 <a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214022798.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214022798.jpg" alt="2012041214022798"></a></p>
<h3 id="规则-5：当心被分隔符分割的数据，它们违反了“字段不可再分”"><a href="#规则-5：当心被分隔符分割的数据，它们违反了“字段不可再分”" class="headerlink" title="规则 5：当心被分隔符分割的数据，它们违反了“字段不可再分”"></a>规则 5：当心被分隔符分割的数据，它们违反了“字段不可再分”</h3><p>　　前面的规则 2 即“第一范式”说的是避免 “重复组” 。下面这个图表作为其中的一个例子解释了 “重复组”是什么样子的。如果你仔细的观察 syllabus（课程） 这个字段，会发现在这一个字段里实在是填充了太多的数据了。像这些字段就被称为 “重复组” 了。如果我们又得必须使用这些数据，那么这些查询将会十分复杂并且我也怀疑这些查询会有性能问题。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214025658.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214025658.jpg" alt="2012041214025658"></a></p>
<p>　　这些被塞满了分隔符的数据列需要特别注意，并且一个较好的办法是将这些字段移到另外一个表中，使用外键连接过去，同样地以便于更好的管理。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214031733.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214031733.jpg" alt="2012041214031733"></a></p>
<p>　　那么，让我们现在就应用规则2（第一范式） “避免重复组” 吧。你可以看到上面这个图表，我创建了一个单独的 syllabus（课程） 表，然后使用 “多对多” 关系将它与 subject（科目） 表关联起来。</p>
<p>　　通过这个方法，主表（student 表）的 syllabus（课程） 字段就不再有重复数据和分隔符了。</p>
<h3 id="规则-6：当心那些仅仅部分依赖主键的列"><a href="#规则-6：当心那些仅仅部分依赖主键的列" class="headerlink" title="规则 6：当心那些仅仅部分依赖主键的列"></a>规则 6：当心那些仅仅部分依赖主键的列</h3><p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214033858.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214033858.jpg" alt="2012041214033858"></a></p>
<p>　　留心注意那些仅仅部分依赖主键的列。例如上面这个图表，我们可以看到这个表的主键是 Roll No.+Standard。现在请仔细观察 syllabus 字段，可以看到 syllabus（课程） 字段仅仅关联（依赖） Standard（课程级别） 字段而不是直接地关联（依赖）某个学生（Roll No. 字段）。</p>
<p>　　Syllabus（课程） 字段关联的是学生正在学习的哪个课程级别（Standard 字段）而不是直接关联到学生本身。那如果明天我们要更新教学大纲（课程）的话还要痛苦地为每个同学也修改一下，这明显是不符合逻辑的（不正常的做法）。更有意义的做法是将这些字段从这个表移到另外一个表，然后将它们与 Standard（课程级别）表关联起来。</p>
<p>　　你可以看到我们是如何移动 syllabus（课程）字段并且同样地附上 Standard 表。</p>
<p>　　这条规则只不过是 “三范式” 里的 “第二范式”：“所有字段都必须完整地依赖主键而不是部分依赖”。 　　</p>
<h3 id="规则-7：仔细地选择派生列"><a href="#规则-7：仔细地选择派生列" class="headerlink" title="规则 7：仔细地选择派生列"></a>规则 7：仔细地选择派生列</h3><p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214040275.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214040275.jpg" alt="2012041214040275"></a></p>
<p>　　如果你正在开发一个 OLTP 型的应用程序，那强制不去使用派生字段会是一个很好的思路，除非有迫切的性能要求，比如经常需要求和、计算的 OLAP 程序，为了性能，这些派生字段就有必要存在了。</p>
<p>　　通过上面的这个图表，你可以看到 Average 字段是如何依赖 Marks 和 Subjects 字段的。这也是冗余的一种形式。因此对于这样的由其他字段得到的字段，需要思考一下它们是否真的有必要存在。</p>
<p>　　这个规则也被称为 “三范式” 里的第三条：“不应该有依赖于非主键的列” 。 我的个人看法是不要盲目地运用这条规则，应该要看实际情况，冗余数据并不总是坏的。如果冗余数据是计算出来的，看看实际情况再来决定是否应用这第三范式。</p>
<h3 id="规则-8：如果性能是关键，不要固执地去避免冗余"><a href="#规则-8：如果性能是关键，不要固执地去避免冗余" class="headerlink" title="规则 8：如果性能是关键，不要固执地去避免冗余"></a>规则 8：如果性能是关键，不要固执地去避免冗余</h3><p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/20120412140431791.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/20120412140431791.jpg" alt="2012041214043179"></a></p>
<p>　　不要把 “避免冗余” 当作是一条绝对的规则去遵循。如果对性能有迫切的需求，考虑一下打破常规。常规情况下你需要做多个表的连接操作，而在非常规的情况下这样的多表连接是会大大地降低性能的。 　　</p>
<h3 id="规则-9：多维数据是各种不同数据的聚合"><a href="#规则-9：多维数据是各种不同数据的聚合" class="headerlink" title="规则 9：多维数据是各种不同数据的聚合"></a>规则 9：多维数据是各种不同数据的聚合</h3><p>　　OLAP 项目主要是解决多维数据问题。比如你可以看看下面这个图表，你会想拿到每个国家、每个顾客、每段时期的销售额情况。简单的说你正在看的销售额数据包含了三个维度的交叉。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214045413.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214045413.jpg" alt="2012041214045413"></a></p>
<p>　　为这种情况做一个实际的设计是一个更好的办法。简单的说，你可以创建一个简单的主要销售表，它包含了销售额字段，通过外键将其他所有不同维度的表连接起来。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214051867.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214051867.jpg" alt="2012041214051867"></a></p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/a15.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/a15.jpg" alt="a15"></a></p>
<h3 id="规则-10：将那些具有“名值表”特点的表统一起来设计"><a href="#规则-10：将那些具有“名值表”特点的表统一起来设计" class="headerlink" title="规则 10：将那些具有“名值表”特点的表统一起来设计"></a>规则 10：将那些具有“名值表”特点的表统一起来设计</h3><p>　　很多次我都遇到过这种 “名值表” 。 “名值表” 意味着它有一些键，这些键被其他数据关联着。比如下面这个图表，你可以看到我们有 Currency（货币型）和 Country（国家）这两张表。如果你仔细观察你会发现实际上这些表都只有键和值。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214061280.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214061280.jpg" alt="2012041214061280"></a></p>
<p>　　对于这种表，创建一个主要的表，通过一个 Type（类型）字段来区分不同的数据将会更有意义。 　　</p>
<h3 id="规则-11：无限分级结构的数据，引用自己的主键作为外键"><a href="#规则-11：无限分级结构的数据，引用自己的主键作为外键" class="headerlink" title="规则 11：无限分级结构的数据，引用自己的主键作为外键"></a>规则 11：无限分级结构的数据，引用自己的主键作为外键</h3><p>　　我们会经常碰到一些无限父子分级结构的数据（树形结构？）。例如考虑一个多级销售方案的情况，一个销售人员之下可以有多个销售人员。注意到都是 “销售人员” 。也就是说数据本身都是一种。但是层级不同。这时候我们可以引用自己的主键作为外键来表达这种层级关系，从而达成目的。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214063167.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214063167.jpg" alt="2012041214063167"></a></p>
<p>　　这篇文章的用意不是叫大家不要遵循范式，而是叫大家不要盲目地遵循范式。根据你的项目性质和需要处理的数据类型来做出正确的选择。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214065062.jpg" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012041214065062.jpg" alt="2012041214065062"></a></p>
]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown: Basics （快速入门）]]></title>
      <url>http://www.wulai.me/2014/11/29/markdown-basics-ef-bc-88-e5-bf-ab-e9-80-9f-e5-85-a5-e9-97-a8-ef-bc-89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>&lt;&lt; <a href="http://wowubuntu.com" target="_blank" rel="noopener">访问 Wow!Ubuntu</a></p>
<p><strong>声明：</strong> 这份文档派生(fork)于<a href="http://markdown.tw/" target="_blank" rel="noopener">繁体中文版</a>，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用 Markdown 语法编写，你可以到这里<a href="http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/basics.md" target="_blank" rel="noopener">查看它的源文件</a>。「繁体中文版的原始文件可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/basics.md" target="_blank" rel="noopener">查看这里</a>」–By @<a href="http://twitter.com/riku" target="_blank" rel="noopener">riku</a></p>
<p><strong>注：</strong> 本项目托管于 <a href="http://gitcafe.com/riku/Markdown-Syntax-CN/" target="_blank" rel="noopener">GitCafe</a>上，请通过”派生”和”合并请求”来帮忙改进本项目。</p>
<h1 id="Markdown-Basics-（快速入门）-点击查看完整语法说明"><a href="#Markdown-Basics-（快速入门）-点击查看完整语法说明" class="headerlink" title="Markdown: Basics （快速入门） / (点击查看完整语法说明)"></a>Markdown: Basics （快速入门） / (<a href="./index.html">点击查看完整语法说明</a>)</h1><h2 id="Getting-the-Gist-of-Markdown’s-Formatting-Syntax"><a href="#Getting-the-Gist-of-Markdown’s-Formatting-Syntax" class="headerlink" title="Getting the Gist of Markdown’s Formatting Syntax"></a>Getting the Gist of Markdown’s Formatting Syntax</h2><p>此页提供了 Markdown 的简单概念， <a href="http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.md" title="Markdown Syntax" target="_blank" rel="noopener">语法说明</a> 页提供了完整详细的文档，说明了每项功能。但是 Markdown 其实很简单就可以上手，此页文档提供了一些范例，并且每个范例都会提供输出的 HTML 结果。</p>
<p>其实直接试试看也是一个很不错的方法， <a href="http://daringfireball.net/projects/markdown/dingus" title="Markdown Dingus" target="_blank" rel="noopener">Dingus</a> 是一个网页应用程序，你可以把自已编写的 Markdown 文档转成 XHTML。</p>
<h2 id="段落、标题、区块代码"><a href="#段落、标题、区块代码" class="headerlink" title="段落、标题、区块代码"></a>段落、标题、区块代码</h2><p>一个段落是由一个以上的连接的行句组成，而一个以上的空行则会划分出不同的段落（空行的定义是显示上看起来像是空行，就被视为空行，例如有一行只有空白和 tab，那该行也会被视为空行），一般的段落不需要用空白或换行缩进。</p>
<p>Markdown 支持两种标题的语法，<a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a> 和 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a> 形式。Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），Atx 形式在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶。</p>
<p>区块引用则使用 email 形式的 ‘<code>&gt;</code>‘ 角括号。</p>
<p>Markdown 语法:</p>
<pre><code>A First Level Header
====================
A Second Level Header
---------------------

Now is the time for all good men to come to
the aid of their country. This is just a
regular paragraph.

The quick brown fox jumped over the lazy
dog&apos;s back.
### Header 3

&gt; This is a blockquote.
&gt;
&gt; This is the second paragraph in the blockquote.
&gt;
&gt; ## This is an H2 in a blockquote</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;h1&gt;A First Level Header&lt;/h1&gt;
&lt;h2&gt;A Second Level Header&lt;/h2&gt;
&lt;p&gt;Now is the time for all good men to come to
the aid of their country. This is just a
regular paragraph.&lt;/p&gt;
&lt;p&gt;The quick brown fox jumped over the lazy
dog&apos;s back.&lt;/p&gt;
&lt;h3&gt;Header 3&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a blockquote.&lt;/p&gt;
&lt;p&gt;This is the second paragraph in the blockquote.&lt;/p&gt;
&lt;h2&gt;This is an H2 in a blockquote&lt;/h2&gt;
&lt;/blockquote&gt;</code></pre><h3 id="修辞和强调"><a href="#修辞和强调" class="headerlink" title="修辞和强调"></a>修辞和强调</h3><p>Markdown 使用星号和底线来标记需要强调的区段。</p>
<p>Markdown 语法:</p>
<pre><code>Some of these words *are emphasized*.
Some of these words _are emphasized also_.
Use two asterisks for **strong emphasis**.
Or, if you prefer, __use two underscores instead__.</code></pre><p>输出 HTML 为:</p>
<pre><code>&lt;p&gt;Some of these words &lt;em&gt;are emphasized&lt;/em&gt;.
Some of these words &lt;em&gt;are emphasized also&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Use two asterisks for &lt;strong&gt;strong emphasis&lt;/strong&gt;.
Or, if you prefer, &lt;strong&gt;use two underscores instead&lt;/strong&gt;.&lt;/p&gt;</code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序列表使用星号、加号和减号来做为列表的项目标记，这些符号是都可以使用的，使用星号：</p>
<pre><code>* Candy.
* Gum.
* Booze.</code></pre><p>加号：</p>
<pre><code>+ Candy.
+ Gum.
+ Booze.</code></pre><p>和减号</p>
<pre><code>- Candy.
- Gum.
- Booze.</code></pre><p>都会输出 HTML 为：</p>
<pre><code>&lt;ul&gt;
&lt;li&gt;Candy.&lt;/li&gt;
&lt;li&gt;Gum.&lt;/li&gt;
&lt;li&gt;Booze.&lt;/li&gt;
&lt;/ul&gt;</code></pre><p>有序的列表则是使用一般的数字接着一个英文句点作为项目标记：</p>
<pre><code>1. Red
2. Green
3. Blue</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;ol&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;
&lt;/ol&gt;</code></pre><p>如果你在项目之间插入空行，那项目的内容会用 <code>&lt;p&gt;</code> 包起来，你也可以在一个项目内放上多个段落，只要在它前面缩排 4 个空白或 1 个 tab 。</p>
<pre><code>* A list item.

    With multiple paragraphs.

* Another item in the list.</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A list item.&lt;/p&gt;
&lt;p&gt;With multiple paragraphs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another item in the list.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</code></pre><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>Markdown 支援两种形式的链接语法： <em>行内</em> 和 <em>参考</em> 两种形式，两种都是使用角括号来把文字转成连结。</p>
<p>行内形式是直接在后面用括号直接接上链接：</p>
<pre><code>This is an [example link](http://example.com/).</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;p&gt;This is an &lt;a href=&quot;http://example.com/&quot;&gt;
example link&lt;/a&gt;.&lt;/p&gt;</code></pre><p>你也可以选择性的加上 title 属性：</p>
<pre><code>This is an [example link](http://example.com/ &quot;With a Title&quot;).</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;p&gt;This is an &lt;a href=&quot;http://example.com/&quot; title=&quot;With a Title&quot;&gt;
example link&lt;/a&gt;.&lt;/p&gt;</code></pre><p>参考形式的链接让你可以为链接定一个名称，之后你可以在文件的其他地方定义该链接的内容：</p>
<pre><code>I get 10 times more traffic from [Google][1] than from
[Yahoo][2] or [MSN][3].

[1]: http://google.com/ &quot;Google&quot;
[2]: http://search.yahoo.com/ &quot;Yahoo Search&quot;
[3]: http://search.msn.com/ &quot;MSN Search&quot;</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from &lt;a href=&quot;http://search.yahoo.com/&quot;
title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt; or &lt;a href=&quot;http://search.msn.com/&quot;
title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;</code></pre><p>title 属性是选择性的，链接名称可以用字母、数字和空格，但是不分大小写：</p>
<pre><code>I start my morning with a cup of coffee and
[The New York Times][NY Times].

[ny times]: http://www.nytimes.com/</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;p&gt;I start my morning with a cup of coffee and
&lt;a href=&quot;http://www.nytimes.com/&quot;&gt;The New York Times&lt;/a&gt;.&lt;/p&gt;</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>图片的语法和链接很像。</p>
<p>行内形式（title 是选择性的）：</p>
<pre><code>![alt text](/path/to/img.jpg &quot;Title&quot;)</code></pre><p>参考形式：</p>
<pre><code>![alt text][id]

[id]: /path/to/img.jpg &quot;Title&quot;</code></pre><p>上面两种方法都会输出 HTML 为：</p>
<pre><code>&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;alt text&quot; title=&quot;Title&quot; /&gt;</code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>在一般的段落文字中，你可以使用反引号 ``` 来标记代码区段，区段内的 <code>&amp;amp;</code>、<code>&lt;</code> 和 <code>&gt;</code> 都会被自动的转换成 HTML 实体，这项特性让你可以很容易的在代码区段内插入 HTML 码：</p>
<pre><code>I strongly recommend against using any `&lt;blink&gt;` tags.

I wish SmartyPants used named entities like `&amp;amp;mdash;`
instead of decimal-encoded entites like `&amp;amp;#8212;`.</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;p&gt;I strongly recommend against using any
&lt;code&gt;&amp;amp;lt;blink&amp;amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
&lt;p&gt;I wish SmartyPants used named entities like
&lt;code&gt;&amp;amp;amp;mdash;&lt;/code&gt; instead of decimal-encoded
entites like &lt;code&gt;&amp;amp;amp;#8212;&lt;/code&gt;.&lt;/p&gt;</code></pre><p>如果要建立一个已经格式化好的代码区块，只要每行都缩进 4 个空格或是一个 tab 就可以了，而 <code>&amp;amp;</code>、<code>&lt;</code> 和 <code>&gt;</code> 也一样会自动转成 HTML 实体。</p>
<p>Markdown 语法:</p>
<pre><code>If you want your page to validate under XHTML 1.0 Strict,
you&apos;ve got to put paragraph tags in your blockquotes:

&lt;blockquote&gt;
&lt;p&gt;For example.&lt;/p&gt;
&lt;/blockquote&gt;</code></pre><p>输出 HTML 为：</p>
<pre><code>&lt;p&gt;If you want your page to validate under XHTML 1.0 Strict,
you&apos;ve got to put paragraph tags in your blockquotes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;amp;lt;blockquote&amp;amp;gt;
&amp;amp;lt;p&amp;amp;gt;For example.&amp;amp;lt;/p&amp;amp;gt;
&amp;amp;lt;/blockquote&amp;amp;gt;
&lt;/code&gt;&lt;/pre&gt;</code></pre>]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[数据库设计三大范式]]></title>
      <url>http://www.wulai.me/2014/11/29/e6-95-b0-e6-8d-ae-e5-ba-93-e8-ae-be-e8-ae-a1-e4-b8-89-e5-a4-a7-e8-8c-83-e5-bc-8f/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>为了建立冗余较小、结构合理的数据库，设计数据库时必须遵循一定的规则。在关系型数据库中这种规则就称为范式。范式是符合某一种设计要求的总结。要想设计一个结构合理的关系型数据库，必须满足一定的范式。</p>
<p>在实际开发中最为常见的设计范式有三个：</p>
<h3 id="1．第一范式-确保每列保持原子性"><a href="#1．第一范式-确保每列保持原子性" class="headerlink" title="1．第一范式(确保每列保持原子性)"></a>1．第一范式(确保每列保持原子性)</h3><p>第一范式是最基本的范式。如果数据库表中的所有字段值都是不可分解的原子值，就说明该数据库表满足了第一范式。</p>
<p>第一范式的合理遵循需要根据系统的实际需求来定。比如某些数据库系统中需要用到“地址”这个属性，本来直接将“地址”属性设计成一个数据库表的字段就行。但是如果系统经常会访问“地址”属性中的“城市”部分，那么就非要将“地址”这个属性重新拆分为省份、城市、详细地址等多个部分进行存储，这样在对地址中某一部分操作的时候将非常方便。这样设计才算满足了数据库的第一范式，如下表所示。 <a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012040114023352.png" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012040114023352.png" alt="2012040114023352"></a> 上表所示的用户信息遵循了第一范式的要求，这样在对用户使用城市进行分类的时候就非常方便，也提高了数据库的性能。</p>
<h3 id="2．第二范式-确保表中的每列都和主键相关"><a href="#2．第二范式-确保表中的每列都和主键相关" class="headerlink" title="2．第二范式(确保表中的每列都和主键相关)"></a>2．第二范式(确保表中的每列都和主键相关)</h3><p>第二范式在第一范式的基础之上更进一层。第二范式需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。也就是说在一个数据库表中，一个表中只能保存一种数据，不可以把多种数据保存在同一张数据库表中。</p>
<p>比如要设计一个订单信息表，因为订单中可能会有多种商品，所以要将订单编号和商品编号作为数据库表的联合主键，如下表所示。 <a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012040114063976.png" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012040114063976.png" alt="2012040114063976"></a></p>
<p><strong>订单信息表</strong></p>
<p>这样就产生一个问题：这个表中是以订单编号和商品编号作为联合主键。这样在该表中商品名称、单位、商品价格等信息不与该表的主键相关，而仅仅是与商品编号相关。所以在这里违反了第二范式的设计原则。</p>
<p>而如果把这个订单信息表进行拆分，把商品信息分离到另一个表中，把订单项目表也分离到另一个表中，就非常完美了。如下所示。</p>
<p><a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012040114082156.png" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012040114082156.png" alt="2012040114082156"></a></p>
<p>这样设计，在很大程度上减小了数据库的冗余。如果要获取订单的商品信息，使用商品编号到商品信息表中查询即可。</p>
<h3 id="3．第三范式-确保每列都和主键列直接相关-而不是间接相关"><a href="#3．第三范式-确保每列都和主键列直接相关-而不是间接相关" class="headerlink" title="3．第三范式(确保每列都和主键列直接相关,而不是间接相关)"></a>3．第三范式(确保每列都和主键列直接相关,而不是间接相关)</h3><p>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。</p>
<p>比如在设计一个订单数据表的时候，可以将客户编号作为一个外键和订单表建立相应的关系。而不可以在订单表中添加关于客户其它信息（比如姓名、所属公司等）的字段。如下面这两个表所示的设计就是一个满足第三范式的数据库表。 <a href="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012040114105477.png" target="_blank" rel="noopener"><img src="http://www.hillock.com.cn/wp-content/uploads/2014/11/2012040114105477.png" alt="2012040114105477"></a> 这样在查询订单信息的时候，就可以使用客户编号来引用客户信息表中的记录，也不必在订单信息表中多次输入客户信息的内容，减小了数据冗余。</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 语法说明 (简体中文版)]]></title>
      <url>http://www.wulai.me/2014/11/29/markdown-e8-af-ad-e6-b3-95-e8-af-b4-e6-98-8e-e7-ae-80-e4-bd-93-e4-b8-ad-e6-96-87-e7-89-88/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>&lt;&lt; <a href="http://wowubuntu.com" target="_blank" rel="noopener">访问 Wow!Ubuntu</a></p>
<p><strong>NOTE:</strong> This is Simplelified  Chinese Edition Document of Markdown Syntax. If you are seeking for English Edition Document. Please refer to <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">Markdown: Syntax</a>.</p>
<p><strong>声明：</strong> 这份文档派生(fork)于<a href="http://markdown.tw/" target="_blank" rel="noopener">繁体中文版</a>，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用 Markdown 语法编写，你可以到这里<a href="http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.md" target="_blank" rel="noopener">查看它的源文件</a>。「繁体中文版的原始文件可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md" target="_blank" rel="noopener">查看这里</a> 。」–By @<a href="http://twitter.com/riku" target="_blank" rel="noopener">riku</a></p>
<p><strong>注：</strong> 本项目托管于 <a href="http://gitcafe.com/riku/Markdown-Syntax-CN/" target="_blank" rel="noopener">GitCafe</a>上，请通过”派生”和”合并请求”来帮忙改进本项目。</p>
<h1 id="Markdown-语法说明-简体中文版-点击查看快速入门"><a href="#Markdown-语法说明-简体中文版-点击查看快速入门" class="headerlink" title="Markdown 语法说明 (简体中文版) / (点击查看快速入门)"></a>Markdown 语法说明 (简体中文版) / (<a href="./basic.html">点击查看快速入门</a>)</h1><ul>
<li><p><a href="#overview">概述</a></p>
<pre><code>*   [宗旨](#philosophy)</code></pre><ul>
<li><a href="#html">兼容 HTML</a></li>
<li><a href="#autoescape">特殊字符自动转换</a></li>
</ul>
</li>
<li><p><a href="#block">区块元素</a></p>
<pre><code>*   [段落和换行](#p)</code></pre><ul>
<li><a href="#header">标题</a></li>
<li><a href="#blockquote">区块引用</a></li>
<li><a href="#list">列表</a></li>
<li><a href="#precode">代码区块</a></li>
<li><a href="#hr">分隔线</a></li>
</ul>
</li>
<li><p><a href="#span">区段元素</a></p>
<pre><code>*   [链接](#link)</code></pre><ul>
<li><a href="#em">强调</a></li>
<li><a href="#code">代码</a></li>
<li><a href="#img">图片</a></li>
</ul>
</li>
<li><p><a href="#misc">其它</a></p>
<pre><code>*   [反斜杠](#backslash)</code></pre><ul>
<li><a href="#autolink">自动链接</a></li>
</ul>
</li>
<li><p><a href="#acknowledgement">感谢</a></p>
</li>
<li><p><a href="#editor">Markdown 免费编辑器</a></p>
</li>
</ul>
<hr>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h3><p>Markdown 的目标是实现「易读易写」。</p>
<p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a>、<a href="http://textism.com/tools/textile/" target="_blank" rel="noopener">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html" target="_blank" rel="noopener">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html" target="_blank" rel="noopener">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/" target="_blank" rel="noopener">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p>
<p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像&#42;强调&#42;。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p>
<h3 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h3><p>Markdown 语法的目标是：成为一种适用于网络的_书写_语言。</p>
<p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想_不是_要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种_发布_的格式，Markdown 是一种_书写_的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p>
<p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p>
<p>要制约的只有一些 HTML 区块元素――比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p&gt;</code> 标签。</p>
<p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p>
<pre><code>这是一个普通段落。

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

这是另一个普通段落。</code></pre><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p>
<p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p>
<p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p>
<h3 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h3><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp;amp;</code> 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;amp;lt;</code> 和 <code>&amp;amp;amp;</code>。</p>
<pre><code>`&amp;amp;` 字符尤其让网络文档编写者受折磨，如果你要打「`AT&amp;amp;T`」 ，你必须要写成「`AT&amp;amp;amp;T`」。而网址中的 `&amp;amp;` 字符也要转换。比如你要链接到：

http://images.google.com/images?num=30&amp;amp;q=larry+bird


你必须要把网址转换写为：

http://images.google.com/images?num=30&amp;amp;amp;q=larry+bird


才能放到链接标签的 `href` 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。

Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 `&amp;amp;` 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 `&amp;amp;amp`;。

所以你如果要在文档中插入一个版权符号 `©`，你可以这样写：

&amp;amp;copy;


Markdown 会保留它不动。而若你写：

AT&amp;amp;T


Markdown 就会将它转为：

AT&amp;amp;amp;T


类似的状况也会发生在 `&lt;` 符号上，因为 Markdown 允许 [兼容 HTML](#html) ，如果你是把 `&lt;` 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：

4 &lt; 5


Markdown 将会把它转换为：

4 &amp;amp;lt; 5


不过需要注意的是，code 范围内，不论是行内还是区块， `&lt;` 和 `&amp;amp;` 两个符号都_一定_会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 `&lt;` 和 `&amp;amp;` 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）

* * *

## 区块元素

### 段落和换行

一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。

「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 `&lt;br /&gt;` 标签。

如果你_确实_想要依赖 Markdown 来插入 `&lt;br /&gt;` 标签的话，在插入处先按入两个以上的空格然后回车。

的确，需要多费点事（多加空格）来产生 `&lt;br /&gt;` ，但是简单地「每个换行都转换为 `&lt;br /&gt;`」的方法在 Markdown 中并不适合， Markdown 中 email 式的 [区块引用](#blockquote) 和多段落的 [列表](#list) 在使用换行来排版的时候，不但更好用，还更方便阅读。

### 标题

Markdown 支持两种标题的语法，类 [Setext](http://docutils.sourceforge.net/mirror/setext.html) 和类 [atx](http://www.aaronsw.com/2002/atx/) 形式。

类 Setext 形式是用底线的形式，利用 `=` （最高阶标题）和 `-` （第二阶标题），例如：

This is an H1
=============

This is an H2
-------------


任何数量的 `=` 和 `-` 都可以有效果。

类 Atx 形式则是在行首插入 1 到 6 个 `#` ，对应到标题 1 到 6 阶，例如：

# 这是 H1

## 这是 H2

###### 这是 H6


你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 `#`，而行尾的 `#` 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：

# 这是 H1 #

## 这是 H2 ##

### 这是 H3 ######


### 区块引用 Blockquotes

Markdown 标记区块引用是使用类似 email 中用 `&gt;` 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 `&gt;` ：

&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&gt;
&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&gt; id sem consectetuer libero luctus adipiscing.


Markdown 也允许你偷懒只在整个段落的第一行最前面加上 `&gt;` ：

&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.


区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 `&gt;` ：

&gt; This is the first level of quoting.
&gt;
&gt; &gt; This is nested blockquote.
&gt;
&gt; Back to the first level.


引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：

&gt; ## 这是一个标题。
&gt;
&gt; 1\.   这是第一行列表项。
&gt; 2\.   这是第二行列表项。
&gt;
&gt; 给出一些例子代码：
&gt;
&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);


任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择_增加引用阶层_。

### 列表

Markdown 支持有序列表和无序列表。

无序列表使用星号、加号或是减号作为列表标记：

*   Red
*   Green
*   Blue


等同于：

+   Red
+   Green
+   Blue


也等同于：

-   Red
-   Green
-   Blue


有序列表则使用数字接着一个英文句点：

1\.  Bird
2\.  McHale
3\.  Parish


很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：

&lt;ol&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;McHale&lt;/li&gt;
&lt;li&gt;Parish&lt;/li&gt;
&lt;/ol&gt;


如果你的列表标记写成：

1\.  Bird
1\.  McHale
1\.  Parish


或甚至是：

3\. Bird
1\. McHale
8\. Parish


你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。

如果你使用懒惰的写法，建议第一个项目最好还是从 1\. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。

列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。

要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：

*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.


但是如果你懒，那也行：

*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.


如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 `&lt;p&gt;`
标签包起来，举例来说：

*   Bird
*   Magic


会被转换为：

&lt;ul&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;Magic&lt;/li&gt;
&lt;/ul&gt;


但是这个：

*   Bird

*   Magic


会被转换为：

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：

1\.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2\.  Suspendisse id sem consectetuer libero luctus adipiscing.


如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：

*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&apos;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.


如果要在列表项目内放进引用，那 `&gt;` 就需要缩进：

*   A list item with a blockquote:

    &gt; This is a blockquote
    &gt; inside a list item.


如果要放代码区块的话，该区块就需要缩进_两次_，也就是 8 个空格或是 2 个制表符：

*   一列表项包含一个列表区块：

        &lt;代码写在这&gt;


当然，项目列表很可能会不小心产生，像是下面这样的写法：

1986\. What a great season.


换句话说，也就是在行首出现_数字-句点-空白_，要避免这样的状况，你可以在句点前面加上反斜杠。

1986\. What a great season.


### 代码区块

和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 `&lt;pre&gt;` 和 `&lt;code&gt;` 标签来把代码区块包起来。

要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：

这是一个普通段落：

    这是一个代码区块。


Markdown 会转换成：

&lt;p&gt;这是一个普通段落：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;这是一个代码区块。
&lt;/code&gt;&lt;/pre&gt;


这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：

Here is an example of AppleScript:

    tell application &quot;Foo&quot;
        beep
    end tell


会被转换为：

&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;
    beep
end tell
&lt;/code&gt;&lt;/pre&gt;


一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。

在代码区块里面， `&amp;amp;` 、 `&lt;` 和 `&gt;` 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：

    &lt;div class=&quot;footer&quot;&gt;
        &amp;amp;copy; 2004 Foo Corporation
    &lt;/div&gt;


会被转换为：

&lt;pre&gt;&lt;code&gt;&amp;amp;lt;div class=&quot;footer&quot;&amp;amp;gt;
    &amp;amp;amp;copy; 2004 Foo Corporation
&amp;amp;lt;/div&amp;amp;gt;
&lt;/code&gt;&lt;/pre&gt;


代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。

### 分隔线

你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：

* * *

***

*****

- - -

---------------------------------------


* * *

## 区段元素

### 链接

Markdown 支持两种形式的链接语法： _行内式_和_参考式_两种形式。

不管是哪一种，链接文字都是用 [方括号] 来标记。

要建立一个_行内式_的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：

This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.


会产生：

&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;
an example&lt;/a&gt; inline link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no
title attribute.&lt;/p&gt;


如果你是要链接到同样主机的资源，你可以使用相对路径：

See my [About](/about/) page for details.   


_参考式_的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：

This is [an example][id] reference-style link.


你也可以选择性地在两个方括号中间加上一个空格：

This is [an example] [id] reference-style link.


接着，在文件的任意处，你可以把这个标记的链接内容定义出来：

[id]: http://example.com/  &quot;Optional Title Here&quot;


链接内容定义的形式为：</code></pre><ul>
<li><p>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</p>
</li>
<li><p>接着一个冒号</p>
</li>
<li><p>接着一个以上的空格或制表符</p>
</li>
<li><p>接着链接的网址</p>
</li>
<li><p>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</p>
<p>下面这三种链接的定义都是相同：</p>
<p>[foo]: <a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a>  “Optional Title Here”<br>[foo]: <a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a>  ‘Optional Title Here’<br>[foo]: <a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a>  (Optional Title Here)</p>
</li>
</ul>
<pre><code>**请注意：**有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。

链接网址也可以用尖括号包起来：

[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;


你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：

[id]: http://example.com/longish/path/to/resource/here
    &quot;Optional Title Here&quot;


网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。

链接辨别标签可以有字母、数字、空白和标点符号，但是并_不_区分大小写，因此下面两个链接是一样的：

[link text][a]
[link text][A]


_隐式链接标记_功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 &quot;Google&quot; 链接到 google.com，你可以简化成：

[Google][]


然后定义链接内容：

[Google]: http://google.com/


由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：

Visit [Daring Fireball][] for more information.


然后接着定义链接：

[Daring Fireball]: http://daringfireball.net/


链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。

下面是一个参考式链接的范例：

I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &quot;Google&quot;
  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [3]: http://search.msn.com/    &quot;MSN Search&quot;


如果改成用链接名称的方式写：

I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;


上面两种写法都会产生下面的 HTML。

&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from
&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;
or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;


下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：

I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).


参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。

使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。

### 强调

Markdown 使用星号（`*`）和底线（`_`）作为标记强调字词的符号，被 `*` 或 `_` 包围的字词会被转成用 `&lt;em&gt;` 标签包围，用两个 `*` 或 `_` 包起来的话，则会被转成 `&lt;strong&gt;`，例如：

*single asterisks*

_single underscores_

**double asterisks**

__double underscores__


会转成：

&lt;em&gt;single asterisks&lt;/em&gt;

&lt;em&gt;single underscores&lt;/em&gt;

&lt;strong&gt;double asterisks&lt;/strong&gt;

&lt;strong&gt;double underscores&lt;/strong&gt;


你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。

强调也可以直接插在文字中间：

un*frigging*believable


但是**如果你的 `*` 和 `_` 两边都有空白的话，它们就只会被当成普通的符号**。

如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：

\*this text is surrounded by literal asterisks\*


### 代码

如果要标记一小段行内代码，你可以用反引号把它包起来（```），例如：

Use the `printf()` function.


会产生：

&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;


如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：

``There is a literal backtick (`) here.``


这段语法会产生：

&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;


代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：

A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``


会产生：

&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;


在代码区段内，`&amp;amp;` 和尖括号**都**会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：

Please don&apos;t use any `&lt;blink&gt;` tags.


转为：

&lt;p&gt;Please don&apos;t use any &lt;code&gt;&amp;amp;lt;blink&amp;amp;gt;&lt;/code&gt; tags.&lt;/p&gt;


你也可以这样写：

`&amp;amp;#8212;` is the decimal-encoded equivalent of `&amp;amp;mdash;`.


以产生：

&lt;p&gt;&lt;code&gt;&amp;amp;amp;#8212;&lt;/code&gt; is the decimal-encoded
equivalent of &lt;code&gt;&amp;amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;


### 图片

很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。

Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： _行内式_和_参考式_。

行内式的图片语法看起来像是：

![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)


详细叙述如下：</code></pre><ul>
<li><p>一个惊叹号 <code>!</code></p>
</li>
<li><p>接着一个方括号，里面放上图片的替代文字</p>
</li>
<li><p>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上<br>选择性的 ‘title’ 文字。</p>
<p>参考式的图片语法则长得像这样：</p>
<p>![Alt text][id]</p>
</li>
</ul>
<pre><code>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：

[id]: url/to/image  &quot;Optional title attribute&quot;


到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 `&lt;img&gt;` 标签。

* * *

## 其它

### 自动链接

Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：

&lt;http://example.com/&gt;


Markdown 会转为：

&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;


邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：

&lt;address@example.com&gt;


Markdown 会转成：

&lt;a href=&quot;&amp;amp;#x6D;&amp;amp;#x61;i&amp;amp;#x6C;&amp;amp;#x74;&amp;amp;#x6F;:&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;
&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;
&amp;amp;#109;&quot;&gt;&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;
&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;&amp;amp;#109;&lt;/a&gt;


在浏览器里面，这段字串（其实是 `&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;`）会变成一个可以点击的「address@example.com」链接。

（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）

### 反斜杠

Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 `&lt;em&gt;` 标签），你可以在星号的前面加上反斜杠：

\*literal asterisks\*


Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：

\   反斜线
`   反引号
*   星号
_   底线
{}  花括号
[]  方括号
()  括弧
#   井字号
+   加号
-   减号
.   英文句点
!   惊叹号</code></pre><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>感谢 <a href="https://twitter.com/#!/leafy7382" target="_blank" rel="noopener">leafy7382</a> 协助翻译，<a href="http://iamhlb.com/" target="_blank" rel="noopener">hlb</a>、<a href="http://twitter.com/randylien" target="_blank" rel="noopener">Randylien</a> 帮忙润稿，<a href="https://twitter.com/#!/ethantw" target="_blank" rel="noopener">ethantw</a> 的<a href="http://ethantw.net/projects/han/" target="_blank" rel="noopener">汉字标准格式・CSS Reset</a>， <a href="http://kidwm.net/" target="_blank" rel="noopener">WM</a> 回报文字错误。</p>
<p>感谢 <a href="https://github.com/fenprace" target="_blank" rel="noopener">fenprace</a>，<a href="https://github.com/addv" target="_blank" rel="noopener">addv</a>。</p>
<hr>
<h2 id="Markdown-免费编辑器"><a href="#Markdown-免费编辑器" class="headerlink" title="Markdown 免费编辑器"></a>Markdown 免费编辑器</h2><p>Windows 平台</p>
<ul>
<li><a href="http://markdownpad.com/" target="_blank" rel="noopener">MarkdownPad</a></li>
<li><a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="noopener">MarkPad</a></li>
</ul>
<p>Linux 平台</p>
<ul>
<li><a href="http://sourceforge.net/p/retext/home/ReText/" target="_blank" rel="noopener">ReText</a></li>
</ul>
<p>Mac 平台</p>
<ul>
<li><a href="http://mouapp.com/" target="_blank" rel="noopener">Mou</a></li>
</ul>
<p>在线编辑器</p>
<ul>
<li><a href="http://markable.in/" target="_blank" rel="noopener">Markable.in</a></li>
<li><a href="http://dillinger.io/" target="_blank" rel="noopener">Dillinger.io</a></li>
</ul>
<p>浏览器插件</p>
<ul>
<li><a href="https://chrome.google.com/webstore/detail/oknndfeeopgpibecfjljjfanledpbkog" target="_blank" rel="noopener">MaDe</a> (Chrome)</li>
</ul>
<p>高级应用</p>
<ul>
<li><a href="http://www.sublimetext.com/2" target="_blank" rel="noopener">Sublime Text 2</a> + <a href="http://ttscoff.github.com/MarkdownEditing/" target="_blank" rel="noopener">MarkdownEditing</a> / <a href="http://lucifr.com/2012/07/12/markdownediting-for-sublime-text-2/" target="_blank" rel="noopener">教程</a></li>
</ul>
<p>&#42;** 如有更好的 Markdown 免费编辑器推荐，请到<a href="https://gitcafe.com/riku/Markdown-Syntax-CN/tickets/1" target="_blank" rel="noopener">这里反馈</a>，谢谢！</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[APC缓存简介]]></title>
      <url>http://www.wulai.me/2014/11/28/73/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>1、APC缓存简介 APC，全称是Alternative PHP Cache，官方翻译叫”可选PHP缓存”。它为我们提供了缓存和优化PHP的中间代码的框架。 APC的缓存分两部分:系统缓存和用户数据缓存。 系统缓存 它是指APC把PHP文件源码的编译结果缓存起来，然后在每次调用时先对比时间标记。如果未过期，则使用缓存的中间代码运行。默认缓存 3600s(一小时)。但是这样仍会浪费大量CPU时间。因此可以在php.ini中设置system缓存为永不过期(apc.ttl=0)。不过如果这样设置，改运php代码后需要重启WEB服务器。目前使用较多的是指此类缓存。 用户数据缓存 缓存由用户在编写PHP代码时用apc_store和apc_fetch函数操作读取、写入的。如果数据量不大的话，可以一试。如果数据量大，使用类似memcache此类的更加专著的内存缓存方案会更好 缓存key生成规则 APC的缓存中的每个slot都会有一个key，key是 apc_cache_key_t结构体类型，除了key相关的属性，关键是h字段的生成。 h字段决定了此元素落于slots数组的哪一个位置。对于用户缓存和系统缓存，其生成规则不同。 用户缓存通过apc_cache_make_user_key函数生成key。通过用户传递进来的key字符串，依赖PHP内核中的hash函数（PHP的hashtable所使用的hash函数：zend_inline_hash_func），生成h值。 系统缓存通过apc_cache_make_file_key函数生成key。通过APC的配置项apc.stat的开关来区别对待不同的方案。在打开的情况下，即 apc.stat= On 时，如果被更新则自动重新编译和缓存编译后的内容。此时的h值是文件的device和inode相加所得的值。在关闭的情况下，即apc.stat=off时，当文件被修改后，如果要使更新的内容生效，则必须重启Web服务器。此时h值是根据文件的路径地址生成，并且这里的路径是绝对路径。即使你是使用的相对路径，也会查找PG(include_path)定位文件，以取得绝对路径，所以使用绝对路径会跳过检查，可以提高代码的效率。 添加缓存过程 以用户缓存为例，apc_add函数用于给APC缓存中添加内容。如果key参数为字符串中，APC会根据此字符串生成key，如果key参数为数组，APC会遍历整个数组，生成key。根据这些key，APC会调用&#95;apc&#95;store将值存储到缓存中。由于这是用户缓存，当前使用的缓存为apc_user_cache。执行写入操作的是apc_cache_make_user_entry函数，其最终调用apc_cache_user_insert执行遍历查询和写入操作。与此对应，系统缓存使用apc_cache_insert执行写入操作，其最终都会调用&#95;apc&#95;cache_insert。 不管是用户缓存还是系统缓存，大体的执行过程类似，步骤如下：</p>
<p>通过求余操作，定位当前key的在slots数组中的位置： cache-&gt;slots[key.h % cache-&gt;num_slots]; 在定位到slots数组中的位置后，遍历当前key对应的slot链表，如果存在slot的key和要写入的key匹配或slot过期，清除当前slot。 在最后一个slot的后面插入新的slot。 2、APC模块安装 WINDOWS 第一步：下载php_apc.dll 在<a href="http://pecl.php.net/package/apc" target="_blank" rel="noopener">http://pecl.php.net/package/apc</a> 要与php版本对应 将php_apc.dll放入你的ext目录</p>
<p>第二步：让php.ini支持apc扩展模块。 然后打开php.ini 加入：</p>
<p>extension=php_apc.dll</p>
<p>apc.rfc1867 = on</p>
<p>apc.max_file_size = 100M</p>
<p>upload_max_filesize = 100M</p>
<p>post_max_size = 100M</p>
<p>//以上参数可自己定义</p>
<p>第三步：检查是否支持PHP APC apc_store apc_fetch PHP APC 配置参数 把相关的配置放在一起解释。</p>
<p>apc.enabled=1 apc.enabled默认值是1，你可设成0禁用APC。如果你设置为0的时候，同样把extension=apc.so也注释掉（这样可以节约内存资源）。一旦启用了APC功能，则会缓存Opcodes到共享内存。</p>
<p>apc.shm_segments = 1</p>
<p>总结 1,使用Spinlocks锁机制，能够达到最佳性能。</p>
<p>2,APC提供了apc.php，用于监控与管理APC缓存。不要忘记修改管理员名和密码</p>
<p>3,APC默认通过mmap匿名映射创建共享内存，缓存对象都存放在这块”大型”的内存空间。由APC自行管理该共享内存</p>
<p>4,我们需要通过统计调整apc.shm_size、apc.num_files_hints、apc.user_entries_hint的值。直到最佳</p>
<p>5,好吧，我承认apc.stat = 0 可以获得更佳的性能。要我做什么都可以接受.</p>
<p>6,PHP预定义常量，可以使用apc_define_constants()函数。不过据APC开发者介绍说pecl hidef性能更佳，抛异define吧，它是低效的。</p>
<p>7,函数apc_store()，对于系统设置等PHP变量，生命周期是整个应用(从httpd守护进程直到httpd守护进程关闭)，使用APC比Memcached会更好。必竟不要经过网络传输协议tcp。</p>
<p>8,APC不适于通过函数apc_store()缓存频繁变更的用户数据，会出现一些奇异现象。</p>
<p>LIUNX wget <a href="http://pecl.php.net/get/APC-3.1.8.tgz" target="_blank" rel="noopener">http://pecl.php.net/get/APC-3.1.8.tgz</a></p>
<p>tar -zxvf APC-3.1.8.tgz cd APC-3.1.8</p>
<p>/usr/local/php/bin/phpize</p>
<p>./configure –enable-apc –enable-mmap –enable-apc-spinlocks –disable-apc-pthreadmutex –with-php-config=/usr/local/php/bin/php-config</p>
<p>make</p>
<p>sudo make install</p>
<p>在/usr/local/php/etc/php.ini 加入</p>
<p>extension = “apc.so” ;</p>
<p>;APC setting</p>
<p>apc.enabled = 1</p>
<p>apc.shm_segments = 1</p>
<p>apc.shm_size = 64M</p>
<p>apc.optimization = 1</p>
<p>apc.num_files_hint = 0</p>
<p>apc.ttl = 0</p>
<p>apc.gc_ttl = 3600</p>
<p>apc.cache_by_default = on</p>
<p>重启apache 或者 /usr/local/php/sbin/php-fpm restart</p>
<p>查看phpinfo apc</p>
<p>下面引用<a href="http://www.initphp.com" target="_blank" rel="noopener">www.initphp.com</a> 框架的APC缓存类 initphp框架之APC缓存类 [php] &lt;?php if (!defined(‘IS_INITPHP’)) exit(‘Access Denied!’); /<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>*****</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong> * InitPHP 2.0 国产PHP开发框架 Dao-APC缓存 不适合频繁写入的缓存数据 <em>——————————————————————————- * 版权所有: CopyRight By initphp.com * 您可以自由使用该源码，但是在使用过程中，请保留作者信息。尊重他人劳动成果就是尊重自己 <em>——————————————————————————- * $Author:zhuli * $Dtime:2011-10-09 <strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>*****</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></em></em>/ class apcInit {</p>
<pre><code>/**
 * Apc缓存-设置缓存
 * 设置缓存key，value和缓存时间
 * @param  string $key   KEY值
 * @param  string $value 值
 * @param  string $time  缓存时间
 */ 
public function set_cache($key, $value, $time = 0) {  
    if ($time == 0) $time = null; //null情况下永久缓存 
    return apc_store($key, $value, $time);; 
} 

/**
 * Apc缓存-获取缓存
 * 通过KEY获取缓存数据
 * @param  string $key   KEY值
 */ 
public function get_cache($key) { 
    return apc_fetch($key); 
} 

/**
 * Apc缓存-清除一个缓存
 * 从memcache中删除一条缓存
 * @param  string $key   KEY值
 */ 
public function clear($key) { 
    return apc_delete($key); 
} 

/**
 * Apc缓存-清空所有缓存
 * 不建议使用该功能
 * @return
 */ 
public function clear_all() { 
    apc_clear_cache(&apos;user&apos;); //清除用户缓存 
    return apc_clear_cache(); //清楚缓存 
} 

/**
 * 检查APC缓存是否存在
 * @param  string $key   KEY值
 */ 
public function exists($key) { 
    return apc_exists($key); 
} 

/**
 * 字段自增-用于记数
 * @param string $key  KEY值
 * @param int    $step 新增的step值
 */ 
public function inc($key, $step) { 
    return apc_inc($key, (int) $step); 
} 

/**
 * 字段自减-用于记数
 * @param string $key  KEY值
 * @param int    $step 新增的step值
 */ 
public function dec($key, $step) { 
    return apc_dec($key, (int) $step); 
} 

/**
 * 返回APC缓存信息
 */ 
public function info() { 
    return apc_cache_info(); 
} </code></pre><p>}</p>
]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[微信公共账号测试号申请]]></title>
      <url>http://www.wulai.me/2014/11/18/e5-be-ae-e4-bf-a1-e5-85-ac-e5-85-b1-e8-b4-a6-e5-8f-b7-e6-b5-8b-e8-af-95-e5-8f-b7-e7-94-b3-e8-af-b7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><code>http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login</code></p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS中SSH连接中文乱码]]></title>
      <url>http://www.wulai.me/2014/11/17/centos-e4-b8-adssh-e8-bf-9e-e6-8e-a5-e4-b8-ad-e6-96-87-e4-b9-b1-e7-a0-81/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>CentOS 6 ，在SSH时回显中文乱码，则：</p>
<p>修改 /etc/sysconfig/i18n 文件</p>
<p>命令：</p>
<pre><code>vi /etc/sysconfig/i18n


将里面的文字 最终修改为：

LANG=&quot;zh_CN.GB18030&quot;
LANGUAGE=&quot;zh_CN.GB18030:zh_CN.GB2312:zh_CN&quot;
SUPPORTED=&quot;zh_CN.UTF-8:zh_CN:zh:en_US.UTF-8:en_US:en&quot;
SYSFONT=&quot;lat0-sun16&quot;</code></pre><p>最后，断开重连SSH就可以了，进入用date命令既可查看效果</p>
]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS系统iptables如何打开端口和查看规则]]></title>
      <url>http://www.wulai.me/2014/11/16/centos-e7-b3-bb-e7-bb-9fiptables-e5-a6-82-e4-bd-95-e6-89-93-e5-bc-80-e7-ab-af-e5-8f-a3-e5-92-8c-e6-9f-a5-e7-9c-8b-e8-a7-84-e5-88-99/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>CentOS安装好如果希望开放其他端口的话，需要打开所需端口,比如打开http的默认端口80</p>
<p>编辑iptables</p>
<pre><code>root:vi /etc/sysconfig/iptables</code></pre><p>添加</p>
<pre><code>-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT</code></pre><p>重新启动服务</p>
<pre><code>/sbin/service iptables restart</code></pre><p>查看端口是否开放</p>
<pre><code>/sbin/iptables -L -n</code></pre>]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[解决LNMP下提示fileinfo插件没安装（PHP安装fileinfo扩展教程）]]></title>
      <url>http://www.wulai.me/2014/11/15/e8-a7-a3-e5-86-b3lnmp-e4-b8-8b-e6-8f-90-e7-a4-bafileinfo-e6-8f-92-e4-bb-b6-e6-b2-a1-e5-ae-89-e8-a3-85-ef-bc-88php-e5-ae-89-e8-a3-85fileinfo-e6-89-a9-e5-b1-95-e6-95-99-e7-a8-8b-ef-bc-89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>编译并安装fileinfo插件</p>
<pre><code>cd /root/lnmp1.0-full/php-5.3.17/ext/fileinfo
/usr/local/php/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config
make &amp;amp;&amp;amp; make install


在PHP配置中添加fileinfo插件
用vim编辑php.ini

vim /usr/local/php/etc/php.ini


找到 &quot;;extension=php_bz2.dll&quot; 这一行
在其上面添加一行：

extension = fileinfo.so


然后重启lnmp

/root/lnmp restart</code></pre><p>结束！</p>
]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[linux下删除所有.svn目录]]></title>
      <url>http://www.wulai.me/2014/11/12/linux-e4-b8-8b-e5-88-a0-e9-99-a4-e6-89-80-e6-9c-89-svn-e7-9b-ae-e5-bd-95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>linux下删除所有.svn目录方法为</p>
<pre><code>find . -type d -name &quot;.svn&quot;|xargs rm -rf</code></pre>]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[(转)LNMP整合安装Redmine2.3实录]]></title>
      <url>http://www.wulai.me/2014/11/07/e8-bd-aclnmp-e6-95-b4-e5-90-88-e5-ae-89-e8-a3-85redmine2-3-e5-ae-9e-e5-bd-95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>自上一次在LNMP环境下安装过Redmine之后发表了《LNMP下安装Redmine2.3手记》，Inhu决定再一次尝试。因为上一次Inhu是通过折中的办法，也就是利用bitnami+lnmp这种做法实现的。现在我再一次决定在LNMP环境下不利用任何的一键安装包安装Redmine。</p>
<p>首先，我在这里不得不声明几点。</p>
<p>服务器系统时Centos6，试过在Centos5下安装，但由于软件库等各种问题最后在安装ImageMagick的时候失败了。所以建议大家使用Centos6。</p>
<p>首先，我们都安装好了Lnmp（一键安装，没修改任何配置目录的情况下）后。开始实施我们的Redmine安装了。</p>
<h3 id="1-安装ruby环境"><a href="#1-安装ruby环境" class="headerlink" title="1 安装ruby环境"></a>1 安装ruby环境</h3><p>执行以下命令：</p>
<pre><code>yum -y install zlib-devel curl-devel openssl-devel apr-devel apr-util-devel mysql-devel ImageMagick ImageMagick-devel rdoc gcc-c++ ruby ruby-devel 


上面的命令是安装各种要用到的软件包，这时候Ruby应该是装好的了，你可以通过命令:

ruby –v 


进行查看Ruby的版本。当安装完以后我们实行第二步。

### 2 安装 RubyGems

访问：http://rubygems.org/pages/download

然后下载zip包或者tar包，然后解压出来后，进入目录执行以下命令：

ruby setup.rb gem -v gem install passenger


如果是国内主机的话，建议使用

http://ruby.taobao.org/


淘宝提供的一个RubyGems源。如何使用网站上面有详细说明，如果是国外主机就无需设置了。 然后执行以下命令：

passenger-install-nginx-module


这时候我们的操作步骤应该是： 填入lnmp目录下的Nginx源目录.例如:

&gt; /root/download/lnmp1.0-full/nginx-1.2.7
&gt; /usr/local/nginx 


如果需要IPV6的话，在设置配置参数的时候加上 –with-ipv6 然后猛的回车，看到一大堆的编译安装、编译安装了，如无意外就安装成功了。然后它会高亮提示你如何设置Nginx。

http {
       ...
        passenger_root /usr/lib/ruby/gems/1.8/gems/passenger-4.0.5; 
        passenger_ruby /usr/bin/ruby; ... 
     }


到这里，Web的容器环境已经配好了。 然后我们把下载好的Redmine解压出来，放到 /home/www/ 下。

然后进入config目录，复制修改 database.yml.example 文件。

cd /home/www/redmine/config cp database.yml.example database.yml
vi database.yml


修改这个database.yml的时候我们在修改DBname、账户、密码外还要注意的是我们要加一句，如下面的例子：

production:
adapter: mysql2
database: redmine
host: localhost
username: -u
password: “-p”
encoding: utf8
socket: /tmp/mysql.sock


除了production外，我都用 “#”注释掉了。因为用不着。然后去创建数据库了，这里不多说。
然后我们返回上一级目录，修改GemFile。

cd ..
vi Gemfile


在Gemfile第二行开始添加以下内容(可以不添加)：

gem &quot;rake&quot;, &quot;10.0.4&quot;
gem &quot;rack&quot;, &quot;1.4.5&quot;
gem &quot;rubytree&quot;, &quot;0.8.3&quot;, :require =&gt; &quot;tree&quot;
gem &quot;RedCloth&quot;, &quot;~&gt;4.2.9&quot;, :require =&gt; &quot;redcloth&quot; # for CodeRay    
gem &quot;mysql&quot;


添加完之后，执行：

gem install bundle
bundle install --without development test


经过一轮等待后，可以看到成功的界面了吗？没看到，遇到问题了？慢慢搜索解决吧。哈哈
等等……Redmine还没有安装成功呢！
好了，然后执行以下指令吧：

rake generate_secret_token
RAILS_ENV=production rake db:migrate
RAILS_ENV=production rake redmine:load_default_data


非root用户需要添加用户

mkdir -p tmp tmp/pdf public/plugin_assets
sudo chown -R redmine:redmine files log tmp public/plugin_assets
sudo chmod -R 755 files log tmp public/plugin_assets


启动服务

ruby script/rails server webrick -e production


很好，这时应该能测试通过了。那么现在就要去配置Nginx了，在lnmp那里创建一个vHost，然后修改vHost配置文件如下：

server {
         listen 81;
         server_name pm.techoinfo.com;
         index index.html index.htm index.php;
         root /home/www/redmine/public;
         passenger_enabled on;
         access_log  /home/wwwlogs/y.log  y;
    }</code></pre><p>恩恩，就这样大功告成了。记住，Root的目录是指向 redmine 下的 public 目录哦，别搞错了！</p>
<p>如果在安装过程有问题，可以留言给我，因为我也遇到过很多问题。各种环境不一样各种问题啊。<br>原文:<a href="http://inhu.net/install-redmine-with-lnmp.html" target="_blank" rel="noopener">http://inhu.net/install-redmine-with-lnmp.html</a></p>
]]></content>
      
        <categories>
            
            <category> server </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nginx </tag>
            
            <tag> redmine </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[js或css后加?v= 版本号的用法]]></title>
      <url>http://www.wulai.me/2014/10/20/js-e6-88-96css-e5-90-8e-e5-8a-a0v-e7-89-88-e6-9c-ac-e5-8f-b7-e7-9a-84-e7-94-a8-e6-b3-95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code>&lt;span style=&quot;font-size:14px;&quot;&gt;css和js带参数（形如.css?v=与.js?v= 或 .css?version=与.js?version= ）  

&lt;script type=”text/javascript” src=”jb51.js?version=1.2.6″&gt;&lt;/script&gt;  
&lt;link rel=’stylesheet’ href=’base.css?version=2.3.3′ type=’text/css’ /&gt;  </code></pre><p>使用参数有两种可能：</p>
<p>第一、脚本并不存在，而是服务端动态生成的，因此带了个版本号，以示区别。  即上面代码对于文件来说 等价于</p>
<pre><code>&lt;script type=”text/javascript” src=”jb51.js”&gt;&lt;/script&gt;

&lt;link rel=’stylesheet’ href=’base.css’ type=’text/css’ /&gt;</code></pre><p>但浏览器会认为他是 该文件的某个版本！</p>
<p>第二、客户端会缓存这些css或js文件，因此每次升级了js或css文件后，改变版本号，客户端浏览器就会重新下载新的js或css文件 ，刷性缓存的作用。大家可能有时候发现修改了样式或者js，刷新的时候不变，就是客户端缓存了css或者js文件，因此加上参数还是有好处的！</p>
<p>第二种情况最多，也可能两种同时存在。 </p>
]]></content>
      
        <categories>
            
            <category> 未分类 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Xenu-网站死链接检测权威工具]]></title>
      <url>http://www.wulai.me/2014/10/18/xenu-e7-bd-91-e7-ab-99-e6-ad-bb-e9-93-be-e6-8e-a5-e6-a3-80-e6-b5-8b-e6-9d-83-e5-a8-81-e5-b7-a5-e5-85-b7/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>Xenu 是一款深受业界好评，并被广泛使用的死链接检测工具。</p>
<p>时常检测网站并排除死链接，对网站的 SEO 非常重要，因为大量死链接存在会降低用户和搜索引擎对网站的信任。</p>
<p>我们推荐的死链接检测工具 Xenu 主要具有以下特征：</p>
<p>需要下载安装，不到1M大小，用户界面非常简洁，操作简单。 检测彻底：能够检测到图片、框架、插件、背景、样式表、脚本和 java 程序中的链接。 报告形式合理多样，死链接一目了然。 提供出现死链接的网页，方便扫除导出链接错误。 能够侦测重定向URL 可以选择是否侦测站外链接。 对于小型简单网站，可以用来制作HTML格式网站地图。</p>
<p>死链接检测工具 Xenu 下载地址：<a href="http://home.snafu.de/tilman/XENU.ZIP" target="_blank" rel="noopener">http://home.snafu.de/tilman/XENU.ZIP</a></p>
<p>不懂英文者使用指南：</p>
<p>下载，并安装。 打开后，出现 Tips and Tricks 窗口，点击 Close 按钮。 点击左上第二行第一个按钮。 出现一个对话框，在对话框第一行，写入自己的URL。如：<a href="http://chenyanshi.com" target="_blank" rel="noopener">http://chenyanshi.com</a> 按底部的“OK”，就完成了。 报告结果中，出现红色的部分即是死链接。 原创文章，转载请注明： 转载自RICKYCHEN</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[DenyHosts]]></title>
      <url>http://www.wulai.me/2014/09/30/denyhosts/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="DenyHosts介绍"><a href="#DenyHosts介绍" class="headerlink" title="DenyHosts介绍"></a>DenyHosts介绍</h3><p>DenyHosts是Python语言写的一个程序，它会分析sshd的日志文件（/var/log/secure），当发现重 复的攻击时就会记录IP到/etc/hosts.deny文件，从而达到自动屏IP的功能。</p>
<h3 id="DenyHosts应用"><a href="#DenyHosts应用" class="headerlink" title="DenyHosts应用"></a>DenyHosts应用</h3><p>当你的linux服务器暴露在互联网之中，该服务器将会遭到互联网上的扫描软件进行扫描，并试图猜测SSH登录口令。</p>
<p>你会发现，每天会有多条SSH登录失败纪录。那些扫描工具将对你的服务器构成威胁，你必须设置复杂登录口令，并将尝试多次登录失败的IP给阻止掉，让其在一段时间内不能访问该服务器。</p>
<p>用DenyHosts可以阻止试图猜测SSH登录口令，它会分析/var/log/secure等日志文件，当发现同一IP在进行多次SSH密码尝试时就会记录IP到/etc/hosts.deny文件，从而达到自动屏蔽该IP的目的。</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql修改字符集]]></title>
      <url>http://www.wulai.me/2014/09/11/mysql-e4-bf-ae-e6-94-b9-e5-ad-97-e7-ac-a6-e9-9b-86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><pre><code>ALTER TABLE `games` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;</code></pre>]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[MongoDB安装]]></title>
      <url>http://www.wulai.me/2014/09/01/mongodb-e5-ae-89-e8-a3-85/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h3 id="MongoDB安装"><a href="#MongoDB安装" class="headerlink" title="MongoDB安装"></a>MongoDB安装</h3><pre><code>wget -c http://fastdl.mongodb.org/linux/mongodb-linux-i686-2.4.1.tgz ;
tar zxvf mongodb-src-r2.4.1.tar.gz
mv mongodb-linux-i686-2.4.1 /usr/local/mongodb/
/usr/local/mongodb/bin/mongod --dbpath=/usr/local/mongodb/data/ --logpath=/usr/local/mongodb/dblogs --fork</code></pre><h3 id="启动以后可以查看mongodb进程树"><a href="#启动以后可以查看mongodb进程树" class="headerlink" title="启动以后可以查看mongodb进程树"></a>启动以后可以查看mongodb进程树</h3><pre><code>pstree -p |grep mongod</code></pre><h3 id="可能出现的问题："><a href="#可能出现的问题：" class="headerlink" title="可能出现的问题："></a>可能出现的问题：</h3><p>问题一：</p>
<pre><code>-bash: /usr/local/bin/mongo: /lib/ld-linux.so.2: bad ELF interpreter: 没有那个文件或目录</code></pre><p>解决办法：</p>
<pre><code>yum install ld-linux.so.2</code></pre><p>问题二：</p>
<pre><code>mongo: error while loading shared libraries: libstdc++.so.6: cannot open shared object file: No such file or directory</code></pre><p>解决办法：</p>
<pre><code>yum whatprovides libstdc++.so.6
yum install llibstdc++.so.6</code></pre><h4 id="PHP-MongoDB-扩展"><a href="#PHP-MongoDB-扩展" class="headerlink" title="PHP MongoDB 扩展"></a>PHP MongoDB 扩展</h4><pre><code>cd /usr/local/src
wget -c http://pecl.php.net/get/mongo-1.4.4.tgz
tar -xzvf ./mongo-1.4.4.tgz
cd ./mongo-1.4.4
/usr/local/php/bin/phpize # 利用PHP的 phpize 命令来安装扩展
./configure --with-php-config=/usr/local/php/bin/php-config
make &amp;amp;&amp;amp; make install</code></pre><p>完成后，编辑你 php.ini 文件增加一行。</p>
<pre><code>extension=mongo.so</code></pre><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>关闭注意 这里禁止使用 kill -9 PID 关闭mongodb进程，会导致mongod.lock导致再一次无法开启mongodb，必须删除mongod.lock再能开启 可以使用pkill mongod 或者 killall mongod 来结束mongodb进程 出处：<a href="http://www.crackedzone.com" target="_blank" rel="noopener">http://www.crackedzone.com</a> 完成后，请编辑你php.ini文件增加一行 extension=mongo.so 一般默认的编译php的ini文件在 /usr/local/php/etc/php.ini 重启你的web服务器或者php-fpm，打印phpinfo，如果看到mongo项表，那么mongodb的扩展安装成功了</p>
]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx+php 显示php]]></title>
      <url>http://www.wulai.me/2014/08/28/nginxphp-e6-98-be-e7-a4-baphp/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="修改php-ini"><a href="#修改php-ini" class="headerlink" title="修改php.ini"></a>修改php.ini</h2><pre><code>short_open_tag = On</code></pre>]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[让wordpress主题绕开对google的依赖]]></title>
      <url>http://www.wulai.me/2014/08/21/e8-ae-a9wordpress-e4-b8-bb-e9-a2-98-e7-bb-95-e5-bc-80-e5-af-b9google-e7-9a-84-e4-be-9d-e8-b5-96/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>终于有个借着写技术博客顺便吐槽GFW的机会了。每当网速很快，却偏偏不能谷歌搜索，好不容易搜到个跟问题十分匹配的网站，结果点进去菊花转了几百圈页面还是加载不出来，这显然是件让人很蛋疼的事情。虽然我学会了安装和配置翻墙神器goagent，但我仍然为很多很多很多不会翻墙和不愿意或者没钱买vpn的人叫一下委屈，其实会弄goagent这种的除了少数的一些个搞技术的一般人也弄不来。还有，即使是弄goagent，一，它也是很费时的，配置麻烦，偶尔还要更新程序，二，最近装新系统，准备下载goagent和浏览器代理插件的时候发现，goagent的程序托管在google仓库，proxyswitch要去google应用商店下，但问题是尼玛要访问google的东西你得先翻墙啊<del>为了能翻墙得先翻墙才行，悖论啊</del> 呃。。好了，吐槽结束。该说正事儿了。对了，不知道GFW的去谷歌吧，哦不对，还是去百度吧，谷歌怕你上不去呢。 事情是这样的，基于wordpress的网站里面的主题会用到google的资源，比如我的<a href="http://sudodev.cn/" target="_blank" rel="noopener">blog站</a>用的twentytwelve主题就引用了谷歌的字体，里面就有个这样的链接:<a href="http://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,400,700&subset=latin,latin-ext" target="_blank" rel="noopener">http://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,400,700&amp;subset=latin,latin-ext</a> 由于身在天朝的原因，你在访问我的blog的时候就会由于浏览器请求不到这个资源而一直在转菊花（loading加载），运气好只能显示部分图片信息，字看不见，而且是永远看不见那种，除非你像我一样翻墙了。好，既然是这样，那我们把它要请求的东西都下载到服务器上，把链接换成内部链接就好了。here we go:</p>
<div class="md-section-divider">
</div>

<h2 id="1-离线资源"><a href="#1-离线资源" class="headerlink" title="1.离线资源"></a>1.离线资源</h2><ul>
<li>把这个网站对应的css下载下来，给它取个名字，比如我叫他googlefonts.css。</li>
<li>打开那个css文件，你会发现里面还有一些url是指向google的，分别都下载下来放在一起。比如我把css文件和里面的四个woff的url对应的字体文件都下下来放到了一个叫fonts的文件夹。</li>
<li>修改那个googlefonts.css文件中指向google的url。由于你把离线下来的那些woff文件放在该css同一个目录，所以你把/前面的所有内容都去掉，留个文件名即可</li>
<li>把fonts文件夹放在对应主题的目录里。比如我放在wp-content/twentytwelve/css/下面</li>
</ul>
<div class="md-section-divider">
</div>

<h2 id="2-修改引用url-原来主题上的url是指向google的，现在要将它改成指向内部的css文件，即前面的googlefonts-css文件。那么去哪里改呢？我是在主题目录里执行"><a href="#2-修改引用url-原来主题上的url是指向google的，现在要将它改成指向内部的css文件，即前面的googlefonts-css文件。那么去哪里改呢？我是在主题目录里执行" class="headerlink" title="2.修改引用url ,原来主题上的url是指向google的，现在要将它改成指向内部的css文件，即前面的googlefonts.css文件。那么去哪里改呢？我是在主题目录里执行"></a>2.修改引用url ,原来主题上的url是指向google的，现在要将它改成指向内部的css文件，即前面的googlefonts.css文件。那么去哪里改呢？我是在主题目录里执行</h2><p><code>grep googleapis . -r</code>找到的，是在wp-content/twentytwelve/functions.php文件里。在</p>
<div class="md-section-divider">
</div>

<ol>
<li><code>&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt;$font_url &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt; add_query_arg&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt; $query_args&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot; style=&quot;color: #008800;&quot;&gt;&quot;$protocol://fonts.googleapis.com/css&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;);&lt;/span&gt;</code></li>
</ol>
<p>后面加两句</p>
<div class="md-section-divider">
</div>

<ol>
<li><code>&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt;$filePath &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt; dirname&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;str&quot; style=&quot;color: #008800;&quot;&gt;&quot;/css/fonts/googlefonts.css&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;;&lt;/span&gt;</code></li>
<li><code>&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt;$font_url &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;str&quot; style=&quot;color: #008800;&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt;$filePath&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt; strpos&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: #000000;&quot;&gt;$filePath&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;str&quot; style=&quot;color: #008800;&quot;&gt;&quot;wp-content&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600;&quot;&gt;));&lt;/span&gt;</code></li>
</ol>
<p>好了，网站已经彻底摆脱了对google的依赖，马麻再也不用担心访问我的网站只能看到转菊花了~ ：）</p>
<blockquote>
<p>你可能会眨巴着你一双无辜的水汪汪的大眼睛，问：你连谷歌都不上去又怎么离线它的css资源呢，这不也是悖论吗？我微风中头一甩，待额头上整齐的头发潇洒平安的降落在头的一侧的时候，答：当然是先把墙给翻了再做这件事喽，傻瓜~</p>
</blockquote>
<div class="md-section-divider">
</div>

<h2 id="另：网站中添加的谷歌analytics的js代码不会对网页加载产生影响。因为它是动态写上去，等网站发起对ga-js的请求的时候，网页中该请求的东西都请求完了。所以不会影响，只是有墙的情况下，由于ga-js请求不到，会影响google-analytics对你网站流量监控的准确性。-lt-转载于：http-sudodev-cn-articles-354-html-gt"><a href="#另：网站中添加的谷歌analytics的js代码不会对网页加载产生影响。因为它是动态写上去，等网站发起对ga-js的请求的时候，网页中该请求的东西都请求完了。所以不会影响，只是有墙的情况下，由于ga-js请求不到，会影响google-analytics对你网站流量监控的准确性。-lt-转载于：http-sudodev-cn-articles-354-html-gt" class="headerlink" title="另：网站中添加的谷歌analytics的js代码不会对网页加载产生影响。因为它是动态写上去，等网站发起对ga.js的请求的时候，网页中该请求的东西都请求完了。所以不会影响，只是有墙的情况下，由于ga.js请求不到，会影响google analytics对你网站流量监控的准确性。     &lt;转载于：http://sudodev.cn/articles/354.html&gt;"></a>另：网站中添加的谷歌analytics的js代码不会对网页加载产生影响。因为它是动态写上去，等网站发起对ga.js的请求的时候，网页中该请求的东西都请求完了。所以不会影响，只是有墙的情况下，由于ga.js请求不到，会影响google analytics对你网站流量监控的准确性。     &lt;转载于：<a href="http://sudodev.cn/articles/354.html&gt;" target="_blank" rel="noopener">http://sudodev.cn/articles/354.html&gt;</a></h2>]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[过滤javascript,html标签很重要]]></title>
      <url>http://www.wulai.me/2014/08/21/e8-bf-87-e6-bb-a4javascripthtml-e6-a0-87-e7-ad-be-e5-be-88-e9-87-8d-e8-a6-81/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><div class="title" style="color: #000000;">

<h1 id><a href="#" class="headerlink" title></a></h1><pre><code>过滤javascript,html标签很重要</code></pre></div>

<div class="meta" style="font-style: italic; color: #000000;">
  张映 发表于 2010-09-26 分类目录： [php](http://blog.51yip.com/category/php "查看 php 的全部文章")
</div>

<div class="entry" style="color: #000000;">
  用户输入的东西是不可信认的，例如，用户注册，用户评论等，这样的数据，你不光要做好防sql的注入，还要防止JS的注入,html的注入。   **一，javascript注入的危害** 举个简单的例子，我在一个网站留言了，并且这个网站没有对JS进行过滤,我在留言中加入以下内容 <div class="dp-highlighter">
    <div class="bar">
      <div class="tools" style="color: silver;">
        [查看](http://blog.51yip.com/php/1031.html#)[复制](http://blog.51yip.com/php/1031.html#)[打印](http://blog.51yip.com/php/1031.html#)[?](http://blog.51yip.com/php/1031.html#)
      </div>
    </div>

<ol>
<li><p><span style="color: black;"><script language="javascript">  </span></p>
</li>
<li><p><span style="color: black;"> <span class="keyword" style="font-weight: bold; color: #006699;">for</span>(i=0;i>=0;i++){  </span></p>
</li>
<li><p><span style="color: black;"> alert(<span class="string" style="color: blue;">'我弹'</span>);  </span></p>
</li>
<li><p><span style="color: black;"> }  </span></p>
</li>
<li><p><span style="color: black;"> </script>  </span></p>
</li></ol></div> 上面的代码虽然简单，可是可以无限循环，并且会一直弹东西出来，让人感觉很不爽，直到浏览器没有响应为止。浏览您网站的人，第一反应肯定是这个网站有病毒。 解决办法 

<div class="dp-highlighter">
<div class="bar">
  <div class="tools" style="color: silver;">
    [查看](http://blog.51yip.com/php/1031.html#)[复制](http://blog.51yip.com/php/1031.html#)[打印](http://blog.51yip.com/php/1031.html#)[?](http://blog.51yip.com/php/1031.html#)
  </div>
</div>

<li><p><span style="color: black;"><span class="vars">$comment</span> = preg_replace(<span class="string" style="color: blue;">“/&lt;[^&gt;&lt;]<em>script[^&gt;&lt;]</em>&gt;/i”</span>,<span class="string" style="color: blue;">‘’</span>,<span class="vars">$comment</span>);  </span></p>
</li></div> 把里面的javascript标签去掉就行了。 

<p><strong>二，html注入的危害</strong> 1，容易引起页面错乱，对用户输入html标签不做处理的话，在读取的时候，很有可能就会破坏页面的布局。 2，影响seo，做seo的人都知道，pr高的网址，如果有链接，链到你的网站的话，可以加大自己网站的权重，这也是为什么有那么多人喜欢在高pr网站灌水的原因了。如果你没有对html标签进行处理的话，我输入以下内容 <div class="dp-highlighter"></div></p>
<div class="bar">
  <div class="tools" style="color: silver;">
    [查看](http://blog.51yip.com/php/1031.html#)[复制](http://blog.51yip.com/php/1031.html#)[打印](http://blog.51yip.com/php/1031.html#)[?](http://blog.51yip.com/php/1031.html#)
  </div>
</div>

<li><p><span style="color: black;"><span class="tag" style="font-weight: bold; color: #006699;">&lt;</span><span class="tag-name" style="font-weight: bold; color: #006699;">a</span> <span class="attribute" style="color: red;">href</span>=<span class="attribute-value" style="color: blue;">“<a href="http://XXX.com&quot;" target="_blank" rel="noopener">http://XXX.com&quot;</a></span> <span class="attribute" style="color: red;">style</span>=<span class="attribute-value" style="color: blue;">“display:none;”</span><span class="tag" style="font-weight: bold; color: #006699;">&gt;</span>XXX.COM<span class="tag" style="font-weight: bold; color: #006699;">&lt;/</span><span class="tag-name" style="font-weight: bold; color: #006699;">a</span><span class="tag" style="font-weight: bold; color: #006699;">&gt;</span>  </span></p>
</li></div> XXX.COM是个不河蟹网站,政府肯定会河蟹的,如果你的网站有链接到这样的网址,很有可能导致,你网站权重降低. 危害肯定不止这二个,因此要对这些html标签进行处理 

<div class="dp-highlighter">
<div class="bar">
  <div class="tools" style="color: silver;">
    [查看](http://blog.51yip.com/php/1031.html#)[复制](http://blog.51yip.com/php/1031.html#)[打印](http://blog.51yip.com/php/1031.html#)[?](http://blog.51yip.com/php/1031.html#)
  </div>
</div>

<li><p><span style="color: black;"><span class="vars">$comment</span> = preg_replace(<span class="string" style="color: blue;">“/&lt;[/!]<em>?[^&lt;&gt;]</em>?&gt;/si”</span>,<span class="string" style="color: blue;">‘’</span>,<span class="vars">$comment</span>);  </span></p>
</li></div> 过滤的方法有好多，也可以直接把<>这样的符号转义掉，或者直接删除掉都是可以的。   

<p><strong>转载请注明 作者:海底苍鹰 地址:<a href="http://blog.51yip.com/php/1031.html" target="_blank" rel="noopener">http://blog.51yip.com/php/1031.html</a></strong></p>


]]></content>
      
        <categories>
            
            <category> 技术文章 </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
